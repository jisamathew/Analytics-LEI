{"version":3,"sources":["./src/app/service/web3.service.ts","./src/app/service/backend.service.ts","ipfs-utils/src/files/glob-source (ignored)","webpack:///util (ignored)?3ca8","buffer (ignored)","electron-fetch (ignored)","http (ignored)","https (ignored)","./src/app/service/ipfs.service.ts","./src/app/shlist-dialog/shlist-dialog.component.ts","./src/app/shlist-dialog/shlist-dialog.component.html","./src/app/bank/analytics/analytics.component.ts","./src/app/bank/analytics/analytics.component.html","./src/app/toolbar/toolbar.component.ts","webpack:///buffer (ignored)?8adb","util (ignored)","webpack:///util (ignored)?8dbc","crypto (ignored)","webpack:///util (ignored)?c227","./src/environments/environment.ts","./src/app/service/web3storage.service.ts","./src/app/user/user-login/user-login.component.ts","./src/app/user/user-login/user-login.component.html","./src/app/bank/roles/roles.component.ts","./src/app/bank/roles/roles.component.html","./src/app/service/api.service.ts","./src/app/bank/transaction-issue/transaction-issue.component.ts","./src/app/bank/transaction-issue/transaction-issue.component.html","./src/app/bank/issuing-transaction/issuing-transaction.component.ts","./src/app/bank/issuing-transaction/issuing-transaction.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/bank/history/history.component.ts","./src/app/bank/history/history.component.html","./src/app/user/user-register/user-register.component.ts","./src/app/user/user-register/user-register.component.html","./src/app/app.module.ts","./src/app/bank/bank-dashboard/bank-dashboard.component.ts","./src/app/bank/bank-dashboard/bank-dashboard.component.html","./src/app/bank/lei-issue/lei-issue.component.ts","./src/app/bank/lei-issue/lei-issue.component.html","./src/app/loader/loader.module.ts","./src/app/material/material.module.ts","./src/app/bank/advisory-transaction/advisory-transaction.component.ts","./src/app/bank/advisory-transaction/advisory-transaction.component.html","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/loader/loader.service.ts","./src/app/bank/loginfo/loginfo.component.ts","./src/app/bank/loginfo/loginfo.component.html","./src/app/app-routing.module.ts","./src/app/bank/transaction-history/transaction-history.component.ts","./src/app/bank/transaction-history/transaction-history.component.html","./src/app/bank/bank.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n// const marketPlaceArtifacts = require('../../../build/contracts/MarketPlace.json');\nconst registrationArtifacts = require('../../../build/contracts/Registration.json');\nconst myLogsArtifcats = require('../../../build/contracts/Logs.json');\n\nconst createClient = require('ipfs-http-client')\n\n\ndeclare var require;\nconst Web3 = require('web3');\ndeclare let window: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Web3Service {\n\n  private messageResult: any;\n  ipfsHex:any;\n\n  constructor() {\n  }\n\n\n  public checkAndInstantiateWeb3(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      if (window.ethereum) {\n        this.messageResult = 'connected';\n        window.web3 = new Web3(window.ethereum);\n        window.ethereum.enable();\n        resolve(this.messageResult);\n      } else if (window.web3) {\n        this.messageResult = 'connected';\n        window.web3 = new Web3(window.web3.currentProvider);\n        resolve(this.messageResult);\n      } else {\n        this.messageResult = 'No Erthereum browser detected. you should consider trying MetaMask';\n        reject(this.messageResult);\n      }\n    });\n  }\n\n  public loadBlockChainData(): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const web3 = window.web3;\n      const account = web3.eth.getAccounts();\n      if (account !== undefined) {\n        resolve(account);\n      } else {\n        this.messageResult = 'There is no account';\n        reject(this.messageResult);\n      }\n    });\n0  }\n\n  // public getContract() {\n  //   return new Promise((resolve) => {\n  //     const web3 = window.web3;\n  //     let networkId;\n  //     web3.eth.net.getId()\n  //       .then((netId: any) => {\n  //         networkId = netId;\n  //         const abi = marketPlaceArtifacts.abi;\n  //         const networkAddress = marketPlaceArtifacts.networks[networkId].address;\n  //         const marketplace = new web3.eth.Contract(abi, networkAddress);\n  //         resolve(marketplace);\n  //       });\n  //   });\n  // }\n\n  public async getUtf8(data) {\n    return new Promise((resolve) =>{\n    const web3 = window.web3;\n    // console.log(web3.utils.toUtf8(data))\n    resolve(web3.utils.toUtf8(data));\n    });\n  }\n\n  public async getAllContract() {\n    return new Promise((resolve) =>{\n    const web3 = window.web3;\n    let networkId;\n    let contracts = [];\n    // web3.utils.toHex()\n    web3.eth.net.getId()\n    .then((netId: any) => {\n      networkId = netId;\n\n      const abi2 = registrationArtifacts.abi;\n      const networkAddress2 = registrationArtifacts.networks[networkId].address;\n      const registration = new web3.eth.Contract(abi2, networkAddress2);\n      contracts.push(registration);\n\n      const abi7 = myLogsArtifcats.abi;\n      const networkAddress7 = myLogsArtifcats.networks[networkId].address;\n      const myLogs = new web3.eth.Contract(abi7, networkAddress7);\n      contracts.push(myLogs);\n\n      resolve(contracts);\n    });\n    });\n  }\n\n// public get1\n\npublic async convertToHex(data){\n  const web3 = window.web3;\n// this.ipfsHex =\nreturn await web3.utils.toHex(data);\n  // return new Promise((resolve) =>{\n  //   const web3 = window.web3;\n  //   resolve(web3.utils.toHex(data));\n  // })\n}\n\n  // public getOrderContract() {\n  //   return new Promise((resolve) => {\n  //     const web3 = window.web3;\n  //     let networkId;\n  //     web3.eth.net.getId()\n  //       .then((netId: any) => {\n  //         networkId = netId;\n  //         const abi = marketPlaceArtifacts.abi;\n  //         const networkAddress = marketPlaceArtifacts.networks[networkId].address;\n  //         const marketplace = new web3.eth.Contract(abi, networkAddress);\n  //         resolve(marketplace);\n  //       });\n  //   });\n  // }\n\n  // public getRegistrationContract() {\n  //   return new Promise((resolve) => {\n  //     const web3 = window.web3;\n  //     let networkId;\n  //     web3.eth.net.getId()\n  //       .then((netId: any) => {\n  //         networkId = netId;\n  //         const abi = marketPlaceArtifacts.abi;\n  //         const networkAddress = marketPlaceArtifacts.networks[networkId].address;\n  //         const marketplace = new web3.eth.Contract(abi, networkAddress);\n  //         resolve(marketplace);\n  //       });\n  //   });\n  // }\n\n  // public getDocumentContract() {\n  //   return new Promise((resolve) => {\n  //     const web3 = window.web3;\n  //     let networkId;\n  //     web3.eth.net.getId()\n  //       .then((netId: any) => {\n  //         networkId = netId;\n  //         const abi = marketPlaceArtifacts.abi;\n  //         const networkAddress = marketPlaceArtifacts.networks[networkId].address;\n  //         const marketplace = new web3.eth.Contract(abi, networkAddress);\n  //         resolve(marketplace);\n  //       });\n  //   });\n  // }\n\n  // public getLogsContract() {\n  //   return new Promise((resolve) => {\n  //     const web3 = window.web3;\n  //     let networkId;\n  //     web3.eth.net.getId()\n  //       .then((netId: any) => {\n  //         networkId = netId;\n  //         const abi = marketPlaceArtifacts.abi;\n  //         const networkAddress = marketPlaceArtifacts.networks[networkId].address;\n  //         const marketplace = new web3.eth.Contract(abi, networkAddress);\n  //         resolve(marketplace);\n  //       });\n  //   });\n  // }\n\n  public convertPriceToEther(price) {\n    const web3 = window.web3;\n    return web3.utils.toWei(price.toString(), 'Ether');\n  }\n\n  public convertEtherToPrice(price) {\n    const web3 = window.web3;\n    return web3.utils.fromWei(price.toString(), 'Ether');\n  }\n\n  public getEtherBalance(account) {\n    return new Promise((resolve) => {\n      const web3 = window.web3;\n      const balance = web3.eth.getBalance(account)\n        .then(ba => {\n          resolve(web3.utils.fromWei(ba, 'Ether'));\n        });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core'\nimport { Web3Service } from './web3.service'\nimport { IpfsService } from './ipfs.service'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { Location } from '@angular/common'\n\nimport {HttpClient,HttpHeaders,HttpParams} from '@angular/common/http'\n\ndeclare var require\nconst bytes32 = require('bytes32')\nconst convertString = require('convert-string')\nconst utf8 = require('utf8')\n\nvar JSZip = require('jszip') //used for qrcode\nvar FileSaver = require('file-saver') //used for qrcode\nvar qr = require('qr-image') //used for qrcode\nvar QRCode = require('qrcode')\nvar axios = require(\"axios\").default;\nimport * as moment from 'moment';\n\nvar options = {\n  method: 'GET',\n  url: 'https://world-clock.p.rapidapi.com/json/utc/now',\n  headers: {\n    'x-rapidapi-host': 'world-clock.p.rapidapi.com',\n    'x-rapidapi-key': '3daf889109msh105101485f48d01p12e662jsnaa5e6cda106c'\n  }\n};\n\ndeclare var Buffer\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendService {\n  agency: any\n  PLNo: any\n  carrierName: any\n\n  globalHash: any\n  globalRow: any\n  bidamount: any\n  bidbankA: any\n  bidbankN: any\n  day: any\n  bankName: any\n  bid: any\n  bankBidAd: any\n  bankBidDAmo: any\n  endDate: any\n  week: any\n\n  constructor(\n    public web3: Web3Service,\n    private ipfs: IpfsService,\n    private snackBar: MatSnackBar,\n    private location: Location,\n    private httpClient: HttpClient\n  ) {}\n  accountNumber: any\n  productName: any\n  productPrice: any\n  show = true\n  totalProduct = []\n  Order = []\n  docs = []\n  public marketPlace: any\n  public registration: any\n  public orders: any\n  public escrow: any\n  public documents: any\n  public logs: any\n  orderNo: any\n  balance: any\n  price: any\n  resultArray = []\n  count = 0\n  lcNum: any\n  bol: any\n  plNum: any\n  CINum:any;\n  bank: any\n  VG: any\n  showalert = true\n  durationInSeconds = 5\n  ipfsConverted: any\n  ipfsConverted2:any;\n  ipfsConverted3:any;\n  ipfsConverted4:any;\n\n  message = 'User Not Registered!'\n  action = 'Please Signup.'\n  nameFromTS = 'Trade TRip User COnsinee'\n  SignedIn: boolean\n  //  SignedIn=false;//landing page\n  // SignedIn=true;//for other pages\n  consigneeLoggedIn = false\n  sellerSignedIn = false\n  consigneeName: string\n  public cBank = '0x461994192BACd8734d4bCC5f2f70D69d3428B958'\n  public sBank = '0x58d256712F73407A1551a2C75B6048E305df3BF9'\n\n  dat: any\n  dat2: any\n\n  bolData = []\n\n  loopData: any\n  tokenValue: any;\n  publishDate:any;\n  pubDate:any;\n  getProductsfromCookie() {\n    return new Promise((res, rej) => {\n      var ca = document.cookie.split(';')\n      var oArray = new Array();\n      console.log('value getting from cookie');\n      console.log(c)\n      var total_price = 0\n      for (var i = 0; i < ca.length; i++) {\n        var c = ca[i].split('=')\n        var products = c[0]\n        var quan = c[1]\n        var price = c[2]\n        var actualprice = c[3]\n        var vend = c[4]\n        var prodCode = c[5]\n        // var filesforUsr = {\n        //   prodName: products,\n        //   quantity: quan,\n        //   prodPrice: price,\n        //   manufacturer: vend,\n        // };\n        // oArray.push(filesforUsr);\n        oArray.push({\n          prodName: products,\n          quantity: quan,\n          prodPrice: price,\n          actualAmount:actualprice,\n          manufacturer: vend,\n          productCode:prodCode\n        })\n      }\n      res(oArray)\n    })\n  }\n\n  getSellerAddress(seller) {\n    return new Promise((res, rej) => {\n      console.log('getSellerAddress')\n      console.log(seller)\n      this.bank = bytes32({ input: seller })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .retselleradd(this.bank)\n          .call()\n          .then((v) => {\n            console.log(v)\n            res(v)\n          })\n      })\n    })\n  }\n\n  returnBankAddress(bankName) {\n    return new Promise((resp, rej) => {\n      this.bank = bytes32({ input: bankName })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .retbankadd(this.bank)\n          .call()\n          .then((v) => {\n            console.log(v)\n            resp(v)\n          })\n      })\n    })\n    // throw new Error('Method not implemented.');\n  }\n\n  getUserHashType() {\n    return new Promise((res, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.registration = contractRes[1]\n          this.registration.methods\n            .getUserHashType(this.accountNumber)\n            .call()\n            .then((user) => {\n              this.ipfs.getHashFromIPFS(user[0]).then((data: any) => {\n                this.ipfsConverted = JSON.parse(\n                  Buffer.from(data.value.buffer).toString(),\n                )\n                res(this.ipfsConverted)\n              })\n            })\n        })\n      })\n    })\n  }\n\n  getUserData(address) {\n    return new Promise((res, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .getUserHashType(address)\n          .call()\n          .then((user) => {\n            this.ipfs.getHashFromIPFS(user[0]).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              )\n              // console.log(this.ipfsConverted)\n              // this.message = \"Hello \"+ this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n              // var sellername = data[0].manufacturer;\n              res(this.ipfsConverted)\n            })\n          })\n      })\n    })\n  }\n\n  // applyLC(orderNo) {\n  //   return new Promise((resp, rej) => {\n  //     var price = 1\n  //     this.getUserHashType().then((user: any) => {\n  //       // console.log(user)\n  //       // console.log(user.bankAddress)\n  //       this.web3.getAllContract().then((contractRes: any) => {\n  //         this.escrow = contractRes[3]\n  //         // this..meth\n  //         this.orderNo = bytes32({ input: orderNo })\n  //         this.price = this.web3.convertPriceToEther(price)\n  //         this.escrow.methods\n  //           .ApplyForLC(user.bankAddress, this.orderNo)\n  //           .send({ from: this.accountNumber, value: this.price })\n  //           .once('receipt', (receipt) => {\n  //             console.log(receipt)\n  //             this.snackBar.open('LC Requested', 'Check order table', {\n  //               duration: 3000,\n  //             })\n  //             // this.cookieDeletion();\n  //             this.redirectBack();\n              \n  //             resp(receipt)\n  //           })\n  //       })\n  //     })\n  //   })\n  // }\n\n  applyLC(orderNo) {\n    return new Promise((resp, rej) => {\n      var price;\n      this.getUserHashType().then((user: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.escrow = contractRes[3]\n          this.orderNo = bytes32({ input: orderNo })\n          this.returnBids(orderNo).then((result:any) => {\n            console.warn(\"prinitng the checking conditions\");\n            console.log(result);\n            if(result[0] && result[1]){\n              this.getProductsinOrder(orderNo).then((product: any) => {\n                this.getUSD().subscribe((usd:any)=>{\n                  var USD = usd.USD;\n                  console.log(USD);\n                \n              price =(parseFloat(product.actualAmount) - result[5])/USD;\n                console.log('actualamt');\n                console.log(product.actualAmount)\n                console.log('result[5]')\n                console.log(result[5]);\n                console.log('price reduced')\n                console.log(price)\n                // this.bidamount = parseInt(bid[5])/USD;\n                // console.log(this.bidamount)\n                this.price = this.web3.convertPriceToEther(price);\n \n\n          // this.price = this.web3.convertPriceToEther(price);\n          this.bankBidAd = result[4];\n          this.bankBidDAmo = result[5];\n          console.log(this.price);\n              this.escrow.methods\n              .ApplyForLCBid(user.bankAddress, this.orderNo,this.bankBidAd,this.bankBidDAmo)\n              .send({ from: this.accountNumber, value: this.price })\n              .once('receipt', (receipt) => {\n                console.log(receipt)\n                this.snackBar.open('LC Requested', 'Check order table', {\n                  duration: 3000,\n                })\n                // this.cookieDeletion();\n                this.redirectBack();\n                \n                resp(receipt)\n              }) \n              });\n            });\n            }else{\n              this.getProductsinOrder(orderNo).then((product: any) => {\n                console.log(product);\n                // price = parseFloat(product.actualAmount) - result[5];\n                price = parseFloat(product.prodPrice);\n          this.price = this.web3.convertPriceToEther(price);\n          console.log(this.price);\n          this.escrow.methods\n          .ApplyForLC(user.bankAddress, this.orderNo)\n          .send({ from: this.accountNumber, value: this.price })\n          .once('receipt', (receipt) => {\n            console.log(receipt)\n            this.snackBar.open('LC Requested', 'Check order table', {\n              duration: 3000,\n            })\n            this.redirectBack();\n            resp(receipt)\n          })\n        })\n\n            }\n          })\n\n        })\n      })\n    })\n  }\n\n\n  saveOrderToBC(\n    OrderNo,\n    dataFile,\n    dataFile2,\n    consigneeAddress,\n    sellerAddress,\n    total_price,\n    getTimeNow,\n  ) {\n    return new Promise((res, rej) => {\n      this.orderNo = bytes32({ input: OrderNo })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2]\n        this.orders.methods\n          .saveOrderData(\n            this.orderNo,\n            dataFile,\n            dataFile2,\n            this.accountNumber,\n            sellerAddress,\n            total_price,\n            getTimeNow,\n          )\n          .send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt)\n            this.snackBar.open('Order Placed', 'Check order table', {\n              duration: 3000,\n            })\n            // this.cookieDeletion();\n            res(receipt)\n          })\n      })\n    })\n  }\n\n  cookieDeletion() {\n    return new Promise((resp, rej) => {\n      if (navigator.cookieEnabled) {\n        var res = document.cookie\n        var multiple = res.split(';')\n        for (var j = 0; j < multiple.length; j++) {\n          var key1 = multiple[j].split('=')\n          var keyvalue = key1[0].trim()\n          var set_cookie =\n            keyvalue + '=1=ven; expires = Thu, 01 Jan 1970 00:00:00 UTC'\n          document.cookie = document.cookie + ' ' + set_cookie\n          if (document.cookie.length == 0) {\n            console.log('cookies completely deleted')\n            break\n          }\n        }\n        resp('ok')\n      }\n    })\n  }\n\n  getOrderDetails(OrderNO) {\n    return new Promise((respo, rej) => {\n      this.web3.getAllContract().then((response: any) => {\n        console.log('getOrderData')\n        // console.log(response);\n        // console.log(OrderNO);\n        this.orders = response[2]\n        this.escrow = response[3]\n        this.orderNo = bytes32({ input: OrderNO });\n\n        this.orders.methods.getOrderData(this.orderNo).call().then((value: any) => {\n            // console.log(value);\n            this.ipfs.getHashFromIPFS(value).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              );\n\n              // console.log(this.ipfsConverted );\n              //  this.getDocuments(this.orderNo).then((ds:any)=>{\n              //   console.log(ds);\n\n              //  });\n              respo(this.ipfsConverted)\n            })\n          })\n      })\n    })\n  }\n\n  getDocuments(orderNO) {\n    this.docs = []\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((response: any) => {\n        this.escrow = response[3]\n        // console.log(this.escrow)\n        this.orderNo = bytes32({ input: orderNO })\n        this.escrow.methods\n          .returnLC2(this.orderNo)\n          .call()\n          .then((LC2: any) => {\n            this.escrow.methods\n              .returnLC5(this.orderNo) \n              .call()\n              .then((LC5: any) => {\n                console.warn(LC2)\n                console.warn(\"printing the status of lcrequested\")\n                console.warn(LC5)\n                this.docs.push(LC2)\n                this.docs.push(LC5)\n                resp(this.docs)\n              })\n          })\n      })\n    })\n  }\n\n  getLCDetails(orderNO) {\n    this.docs = []\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((response: any) => {\n        this.escrow = response[3]\n        // console.log(this.escrow)\n        this.orderNo = bytes32({ input: orderNO })\n        this.escrow.methods\n          .returnLC2(this.orderNo)\n          .call()\n          .then((LC2: any) => {\n            this.escrow.methods\n              .returnLC3(LC2)\n              .call()\n              .then((LC5: any) => {\n                this.ipfs.getHashFromIPFS(LC5).then((data: any) => {\n                  this.ipfsConverted = JSON.parse(\n                    Buffer.from(data.value.buffer).toString(),\n                  )\n                  resp(this.ipfsConverted)\n                })\n              })\n          })\n      })\n    })\n  }\n\n\n\n\n\n\n  getProductsinOrder(orderNO) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((response: any) => {\n        this.orders = response[2]\n        this.orderNo = bytes32({ input: orderNO })\n        this.orders.methods\n          .getOArray(this.orderNo)\n          .call()\n          .then((value: any) => {\n            this.ipfs.getHashFromIPFS(value).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              )\n              // console.log(this.ipfsConverted );\n              resp(this.ipfsConverted)\n            })\n          })\n      })\n    })\n  }\n\n  getUserOrders() {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          this.orders.methods\n            .getConsigneeOrders(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              console.log(\"check for consignee's list of order\")\n              console.log(value)\n              resp(value)\n            })\n        })\n      })\n    })\n  }\n\n  getSellerOrders() {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          this.orders.methods\n            .getSellerOrders(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              console.log(value)\n              resp(value)\n            })\n        })\n      })\n    })\n  }\n\n  getBankIssueLC() {\n    return new Promise((resp, rej) => {\n      var count = 0;\n      var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.escrow = contractRes[3]\n          this.escrow.methods\n            .returnOrders(this.accountNumber)\n            .call()\n            .then((result: any) => {\n              // console.log(result)\n              // resp(value)\n              if (result.length == 0) {\n                resp(resultArray)\n              } else {\n                for (var i = 0; i < result.length; i++) {\n                  try {\n                    throw i\n                  } catch (ii) {\n                    this.web3.getUtf8(result[ii]).then((utf: any) => {\n                      // console.log(\"ii data: \" + ii + \";\" + utf);\n                      this.sendII(this.accountNumber, utf).then((data) => {\n                        // this.count += 1\n                        count++;\n                       resultArray.push(data)\n                      //  setTimeout(()=>{\n                       if (count == result.length) { \n            resp(resultArray);\n          }\n                      //  },1000);\n                        \n                      })\n                    })\n                    // var b = utf8(result[ii]);\n                  }\n                }\n              }\n            })\n        })\n      })\n    })\n  }\n\n  sendII(addr: any, b: any) {\n    console.log(addr, b)\n    var count = 0\n    var CH\n    var resultArray = []\n    return new Promise((res, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.escrow = contractRes[3]\n\n        this.web3.convertToHex(b).then((ord: any) => {\n          // console.log(ord)\n          this.escrow.methods\n            .returnLC1(addr, ord)\n            .call()\n            .then(function (resultSum) {\n              // console.log('amount' + resultSum / 1000000000000000000)\n              // console.log(contractRes[3])\n\n              // contractRes[3].methods.returnLC4(ord).call()\n              //         .then((result: any) => {\n              //           console.log(result)\n              //         });\n              contractRes[3].methods\n                .returnLC4(ord)\n                .call()\n                // this.escrow.methods.returnLC4(ord).call()\n                .then(function (result2) {\n                  // console.log('lkljkjkhhjhjjg' + result2)\n                  if (result2 == false) {\n                    console.log('nope')\n                    resultArray.push({\n                      0: b,\n                      1: result2,\n                      2: resultSum,\n                      3: ord,\n                    })\n                    console.log(resultArray)\n\n                    res(resultArray)\n                  } else if (result2 == true) {\n                    console.log('yup')\n                    contractRes[3].methods\n                      .returnLC2(ord)\n                      .call()\n                      .then(function (result3) {\n                        // console.log(\"result3 is\" + utf8(result3));\n                        // var c = utf8(result3);\n                        contractRes[3].methods\n                          .returnLC3(result3)\n                          .call()\n                          .then(function (result4) {\n                            resultArray.push({\n                              0: b,\n                              1: result2,\n                              2: resultSum,\n                              3: ord,\n                              4: result3,\n                              5: result4,\n                            })\n                            console.log(resultArray)\n                            res(resultArray)\n                          })\n                      })\n                  } else {\n                    console.log('Error')\n                  }\n                  count++\n                })\n            }) //1\n        })\n      })\n    })\n  }\n\n  saveLC(\n    lcNum,\n    accountNumber,\n    consigneeWalletAddress,\n    sellerWallet,\n    files,\n    order,\n    wallets,\n    a,\n  ) {\n    return new Promise((res, rej) => {\n      // console.log(\n      //   lcNum,\n      //   accountNumber,\n      //   consigneeWalletAddress,\n      //   sellerWallet,\n      //   files,\n      //   order,\n      //   wallets,\n      //   a,\n      // )\n      this.ipfs.saveToIpfs(files).then((ipfsHash: any) => {\n        this.lcNum = bytes32({ input: lcNum })\n        this.orderNo = bytes32({ input: order })\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.escrow = contractRes[3]\n          this.escrow.methods\n            .issueLC(\n              this.lcNum,\n              accountNumber,\n              consigneeWalletAddress,\n              sellerWallet,\n              ipfsHash,\n              this.orderNo,\n              wallets,\n              a,\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('LC issued', 'Check data', { duration: 3000 })\n              this.redirectBack();\n              res(receipt)\n            })\n        })\n      })\n\n      // App.Escrow.issueLC(LC,App.account,odata.consigneeWalletAddress,odata.sellerWallet,dataFile,order,wallets,odata.TotalAmount,{ from: App.account })\n      // .then(function (v) {\n      //   console.log(v);\n      // });\n\n      res('done')\n    })\n  }\n\n\n  // saving lc by bid bank\n  saveBidLC(\n    lcNum,\n    accountNumber,\n    files,\n    order\n  ) {\n    return new Promise((res, rej) => {\n      this.ipfs.saveToIpfs(files).then((ipfsHash: any) => {\n        this.lcNum = bytes32({ input: lcNum })\n        this.orderNo = bytes32({ input: order })\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.escrow = contractRes[3]\n          this.escrow.methods\n            .issueLCBidBank(\n              this.lcNum,\n              this.accountNumber,\n              ipfsHash,\n              this.orderNo\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('LC issued', 'Check data', { duration: 3000 })\n              this.redirectBack();\n              res(receipt)\n            })\n        })\n      })\n      res('done')\n    })\n  }\n  // \n  getAgency() {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .retAgencies()\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n\n  getAgencyAdd(agency) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.agency = bytes32({ input: agency })\n        this.registration.methods\n          .retagencyadd(this.agency)\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n  retcarrieradd(carrier) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.agency = bytes32({ input: carrier })\n        this.registration.methods\n          .retcarrieradd(this.agency)\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n\n  sellerSavePackingList(\n    orderno,\n    dataFile,\n    PLNo,\n    PL_dataFile,\n    shippingAgencyAddress,\n    products_updated,\n  ) {\n    return new Promise((res, rej) => {\n      this.PLNo = bytes32({ input: PLNo })\n      this.orderNo = bytes32({ input: orderno })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2]\n        this.documents = contractRes[4]\n        this.orders.methods\n          .sellerSavePackingList(\n            this.orderNo,\n            dataFile,\n            this.PLNo,\n            PL_dataFile,\n            shippingAgencyAddress,\n            products_updated,\n          )\n          .send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt)\n            this.snackBar.open('PL generated', 'Check data', { duration: 3000 })\n            this.redirectBack();\n            res(receipt)\n            // console.log(PL_dataFile)\n            // console.log(this.PLNo)\n            // this.documents.methods.savePLHashSeller(this.orderNo,this.PLNo,PL_dataFile)\n            // .send({from: this.accountNumber})\n            //     .once('receipt', (receipt) => {\n            //       console.log(receipt);\n            //       this.snackBar.open(\"PL created in docs\", \"Check data\", {duration:3000});\n            //       // this.cookieDeletion();\n            //         res(receipt);\n\n            //     });\n          })\n      })\n    })\n  }\n\n  agencySavePackingList(\n    orderno,\n    dataFile,\n    PLNo,\n    PL_dataFile,\n    carrierAgencyAddress,\n  ) {\n    return new Promise((res, rej) => {\n      this.PLNo = bytes32({ input: PLNo })\n      this.orderNo = bytes32({ input: orderno })\n      this.orders.methods\n        .agencySavePackingList(\n          this.orderNo,\n          dataFile,\n          this.PLNo,\n          PL_dataFile,\n          carrierAgencyAddress,\n        )\n        .send({ from: this.accountNumber })\n        .once('receipt', (receipt) => {\n          console.log(receipt)\n          this.snackBar.open('PL created', 'Check data', { duration: 3000 })\n          this.redirectBack();\n          res(receipt)\n        })\n    })\n  }\n\n  returnAgencyAssignedOrders() {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          this.orders.methods\n            .returnAgencyAssignedOrders(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              // console.log(value)\n              resp(value)\n            })\n        })\n      })\n    })\n  }\n\n  saveAgent(agentName, files) {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n\n        this.ipfs.saveToIpfs(files).then((ipfsHash: any) => {\n          this.lcNum = bytes32({ input: agentName })\n          this.web3.getAllContract().then((contractRes: any) => {\n            this.registration = contractRes[1]\n            this.registration.methods\n              .updateAgent(this.lcNum, this.accountNumber, ipfsHash)\n              .send({ from: this.accountNumber })\n              .once('receipt', (receipt) => {\n                console.log(receipt)\n                // this.cookieDeletion();\n                resp(receipt)\n              })\n          })\n        })\n      })\n    })\n  }\n\n  retforwardingAgentList() {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .retforwardingAgentList()\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n  retCarriers() {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[1]\n        this.registration.methods\n          .retCarriers()\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n\n  retBanks() {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[0]\n        this.registration.methods\n          .retbanks()\n          .call()\n          .then((value: any) => {\n            console.log(value)\n            resp(value)\n          })\n      })\n    })\n  }\n\n  getPackingListHash(PLNO) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.documents = contractRes[4]\n        this.plNum = bytes32({ input: PLNO })\n        // console.log(PLNO)\n        // console.log(this.plNum)\n        this.documents.methods\n          .returnPlIPFSHash(this.plNum)\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            this.ipfs.getHashFromIPFS(value).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              )\n              resp(this.ipfsConverted)\n            })\n          })\n      })\n    })\n  }\n//Sending LCNO. Some issue,Check Code Here\n  returnPLNO(ord) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.registration = contractRes[4]\n        this.lcNum = bytes32({ input: ord })\n        this.registration.methods\n          .returnPLNO(this.lcNum)\n          .call()\n          .then((value: any) => {\n            // console.log(value)\n            this.registration.methods\n              .returnPlIPFSHash(value)\n              .call()\n              .then((value2: any) => {\n                this.ipfs.getHashFromIPFS(value2).then((data: any) => {\n                  this.ipfsConverted = JSON.parse(\n                    Buffer.from(data.value.buffer).toString(),\n                  )\n                  resp(this.ipfsConverted)\n                })\n              })\n          })\n      })\n    })\n  }\n\n  returnCarrierAssignedOrders() {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          this.orders.methods\n            .returnCarrierAssignedOrders(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              // console.log(value)\n              resp(value)\n            })\n        })\n      })\n    })\n  }\n\n  saveBOL(orderno,dataFile,BOLNO,BOL_dataFile,consigneeWalletAddress,tokenID){\n    return new Promise((resp, rej)=>{\n      this.web3.loadBlockChainData()\n      .then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0];\n      // this.ipfs.saveToIpfs(files).then((ipfsHash:any)=>{\n        this.lcNum = bytes32({input:orderno});\n        this.bol = bytes32({input:BOLNO});\n        this.web3.getAllContract()\n        .then((contractRes:any) =>{\n          this.orders = contractRes[2];\n          this.registration = contractRes[1];\n          this.getUserHashType().then((result:any) => {\n          // console.log(result);\n          this.carrierName = bytes32({input:result.companyName});\n          this.orders.methods.saveBOL(this.lcNum,dataFile,this.accountNumber,this.bol,BOL_dataFile,this.carrierName,consigneeWalletAddress,tokenID).send({from: this.accountNumber})\n          .once('receipt', (receipt) => {\n\n            \n            console.log(receipt);\n            var dateRef = new Date();\n            var type = \"Bill of Lading Generated\";\n            this.saveLog(this.accountNumber,BOLNO,result.companyName,dateRef,type,result.userRole,this.bol).then((data)=>{\n              this.snackBar.open('BoL Generated', 'Check data', { duration: 3000 })\n              this.redirectBack();\n              resp(data);\n            });\n          });\n        });\n      })\n    });\n    });\n    }\n\n\n\n    saveLog(shipperAddress, bol, shipName, dateRef, type, UserType,bol2) {\n      return new Promise((resp, rej)=>{\n      var log_json = {\n        Log:\n          shipperAddress +\n          \",\" +\n          bol +\n          \",\" +\n          shipName +\n          \",\" +\n          dateRef +\n          \",\" +\n          type +\n          \",\" +\n          UserType,\n      };\n      this.ipfs.saveToIpfs(log_json).then((dataFile: any) => {\n        var log1_json = {\n          row: \"1\",\n          hash: dataFile,\n        };\n        this.ipfs.saveToIpfs(log1_json).then((dataFile2: any) => {\n          this.web3.getAllContract()\n          .then((contractRes:any) =>{\n          this.logs = contractRes[6];\n            this.logs.methods.saveLog(dataFile2,bol2).send({from: this.accountNumber})\n            .once('receipt', (receipt) => {\n              console.log(receipt);\n                resp(receipt);\n            });\n            });\n        });\n      });\n    });\n    }\n\n\n   \n    saveLogView(bol, userName, UserType) {\n      return new Promise((resp, rej)=>{\n        this.web3.getAllContract()\n        .then((contractRes:any) =>{\n        this.logs = contractRes[6];\n        this.bol = bytes32({input:bol});\n\n      var type = \"BoL Accessed\";\n      var dateRef = new Date();\n      console.log(bol, userName, UserType)\n      var log_json = {\n        Log:\n          this.accountNumber +\n          \",\" +\n          bol +\n          \",\" +\n          userName +\n          \",\" +\n          dateRef +\n          \",\" +\n          type +\n          \",\" +\n          UserType,\n      };\n      console.log(log_json);\n\n      this.logs.methods.getLog(this.bol).call()\n      .then((value:any) => {\n        this.ipfs.getHashFromIPFS(value).then((data:any)=>{\n          this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n          // console.log(this.ipfsConverted);\n          this.globalHash = this.ipfsConverted.hash;\n          this.globalRow = this.ipfsConverted.row;\n          this.globalRow = this.globalRow + 1;\n          this.ipfs.saveToIpfs(log_json).then((dataFile2: any) => {\n            var log1_json = {\n              row: this.globalRow++,\n              hash: this.globalHash + \",\" + dataFile2,\n            };\n            this.ipfs.saveToIpfs(log1_json).then((dataFile3: any) => {\n              this.logs.methods.saveLog(dataFile3,this.bol).send({from: this.accountNumber})\n              .once('receipt', (receipt) => {\n                console.log(receipt);\n                  resp(receipt);\n              });\n            });\n          });\n        })\n      });\n    });\n    });\n    }\n\n  saveCommercialInvoice(order, ci_updated, dataFile, CINO, pr_updated) {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        // this.ipfs.saveToIpfs(files).then((ipfsHash:any)=>{\n        this.lcNum = bytes32({ input: order })\n        this.bol = bytes32({ input: CINO })\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          this.registration = contractRes[1]\n          this.getUserHashType().then((result: any) => {\n            this.orders.methods\n              .saveCommercialInvoice(\n                this.lcNum,\n                ci_updated,\n                dataFile,\n                this.bol,\n                pr_updated,\n              )\n              .send({ from: this.accountNumber })\n              .once('receipt', (receipt) => {\n                console.log(receipt)\n                this.snackBar.open('CI Generated', 'Check data', { duration: 3000 })\n                this.redirectBack();\n                resp(receipt)\n              })\n          })\n        })\n      })\n    })\n  }\n\n  erc721() {\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[2]\n          var tokenArr = 291289123232\n\n          // console.log(tokenArr)\n          var g = 53578\n\n          // this.getUserHashType().then((result:any) => {\n          this.orders.methods\n            .generateToken(this.accountNumber, tokenArr)\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              // this.cookieDeletion();\n              resp(receipt);\n\n            })\n          // });\n        })\n      })\n    })\n  }\n\n  generateQR(qrcode) {\n    return new Promise((resp, rej) => {\n      var zip = new JSZip()\n      var dataQR = qrcode + '/' + this.accountNumber\n      // console.log(dataQR)\n      var img = zip.folder('QRCODE')\n      img.file(\n        'QRCode.png',\n        qr.image(dataQR, {\n          type: 'png',\n        }),\n        {\n          base64: true,\n        },\n      )\n      zip\n        .generateAsync({\n          type: 'blob',\n        })\n        .then(function (content) {\n          FileSaver.saveAs(content, 'QRCODE.zip')\n          resp('success')\n        })\n    })\n  }\n\n\n  showBOLData(bol) {\n    return new Promise((resp, rej) => {\n      this.bolData = new Array();\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.documents = contractRes[4]\n        this.orders = contractRes[2]\n        this.bol = bytes32({ input: bol })\n        this.documents.methods\n          .returnBolIPFSHash(this.bol)\n          .call()\n          .then((value: any) => {\n            console.log('value in showbol');\n            console.log(value)\n            this.ipfs.getHashFromIPFS(value).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              )\n              this.bolData.push(this.ipfsConverted)\n              this.documents.methods\n                .returnOrderNofromBOLNo(this.bol)\n                .call()\n                .then((order: any) => {\n                  this.web3.getUtf8(order).then((or) => {\n                    this.getOrderDetails(or).then((OrderDetails: any) => {\n                      this.bolData.push(OrderDetails)\n                      this.getPackingListHash(OrderDetails.PLNo).then(\n                        (PackingListDetails: any) => {\n                          this.bolData.push(PackingListDetails)\n                          this.getProductsinOrder(or).then((products: any) => {\n                            this.bolData.push(products)\n                            // var ord = bytes32({input:BOLNO});\n                            this.orders.methods\n                              .returnExportstatus(order)\n                              .call()\n                              .then((status: any) => {\n                                if (status == true) {\n                                  this.orders.methods\n                                    .returnDeliveryStatus(order)\n                                    .call()\n                                    .then((status2: any) => {\n                                      if (status2 == true) {\n                                        this.bolData.push({\n                                          delivered: true,\n                                          exported: true,\n                                        })\n                                      } else {\n                                        this.bolData.push({\n                                          delivered: false,\n                                          exported: true,\n                                        })\n                                      }\n                                    })\n                                } else {\n                                  this.bolData.push({\n                                    delivery: false,\n                                    exported: false,\n                                  })\n                                }\n                                resp(this.bolData)\n                              })\n                          })\n                        },\n                      )\n                    })\n                  })\n                })\n            })\n          })\n      })\n    })\n  }\n//CI View\ngetCommercialHash(CINO) {\n  return new Promise((resp, rej) => {\n    this.web3.getAllContract().then((contractRes: any) => {\n      this.documents = contractRes[4]\n      this.CINum = bytes32({ input: CINO })\n      // console.log(PLNO)\n      // console.log(this.plNum)\n      this.documents.methods\n        .returnCIIPFSHash(this.CINum)\n        .call()\n        .then((value: any) => {\n          // console.log(value)\n          this.ipfs.getHashFromIPFS(value).then((data: any) => {\n            this.ipfsConverted = JSON.parse(\n              Buffer.from(data.value.buffer).toString(),\n            )\n            resp(this.ipfsConverted)\n          })\n        })\n    })\n  })\n}\n  // Port Authority-Code added by Jisa\n\n  getOrderfromToken(tokenNumber) {\n    return new Promise((res, rej) => {\n      // console.log('getSellerAddress')\n      // console.log(tokenNumber)\n      // this.bank = bytes32({input:seller});\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2]\n        this.orders.methods\n          .tokToOrdNo(tokenNumber)\n          .call()\n          .then((v) => {\n            // console.log(v)\n            this.web3.getUtf8(v).then((or) => {\n              res(or)\n            })\n          })\n      })\n    })\n  }\n\n  getBOLfromToken(tokenNumber) {\n    return new Promise((res, rej) => {\n      // console.log('getSellerAddress')\n      // console.log(tokenNumber)\n      // this.bank = bytes32({input:seller});\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2]\n        this.orders.methods\n          .tokToBOLNo(tokenNumber)\n          .call()\n          .then((v) => {\n            // console.log(v)\n            this.web3.getUtf8(v).then((or) => {\n              res(or)\n            })\n          })\n      })\n    })\n  }\n  updateExportStatus(OrderNo) {\n    return new Promise((res, rej) => {\n      // console.log('in updateexportstatus');\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2];\n        // console.log(OrderNo);\n      this.orderNo = bytes32({ input: OrderNo })\n        // console.log(this.accountNumber);\n        this.orders.methods.Exportstatus(this.orderNo).send({ from: this.accountNumber }).once('receipt', (receipt) => {\n            console.log(receipt);\n            // res(receipt)\n            var dateRef = new Date()\n            var type = 'Export Customs Clearance'\n            this.getOrderDetails(OrderNo).then((OrderDetails: any) => {\n              this.getUserHashType().then((result: any) => {\n                // console.log('get orderdetails');\n                // console.log(OrderDetails);\n                // console.log('getting user');\n                // console.log(result);\n                this.saveLogDispatched(\n                  this.accountNumber,\n                  OrderDetails.BOLNO,\n                  result.companyName,\n                  type,\n                  result.userRole\n                ).then((data) => {\n                  this.snackBar.open(\n                    'Customs Verified at Origin','Export Customs',{ duration: 3000 });\n                  res(receipt)\n                })\n              })\n            })\n          })\n      })\n    })\n  });\n  }\n  returnLogView(bol){\n    return new Promise((resp, rej)=>{\n      var four = [];\n      var count = 0;\n      var count2 = 0;\n      \n      var logArray ='';\n      // var bol = d[0];\n      var newArray = [];\n      var g;\n      var dataL;\n      this.web3.getAllContract()\n      .then((contractRes:any) =>{\n      this.logs = contractRes[6];\n    this.bol = bytes32({input:bol});\n\n    this.logs.methods.getLog(this.bol).call()\n    .then((value:any) => {\n      this.ipfs.getHashFromIPFS(value).then((ipfsdata:any)=>{\n        this.ipfsConverted = JSON.parse(Buffer.from(ipfsdata.value.buffer).toString());\n        console.log('hash in backend')\n        console.log(this.ipfsConverted.hash);\n        var logHashList = this.ipfsConverted.hash;\n        var logHash = logHashList.split(',');\n        console.log('getting hash one by one');\n        console.log(logHash);\n        for (var i = 0; i < logHash.length; i++) {\n          var j = i;\n              count = count + 1;\n              g = logHash[j];\n      this.ipfs.getHashFromIPFS(g).then((ipfsdata2:any)=>{\n        this.ipfsConverted2 = JSON.parse(Buffer.from(ipfsdata2.value.buffer).toString());\n        console.log(this.ipfsConverted2)\n                 logArray = logArray + \"|\" + this.ipfsConverted2.Log;\n                  console.log(\"LogArray: \" + logArray);\n                 dataL = logArray.split(\"|\");\n                  console.log(\"dataL\");\n                  console.log(dataL);\n              \n      });\n        }\n        setTimeout(()=>{\n        \n        for (var k = 1; k < dataL.length; k++) {\n          four = dataL[k].split(\",\");\n          console.log('four');\n                  console.log(four) ;\n                  newArray.push(four);\n                  count2=count2+1;\n               if(count2 == dataL.length-1)   {\n                console.log('newArray')\n                console.log(newArray);\n          resp(newArray)\n                \n               }\n        }\n      },3000);\n       \n      });\n    })\n  \n  })\n})\n  }\n  updateImportStatus(OrderNo,consigneeWalletAddress,sellerWallet, tokenID){\n    return new Promise((res, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.accountNumber = accountData[0]\n\n\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[2];\n        // console.log(OrderNo);\n      this.orderNo = bytes32({ input: OrderNo });\n      this.tokenValue = bytes32({ input: tokenID });\n        // console.log(this.accountNumber);\n        this.getOrderDetails(OrderNo).then((OrderDetails: any) => {\n          var dateRef = new Date();\n\n          var files = {\n            'BOL': 'YES',\n            'BOLNO': OrderDetails.BOLNO,\n            'BOLToConsignee': OrderDetails.BOLToConsignee,\n            'BOLIssuedOn': OrderDetails.BOLIssuedOn,\n            'CIAdded': \"YES\",\n            'CINO': OrderDetails.CINO,\n            'CIIssuedOn': OrderDetails.CIIssuedOn,\n            'LCNo': OrderDetails.LCNo,\n            'OrderNo': OrderDetails.OrderNo,\n            'PLNo': OrderDetails.PLNo,\n            'PLIssuedOn': OrderDetails.PLIssuedOn,\n\n            'SellerAddedPL': \"YES\",\n            'ShippingAgencyPL': \"YES\",\n            'TotalAmount': OrderDetails.TotalAmount,\n            'actualAmount': OrderDetails.actualAmount,\n\n            'agencyWalletAddress': OrderDetails.shippingAgencyAddress,\n            'carrier': \"YES\",\n            'carrierName': OrderDetails.carrierName,\n            'consigneeBank': OrderDetails.bankAddress,\n            'consigneeName': OrderDetails.consigneeName,\n            'consigneeMob': OrderDetails.consigneeMob,\n            'consigneeEmail': OrderDetails.consigneeEmail,\n            'consigneeWalletAddress': OrderDetails.consigneeWalletAddress,\n            'consigneebankName': OrderDetails.consigneebankName,\n            'consignmentNO': OrderDetails.consignmentNO,\n            'orderDate': OrderDetails.orderDate,\n\n            // 'orderDelivered': OrderDetails.orderDelivered,\n            'orderDelivered': \"YES\",\n\n            'prodLoc': OrderDetails.prodLoc,\n            'prodDelLoc': OrderDetails.prodDelLoc,\n            'prodConsigneeAddress': OrderDetails.prodConsigneeAddress,\n            'prodConsigneeCountry': OrderDetails.prodConsigneeCountry,\n\n            'seller': OrderDetails.seller,\n            'sellerWallet': OrderDetails.sellerWallet,\n            'sellerAddress': OrderDetails.sellerAddress,\n            'sellerCountry': OrderDetails.sellerCountry,\n            'sellerMob': OrderDetails.sellerMob,\n            'sellerBank': OrderDetails.sellerBank,\n            'shippingAgencyName': OrderDetails.shippingAgencyName,\n            'tokenID': OrderDetails.tokenID,\n\n            'PortWallet': this.accountNumber,\n            'DateDelivered': dateRef,\n          }\n        this.ipfs.saveToIpfs(files).then((ipfsHash: any) => {\n\n        this.orders.methods.updateRelease(this.orderNo,ipfsHash,consigneeWalletAddress,sellerWallet,this.tokenValue).send({ from: this.accountNumber }).once('receipt', (receipt) => {\n          console.log(receipt);\n          var type = \"Import Customs Clearance\";\n            this.getUserHashType().then((result: any) => {\n              // console.log('get orderdetails');\n              // console.log(OrderDetails);\n              // console.log('getting user');\n              // console.log(result);\n              this.saveLogDispatched(\n                this.accountNumber,\n                OrderDetails.BOLNO,\n                result.companyName,\n                type,\n                result.userRole\n              ).then((data) => {\n                this.snackBar.open(\n                  'Customs Verified at Destination','Import Customs',{ duration: 3000 });\n                  res(receipt);\n\n              })\n            })\n\n        })\n\n      })\n    });\n\n      });\n    });\n\n    });\n  }\n  // bol,un,ut\n  saveLogDispatched(accountNumber,bol, userName,type, UserType) {\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.logs = contractRes[6]\n        this.bol = bytes32({ input: bol })\n\n        var dateRef = new Date()\n        var log_json = {\n          Log:\n            accountNumber +\n            ',' +\n            bol +\n            ',' +\n            userName +\n            ',' +\n            dateRef +\n            ',' +\n            type +\n            ',' +\n            UserType,\n        }\n        // console.log(log_json)\n\n        this.logs.methods.getLog(this.bol).call().then((value: any) => {\n            this.ipfs.getHashFromIPFS(value).then((data: any) => {\n              this.ipfsConverted = JSON.parse(\n                Buffer.from(data.value.buffer).toString(),\n              )\n              // console.log(this.ipfsConverted)\n              this.globalHash = this.ipfsConverted.hash\n              this.globalRow = this.ipfsConverted.row\n              this.globalRow = this.globalRow + 1\n              this.ipfs.saveToIpfs(log_json).then((dataFile2: any) => {\n                var log1_json = {\n                  row: this.globalRow++,\n                  hash: this.globalHash + ',' + dataFile2,\n                }\n                this.ipfs.saveToIpfs(log1_json).then((dataFile3: any) => {\n                  this.logs.methods\n                    .saveLog(dataFile3, this.bol)\n                    .send({ from: accountNumber })\n                    .once('receipt', (receipt) => {\n                      console.log(receipt)\n                      resp(receipt)\n                    })\n                })\n              })\n            })\n          })\n      })\n    })\n  }\n  \n  redirectBack(): void {\n    this.location.back()\n  }\n  //Code added by Jisa ends Here\n//CASH LC - Code added by mithun\ncashLC(OrderNo){\n  return new Promise((resp, rej) => { \n      console.log('Checking');\n      console.log(OrderNo);\n      // console.log(user.bankAddress)\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          console.log(accountData[0])\n          console.log(contractRes[3])\n          this.accountNumber = accountData[0]\n        this.escrow = contractRes[3];\n        // this..meth\n        this.orderNo = bytes32({ input: OrderNo });\n        console.log('order after change');\n        console.log(this.orderNo);\n        this.getOrderDetails(OrderNo).then((OrderDetails:any)=>{\n          this.getLCDetails(OrderNo).then((LCDetails:any)=>{\n          console.log(LCDetails);\n              // this.getOrderDetails(OrderNo).then((Order: any) => {\n                console.log('order data got in cash lc');\n                // console.log(resultLC);\n                console.log(OrderDetails);\n                console.log(this.accountNumber);\n                console.log('2nd check');\n                console.log(this.orderNo,LCDetails.LC,OrderDetails.consigneeWalletAddress,this.accountNumber,OrderDetails.sellerBank , OrderDetails.TotalAmount);\n              this.lcNum = bytes32({ input: LCDetails.LC })\n              console.log(this.lcNum);\n              var uintTot = this.web3.convertPriceToEther(OrderDetails.TotalAmount);\n              // this.web3.getUint256(OrderDetails.TotalAmount).then((uintTot:any)=>{\n                console.log(uintTot);\n\n              this.escrow.methods\n          .submitTransactionT(this.orderNo,this.lcNum,OrderDetails.consigneeWalletAddress,this.accountNumber,OrderDetails.sellerBank, OrderDetails.TotalAmount)\n          .send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt)\n            // this.cookieDeletion();\n            resp(receipt)\n          })\n\n\n            // });\n\n            })\n            })\n            })\n      })\n    })\n\n}\n\n\nreturnAdvOrders(){\n  return new Promise((resp, rej) => { \n    console.log('Checking');\n    var count = 0;\n    var resultArray = [];\n    // console.log(user.bankAddress)\n    this.web3.getAllContract().then((contractRes: any) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        console.log(accountData[0])\n        console.log(contractRes[3])\n        this.accountNumber = accountData[0]\n      this.escrow = contractRes[3];\n      // this..meth\nthis.escrow.methods.returnAdvOrders(this.accountNumber).call()\n.then((result:any) => {\n  for (var i = 0; i < result.length; i++) {\n    try {\n      throw i\n    } catch (ii) {\n    console.log(result)\n    this.web3.getUtf8(result[ii]).then((oor:any)=>{\n      console.warn(oor);\n    this.escrow.methods.returnLC2(result[ii]).call().then((lcdetails:any)=> {\n      this.web3.getUtf8(lcdetails).then((lc:any)=>{\nconsole.warn(lc);\n      this.escrow.methods.returnLCStat(lcdetails)\n        .call()\n        .then((lcStat:any)=> {\nconsole.warn(result[ii]);\n          count++;\n          resultArray.push({\n            0: oor,\n            1: lc,\n            2: lcStat,\n          }); \n          if (count == result.length) { \n            resp(resultArray);\n          } else {\n            // console.log('ghasfdhgasfdh');\n          }\n        });\n      })\n    })\n    });\n  }\n  }\n}).catch((err) => {\n});\n          })\n    })\n  })\n}\n\n  advisoryConfirmation(order) {\n    return new Promise((resp, rej) => {\n      // console.log('Checking');\n      this.orderNo = bytes32({ input: order })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          // console.log(accountData[0])\n          // console.log(contractRes[3])\n          this.accountNumber = accountData[0]\n          this.escrow = contractRes[3];\n          this.getLCDetails(order).then((d:any) => {\n            this.lcNum = bytes32({input: d.LC});\n            this.escrow.methods.returnTxnID(this.orderNo).call()\n              .then((txID: any) => {\n                // console.log(txID);\n                console.log(d.sellerBank,d.sellerWallet,this.orderNo,this.lcNum,txID);\n\n              this.escrow.methods\n            .confirmTransaction(\n              d.sellerBank,d.sellerWallet,this.orderNo,this.lcNum,txID\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('Confirmed Fund Transfer', 'Advisory Bank', { duration: 3000 })\n              // this.cookieDeletion();\n              resp(receipt)\n            });\n          });\n        })\n      })\n    })\n  })\n  }\n\n  issuingConfirmation(order) {\n    return new Promise((resp, rej) => {\n      // console.log('Checking');\n      this.orderNo = bytes32({ input: order })\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          this.accountNumber = accountData[0]\n          this.escrow = contractRes[3];\n          this.getLCDetails(order).then((d:any) => {\n            this.lcNum = bytes32({input: d.LC});\n            this.escrow.methods.returnTxnID(this.orderNo).call()\n              .then((txID: any) => {\n                console.log(d.sellerBank,d.sellerWallet,this.orderNo,this.lcNum,txID);\n              this.escrow.methods\n            .confirmTransaction(\n              this.accountNumber,d.sellerWallet,this.orderNo,this.lcNum,txID\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('Fund Transfered', 'Issuing Bank', { duration: 3000 })\n              // this.cookieDeletion();\n              resp(receipt)\n            });\n          });\n        })\n      })\n    })\n  })\n  }\n\n  publishToMarket(order,data){\n    return new Promise((resp, rej) => {\n      // console.log('Checking');\n      this.orderNo = bytes32({ input: order });\n      var getTimeNow  = new Date();\n      this.publishDate = getTimeNow.getTime();\n      var myFutureDate=new Date(getTimeNow);\n      var bidClose = myFutureDate.setDate(myFutureDate.getDate()+ 14);\n      console.log(this.publishDate);\n      console.log(bidClose);\n\n\n      // this.publishDate = 1641180470;\n      // var bidClose = 1642390070;\n\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          this.accountNumber = accountData[0]\n          this.marketPlace = contractRes[0];\n\n          this.getDate().then((date:any)=>{\n            console.log(date.currentDateTime);\n\n              this.marketPlace.methods\n            .shiftToMarketPlace(\n              this.orderNo,this.accountNumber,this.publishDate,bidClose,\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('Published to Marketplace', 'Issuing Bank', { duration: 3000 })\n              resp(receipt)\n            });\n          })\n\n      })\n    })\n  })\n  }\n\n  getBankBids() {\n    return new Promise((resp, rej) => {\n      var myCurrentDate=new Date();\n      var count = 0\n    var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];\n          this.orders = contractRes[2];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0];\n          this.bid.methods\n            .returnOL()\n            .call()\n            .then((value: any) => {\n              // resp(value)\n              if(value.length>0){\n              for (var i = 0; i < value.length; i++) {\n                try {\n                  throw i\n                } catch (ii) {\n                // console.log(value);\n                this.bid.methods.returnBidsDet(this.accountNumber,value[ii]).call().then((lcdetails:any)=> {\n\n                this.bid.methods.returnlc(this.accountNumber,value[ii]).call().then((bidlcdetails:any)=> {\n                  console.log(\"bidlcdetails\")\n                  this.orders.methods.getOrderData(value[ii])\n                  .call()\n                  .then(products => {\n                    this.marketPlace.methods\n                    .returnIsShifted(value[ii])\n                    .call()\n                            .then(bids => {\n                    //getpublishedDate..value[ii];\n                    // this.marketPlace.methods.returnlc(value[ii]).call().then((bidlcdetails:any)=> {\n                    this.marketPlace.methods.returnPublishedDate(value[ii]).call().then((publishdate:any)=> {\n                      // \n                      // console.log('PUBLISHED DATE : ',publishdate);\n                      this.pubDate = publishdate[0];\n                      this.ipfs.getHashFromIPFS(products).then((ip) =>{\n                        this.ipfsConverted = JSON.parse(Buffer.from(ip.value.buffer).toString()); \n                        console.log(this.ipfsConverted);\n                        count++;\n\n                        // var e = \"1641302350924\";\n                        // var c = \"1641302350924\"; \n                        // this.compareDate(e,c).then((dC:any)=>{\n                          this.compareDate(publishdate[1],myCurrentDate).then((dC:any)=>{\n                          \n                        // })\n                        resultArray.push({\n                          // 0: this.ipfsConverted,\n                          0:lcdetails,\n                          1:this.ipfsConverted.OrderNo,\n                          2:this.ipfsConverted.consigneeName,\n                          3:this.ipfsConverted.seller,\n                          4:this.ipfsConverted.SellerAddedPL,\n                          5:this.ipfsConverted.ShippingAgencyPL,\n                          6:this.ipfsConverted.BOL,\n                          7:this.ipfsConverted.CIAdded,\n                          8:this.ipfsConverted.PLNo,\n                          9:this.ipfsConverted.BOLNO,\n                          10:this.ipfsConverted.CINO,\n                          11:bids,\n                          12:this.accountNumber,\n                          13:this.ipfsConverted.sellerWallet,\n                          14:new Date(parseInt(this.pubDate)),\n                          15:new Date(parseInt(publishdate[1])),\n                          16:myCurrentDate,\n                          17:dC,\n                          18:this.ipfsConverted.orderDelivered,\n                          19:bidlcdetails[0],\n                          20:bidlcdetails[1]\n                        }); \n                        if (count == value.length) { \n                          resp(resultArray);\n                        } else {\n                          // console.log('ghasfdhgasfdh');\n                        \n                        }\n                      })\n\n                      })\n                    })\n                    // })   ///here 2\n\n                    });\n                  });\n                });   /// here  1\n                })\n              }\n              }\n            }else{\n              rej(\"no data\");\n            }\n            })\n        })\n      })\n    })\n  }\n\n  checkBidLC(order,bank) {\n    return new Promise((res, rej) => {\n      console.log(\"check if order number is correct\");\n      console.log(order);\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        // console.log(accountData[0])\n        this.orderNo = bytes32({ input: order })\n        this.accountNumber = accountData[0]\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.bid = contractRes[7]\n          this.bid.methods\n            .returnlc(bank,this.orderNo)\n            .call()\n            .then((data) => {\n              \n                res(data);\n              \n            })\n        })\n      })\n    })\n  }\n\n\n  formatDate(date){\n    return new Promise((resp,rej)=>{\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      resp(day + '/' + parseInt(monthIndex + 1) + '/' + year)\n      // return day + '/' + parseInt(monthIndex + 1) + '/' + year;\n    })\n\n}\n\n  sendbid(order, data){\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[0];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0]\n          this.orderNo = bytes32({ input: order });\n          this.orders.methods\n          .placeBid(this.accountNumber,this.orderNo,data)\n          .send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt)\n            // this.cookieDeletion();\n            resp(receipt)\n          })\n         \n        })\n      })\n    });\n  }\n\n  returnBids(order){\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[0];\n          this.accountNumber = accountData[0]\n          this.orderNo = bytes32({ input: order });\n          this.orders.methods\n          .returnIsShifted(this.orderNo)\n          .call()\n                  .then(bids => {\n\n            resp(bids)\n\n                  });\n        })\n      })\n    });\n  }\n\n  returnBids2(order){\n    return new Promise((resp, rej) => {\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[0];\n          this.accountNumber = accountData[0]\n          // this.orderNo = bytes32({ input: order });\n          this.orders.methods\n          .returnIsShifted(order)\n          .call()\n                  .then(bids => {\n\n            resp(bids)\n\n                  });\n        })\n      })\n    });\n  }\n\n  approveBid(data){\n    return new Promise((res,rej)=>{\n      var order = data.order;\n      var bank = data.bankAdd;\n      var price = 2300;\n      // var price = data.amount;\n      var weeks = data.weeks;\n      var bidInterest = data.interest;\n      var bankName = data.bank;\n      var bb = [weeks,bidInterest];\n      console.log(bb);\n\n      console.log(order,bank,price,weeks,bidInterest);\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[0];\n          this.accountNumber = accountData[0]\n          this.orderNo = bytes32({ input: order });\n          console.log(this.orderNo);\n          this.week = bytes32({ input: weeks });\n          this.bankName = bytes32({ input: bankName });\n          this.orders.methods\n          // .approveBid(bank, this.orderNo,bank,weeks,bidInterest,price,this.bankName)\n          .approveBid(this.orderNo,bank,weeks,bidInterest,price,this.bankName,bb)\n          .send({ from: this.accountNumber})\n          .once('receipt', (receipt) => {\n            console.log(receipt);\n            res(receipt)\n          })\n         \n        })\n      })\n\n    });\n  }\n\n  // transferFund(data){\n  //   return new Promise((res,rej)=>{\n  //     var order = data.order;\n  //     var seller = data.seller;\n  //     var price = 1;\n  //     var days = '48 hrs';\n  //     console.log(data);\n  //       this.returnBids(data.order).then((bid) => {\n  //         console.log(bid);\n  //         // this.shiftedToMarket = result[0];\n  //         // this.bidApproved = result[1];\n  //         // this.noofbids = result[3].length;\n  //         // this.bidApprovedBank = result[4];\n  //       this.bidbankA = bid[4];\n  //       this.bidamount = parseInt(bid[5])/336526;\n  //       console.log(this.bidamount);\n  //       this.web3.getUtf8(bid[2]).then((bN:any)=>{\n  //         this.bidbankN = bN;\n  //       this.price = this.web3.convertPriceToEther(this.bidamount);\n  //       console.log(this.price);\n  //       this.web3.loadBlockChainData().then((accountData: any) => {\n  //         this.web3.getAllContract().then((contractRes: any) => {\n  //           this.orders = contractRes[7];\n  //           this.accountNumber = accountData[0]\n  //           this.orderNo = bytes32({ input: order });\n  //           this.day = bytes32({ input: days });\n  //           this.getDate().then((date:any)=>{\n  //             console.log(date.currentDateTime);\n  //             this.orders.methods\n  //             .fundTransfer(this.accountNumber, seller, this.orderNo,date.currentDateTime,bid[5])\n  //             .send({ from: this.accountNumber, value:this.price})\n  //             .once('receipt', (receipt) => {\n  //               console.log(receipt)\n  //               // this.cookieDeletion();\n  //               res(receipt)\n  //             })\n  //           });\n           \n  //         })\n  //       })\n  //       });\n  //         // this.amountrem = parseFloat(data2.prodPrice)-parseFloat(bid[5]);\n  //       });\n  //   });\n  // }\n  transferFund(data){\n    return new Promise((res,rej)=>{\n      var order = data.order;\n      var seller = data.seller;\n      var price = 1;\n      var days = '48 hrs';\n      console.log(data);\n        this.returnBids(data.order).then((bid) => {\n        console.log(bid);\n        this.bidbankA = bid[4];\n        this.bidamount = parseInt(bid[5])/336526;\n        console.log(this.bidamount);\n        this.web3.getUtf8(bid[2]).then((bN:any)=>{\n        this.bidbankN = bN;\n        // this.price = this.web3.convertPriceToEther(this.bidamount);\n        // console.log(this.price);\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          this.web3.getAllContract().then((contractRes: any) => {\n            this.orders = contractRes[7];\n            this.accountNumber = accountData[0]\n            this.orderNo = bytes32({ input: order });\n            this.day = bytes32({ input: days });\n            this.getDate().then((date:any)=>{\n              console.log(date.currentDateTime);\n              // this.getINR().subscribe((inr:any)=>{\n              //   var INR = inr.INR;\n              //   console.log(INR);\n              this.getUSD().subscribe((usd:any)=>{\n                var USD = usd.USD;\n                console.log(USD);\n\n                this.bidamount = parseInt(bid[5])/USD;\n                console.log(this.bidamount)\n                this.price = this.web3.convertPriceToEther(this.bidamount);\n\n                this.orders.methods\n                .fundTransfer(this.accountNumber, seller, this.orderNo,date.currentDateTime,bid[5])\n                .send({ from: this.accountNumber, value:this.price})\n                .once('receipt', (receipt) => {\n                  console.log(receipt)\n                  res(receipt)\n                })\n              })\n              \n            });\n          })\n        })\n        });\n          // this.amountrem = parseFloat(data2.prodPrice)-parseFloat(bid[5]);\n        });\n    });\n  }\n  getINR(){\n    return this.httpClient.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=INR')\n  }\n    getUSD(){\n      return this.httpClient.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD')\n    }\n\n\n  checkifFundTransferedCon(user,order){\n    return new Promise((res,rej)=>{\n      this.web3.getAllContract().then((contractRes: any) => {\n      this.bid = contractRes[7];\n      this.orderNo = bytes32({ input: order });\n      this.bid.methods.returnBidsDet(user,this.orderNo).call().then((lcdetails:any)=> {\n        res(lcdetails);\n      });\n    });\n    })\n  }\n\n  checkifFundTransferedSeller(user,order){\n    return new Promise((res,rej)=>{\n      this.web3.getAllContract().then((contractRes: any) => {\n      this.bid = contractRes[7];\n      this.orderNo = bytes32({ input: order });\n      this.bid.methods.sellerBidRet(user,this.orderNo).call().then((lcdetails:any)=> {\n        res(lcdetails);\n      });\n    });\n    })\n  }\n\n  getBankreport() {\n    return new Promise((resp, rej) => {\n    var count = 0\n    var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];\n          this.orders = contractRes[2];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0];\n          this.bid.methods\n            .bidreport(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              // resp(value)\n            //   console.log(value);\n            //   if(value.length>0){\n            resp(value);\n            // }else{\n            //   rej(\"no data\");\n            // }\n            })\n        })\n      })\n    })\n  }\n\n  getDate(){\n    return new Promise((res,rej)=>{\n        axios.request(options).then(function (response) {\n          console.log(response.data);\n                res(response.data)\n           \n          })\n  })\n  }\n\n\n  // sd(){\n\n  sd(){\n    return new Promise((res,rej)=>{\n      var order = \"ORD96\";\n    this.web3.loadBlockChainData().then((accountData: any) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.orders = contractRes[7];\n        this.accountNumber = accountData[0]\n        this.orderNo = bytes32({ input: order });\n        console.log(this.orderNo);\n        var pR = 1;\n        this.price = this.web3.convertPriceToEther(pR);\nthis.getDate().then((d:any)=>{\nthis.day = d.currentDateTime;\n        // this.day = bytes32({ input: days });\n        this.bankName = bytes32({ input: order });\n        this.orders.methods\n        .fu(this.orderNo,this.day)\n        .send({ from: this.accountNumber})\n        .once('receipt', (receipt) => {\n          console.log(receipt)\n          // this.cookieDeletion();\n          res(receipt)\n        })\n      })\n       \n      })\n    })\n  })\n  }\n\n  dd(){\n    return new Promise((res,rej)=>{\n      var order = \"ORD96\";\n      this.orderNo = bytes32({ input: order });\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.accountNumber = accountData[0];\n\n\n        var getTimeNow  = new Date();\n        this.publishDate = getTimeNow.getTime();\n        var myFutureDate=new Date(getTimeNow);\n        var bidClose = myFutureDate.setDate(myFutureDate.getDate()+ 14);\n        console.log(this.publishDate);\n        console.log(bidClose);\n\n\n\n\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.orders = contractRes[7];\n          // this.getDate().then((date:any)=>{\n            this.orders.methods\n            .sel(this.orderNo)\n            .call()\n            .then((value: any) => {\n              // resp(value)\n            //   console.log(value);\n            //   if(value.length>0){\n            res(value);\n            // }else{\n            //   rej(\"no data\");\n            // }\n            })\n          // });\n         \n        })\n        // res(response);\n     \n    })\n  })\n  }\n\n\n\n  saveB(){\n    return new Promise((resp, rej) => {\n      // console.log('Checking');\n      var order = \"ORD96\";\n      this.orderNo = bytes32({ input: order });\n      var getTimeNow  = new Date();\n      this.publishDate = getTimeNow.getTime();\n      var myFutureDate=new Date(getTimeNow);\n      var bidClose = myFutureDate.setDate(myFutureDate.getDate()+ 14);\n      console.log(this.publishDate);\n      console.log(bidClose);\n\n\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          this.accountNumber = accountData[0]\n          this.marketPlace = contractRes[0];\n\n          this.getDate().then((date:any)=>{\n            console.log(date.currentDateTime);\n\n              this.marketPlace.methods\n            .shiftToMarketPlace(\n              this.orderNo,this.accountNumber,this.publishDate,bidClose,\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('Published to Marketplace', 'Issuing Bank', { duration: 3000 })\n              resp(receipt)\n            });\n          })\n\n      })\n    })\n  })\n  }\n\n  getB() {\n    return new Promise((resp, rej) => {\n      var myCurrentDate=new Date();\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];;\n          this.accountNumber = accountData[0];\n          var order = \"ORD96\";\n          this.orderNo = bytes32({ input: order });\n          this.marketPlace.methods.returnPublishedDate(this.orderNo).call().then((publishdate:any)=> {\n            // console.log('PUBLISHED DATE : ',publishdate);\n            var getTimeNow  = new Date();\n            this.publishDate = getTimeNow.getTime();\n            console.log(publishdate);\n            console.log(this.publishDate);\n            this.pubDate = publishdate[0];\n            this.endDate = new Date(parseInt(publishdate[1]));\n            // this.endDate = parseInt(publishdate[1]);\n            console.log(this.endDate);\n            // console.log(cur);\n            var cur = new Date(this.publishDate);\nconsole.log(cur)\nconsole.log(this.endDate)\n            // d1.getTime() === d2.getTime();\n            if(this.endDate == getTimeNow){\n              console.log(\"same\");\n            }else{\n              console.log(\"not\");\n              \n                // alert(diffDays);\n\n            }\n            // if(this.endDate.getTime() == getTimeNow.getTime()){\n            //   console.log(\"same\");\n            // }else{\n            //   console.log(\"not\");\n            //   var oneDay = 24 * 60 * 60 * 1000; \n            //   var diffDays = (this.endDate.getTime() - getTimeNow.getTime()) / (oneDay);\n            //   // var diffDays = (this.endDate.getTime() - getTimeNow.getTime()) / (oneDay);\n            //     console.log(diffDays);\n            //     // alert(diffDays);\n\n            // }\n            resp(publishdate);\n          })\n        })\n      })\n    })\n  }\n\n  compareDate(end,current){\n    return new Promise((res,rej)=>{\n// console.log(new Date(parseInt(end)));\n// console.log(current);\n      // if(current >= end){\n        if(new Date(parseInt(current)) >= end){\n      res(true);\n    }else{\n      res(false);\n    }\n  })\n  }\n\n\n  getPendingBids() {\n    return new Promise((resp, rej) => {\n      var myCurrentDate=new Date();\n      var count = 0\n      var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];\n          this.orders = contractRes[2];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0];\n          this.bid.methods\n            .returnSentBids(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              if(value.length>0){\n              for (var i = 0; i < value.length; i++) {\n                try {\n                  throw i\n                } catch (ii) {\n                this.bid.methods.returnBidsDet(this.accountNumber,value[ii]).call().then((lcdetails:any)=> {\n                let lcD = lcdetails[1];\n                let ip5:any;\n                  this.ipfs.getHashFromIPFS(lcD).then((ip2) =>{\n                    this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                    ip5 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                    console.log(this.ipfsConverted2);\n\n                  this.orders.methods.getOrderData(value[ii])\n                  .call().then(products => {\n                    this.marketPlace.methods.returnIsShifted(value[ii])\n                    .call().then(bids => {\n                    this.marketPlace.methods.returnPublishedDate(value[ii]).call().then((publishdate:any)=> {\n                        this.pubDate = publishdate[0];\n                      this.ipfs.getHashFromIPFS(products).then((ip) =>{\n                        this.ipfsConverted = JSON.parse(Buffer.from(ip.value.buffer).toString()); \n                         count++;\n                         this.compareDate(publishdate[1],myCurrentDate).then((dC:any)=>{\n                          if(lcdetails[0] && !bids[1]){\n\n                           \n                            resultArray.push({\n                              0:lcdetails,\n                              1:this.ipfsConverted.OrderNo,\n                              2:this.ipfsConverted.consigneeName,\n                              3:this.ipfsConverted.seller,\n                              4:this.ipfsConverted.SellerAddedPL,\n                              5:this.ipfsConverted.ShippingAgencyPL,\n                              6:this.ipfsConverted.BOL,\n                              7:this.ipfsConverted.CIAdded,\n                              8:this.ipfsConverted.PLNo,\n                              9:this.ipfsConverted.BOLNO,\n                              10:this.ipfsConverted.CINO,\n                              11:bids,\n                              12:this.accountNumber,\n                              13:this.ipfsConverted.sellerWallet,\n                              14:new Date(parseInt(this.pubDate)),\n                              15:new Date(parseInt(publishdate[1])),\n                              16:myCurrentDate,\n                              17:dC,\n                              18:ip5.bidAmount,\n                              19:ip5.prodPrice,\n                              20:this.ipfsConverted2\n\n                            }); \n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                            \n                            }\n\n                          }else{\n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                  \n                            }\n                          }\n                      \n                      })\n\n                      })\n\n                    })\n\n                    });\n                  });\n\n\n                   })   // ipfsconveted2\n\n                })\n              }\n              }\n            }else{\n              rej(\"no data\");\n            }\n            })\n        })\n      })\n    })\n  }\n\n  getRejectedBids() {\n    return new Promise((resp, rej) => {\n      var myCurrentDate=new Date();\n      var count = 0;\n      var mixArray = [];\n      var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];\n          this.orders = contractRes[2];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0];\n          this.bid.methods\n            .returnSentBids(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              if(value.length>0){\n              for (var i = 0; i < value.length; i++) {\n                try {\n                  throw i\n                } catch (ii) {\n                this.bid.methods.returnBidsDet(this.accountNumber,value[ii]).call().then((lcdetails:any)=> {\n                  let lcD1 = lcdetails[1];\n                  let ip6:any;\n                    this.ipfs.getHashFromIPFS(lcD1).then((ip2) =>{\n                          this.ipfsConverted3 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                          ip6 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                 \n                          console.log(this.ipfsConverted3);\n\n                  this.orders.methods.getOrderData(value[ii])\n                  .call().then(products => {\n                    this.marketPlace.methods\n                    .returnIsShifted(value[ii])\n                    .call().then(bids => {\n                    this.marketPlace.methods.returnPublishedDate(value[ii]).call().then((publishdate:any)=> {\n                       this.pubDate = publishdate[0];\n                        this.ipfs.getHashFromIPFS(products).then((ip) =>{\n                        this.ipfsConverted4 = JSON.parse(Buffer.from(ip.value.buffer).toString()); \n                          count++;\n                         this.compareDate(publishdate[1],myCurrentDate).then((dC:any)=>{\n                          if(lcdetails[0] && bids[1] && bids[4] != this.accountNumber){\n                               resultArray.push({\n                              0:lcdetails,\n                              1:this.ipfsConverted4.OrderNo,\n                              2:this.ipfsConverted4.consigneeName,\n                              3:this.ipfsConverted4.seller,\n                              4:this.ipfsConverted4.SellerAddedPL,\n                              5:this.ipfsConverted4.ShippingAgencyPL,\n                              6:this.ipfsConverted4.BOL,\n                              7:this.ipfsConverted4.CIAdded,\n                              8:this.ipfsConverted4.PLNo,\n                              9:this.ipfsConverted4.BOLNO,\n                              10:this.ipfsConverted4.CINO,\n                              11:bids,\n                              12:this.accountNumber,\n                              13:this.ipfsConverted4.sellerWallet,\n                              14:new Date(parseInt(this.pubDate)),\n                              15:new Date(parseInt(publishdate[1])),\n                              16:myCurrentDate,\n                              17:dC,\n                              18:ip6.bidAmount,\n                              19:ip6.prodPrice\n\n                            }); \n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                            \n                            }\n                          }else{\n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                  \n                            }\n                          }\n                      \n                      })//compare dates end \n                    // });\n                      })\n\n                    })\n\n                    });\n                  });\n                });\n\n                });\n\n                // })\n              }\n              }\n            }else{\n              rej(\"no data\");\n            }\n            })\n        })\n      })\n    })\n  }\n\n  getDateBids(start,end){\n    return new Promise((resp, rej) => {\n      var myCurrentDate=new Date();\n      var count = 0;\n    var mixArray = [];\n    var resultArray = [];\n      this.web3.loadBlockChainData().then((accountData: any) => {\n        this.web3.getAllContract().then((contractRes: any) => {\n          this.marketPlace = contractRes[0];\n          this.orders = contractRes[2];\n          this.bid = contractRes[7];\n          this.accountNumber = accountData[0];\n          this.bid.methods\n            .returnSentBids(this.accountNumber)\n            .call()\n            .then((value: any) => {\n              if(value.length>0){\n              for (var i = 0; i < value.length; i++) {\n                try {\n                  throw i\n                } catch (ii) {\n                this.bid.methods.returnBidsDet(this.accountNumber,value[ii]).call().then((lcdetails:any)=> {\n// console.log(lcdetails)\n\n//ipfscon2\nlet lcD = lcdetails[1];\nlet ip5:any;\n\n                    this.ipfs.getHashFromIPFS(lcD).then((ip2) =>{\n\n                          this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                         ip5 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                          console.log(this.ipfsConverted2);\n                          console.log(ip5);\n                         \nconsole.log(ip5.bid_placeddt_new);\nvar dateString = moment(ip5.bid_placeddt_new).format('DD/MM/YYYY');\nconsole.log(dateString)\n                            // this.ipfsConverted2.bid_placeddt\n                          // this.ipfsConverted2.bid_placeddt_new\n\n                  this.orders.methods.getOrderData(value[ii])\n                  .call()\n                  .then(products => {\n                    this.marketPlace.methods\n                    .returnIsShifted(value[ii])\n                    .call()\n                            .then(bids => {\n                              // console.log(bids);\n                    //getpublishedDate..value[ii];\n                    this.marketPlace.methods.returnPublishedDate(value[ii]).call().then((publishdate:any)=> {\n                      // console.log('PUBLISHED DATE : ',publishdate);\n                      this.pubDate = publishdate[0];\n                      // console.log(products);\n                      this.ipfs.getHashFromIPFS(products).then((ip) =>{\n                        this.ipfsConverted = JSON.parse(Buffer.from(ip.value.buffer).toString()); \n                        // console.log(this.ipfsConverted);\n\n                        // this.ipfs.getHashFromIPFS(lcdetails[1]).then((ip2) =>{\n                        //   this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                        //   console.log(this.ipfsConverted2);\n                        count++;\n                         this.compareDate(publishdate[1],myCurrentDate).then((dC:any)=>{\n                          //  if()\n                          //  commmented\n                          // if(lcdetails[0] && bids[1] && bids[4] != this.accountNumber){\n\n//                           this.ipfs.getHashFromIPFS(lcdetails[1]).then((ip2) =>{\n\n//   this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n//  ip5 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n//   console.log(this.ipfsConverted2);\n//   console.log(ip5);\n\nif(moment(this.ipfsConverted2.bid_placeddt_new).format('DD/MM/YYYY') >= start.toString() && moment(this.ipfsConverted2.bid_placeddt_new).format('DD/MM/YYYY') <= end.toString()){\n  // if(this.ipfsConverted2.bid_placeddt >= start.toString() && this.ipfsConverted2.bid_placeddt <= end.toString()){\n\n// }else{\n\n// }\n                          \n// this.ipfs.getHashFromIPFS(lcdetails[1]).then((ip2) =>{\n\n//   this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n//  ip5 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n//   console.log(this.ipfsConverted2);\n//   console.log(ip5);\n\n                            console.log(lcdetails);\n                            console.log(bids);\n                            // this.ipfs.getHashFromIPFS(lcdetails[1]).then((ip2) =>{\n                            //   this.ipfsConverted2 = JSON.parse(Buffer.from(ip2.value.buffer).toString()); \n                            //   // console.log(this.ipfsConverted2);\n                            resultArray.push({\n                              // 0: this.ipfsConverted,\n                              0:lcdetails,\n                              1:this.ipfsConverted.OrderNo,\n                              2:this.ipfsConverted.consigneeName,\n                              3:this.ipfsConverted.seller,\n                              4:this.ipfsConverted.SellerAddedPL,\n                              5:this.ipfsConverted.ShippingAgencyPL,\n                              6:this.ipfsConverted.BOL,\n                              7:this.ipfsConverted.CIAdded,\n                              8:this.ipfsConverted.PLNo,\n                              9:this.ipfsConverted.BOLNO,\n                              10:this.ipfsConverted.CINO,\n                              11:bids,\n                              12:this.accountNumber,\n                              13:this.ipfsConverted.sellerWallet,\n                              14:new Date(parseInt(this.pubDate)),\n                              15:new Date(parseInt(publishdate[1])),\n                              16:myCurrentDate,\n                              17:dC,\n                              18:ip5.bidAmount,\n                              19:ip5.prodPrice,\n                              20:this.ipfsConverted2\n                              // 18:this.ipfsConverted2.bidAmount,\n                              // 19:this.ipfsConverted2.prodPrice\n\n                            }); \n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                            \n                            }\n                          \n                          // })   //ipfscon2 if \n                          \n                            // });\n\n                          // commmented\n                          }else{\n                            if (count == value.length) { \n                              resp(resultArray);\n                            } else {\n                  \n                            }\n                          }\n                          // commented\n                        // });\n                      })//compare dates end \n                    // });\n                      })\n\n                    })\n\n                    });\n                  });\n                });    //ipfsc2\n\n                });\n\n                // })\n              }\n              }\n            }else{\n              rej(\"no data\");\n            }\n            })\n        })\n      })\n    })\n  }\n\n  getDataAPI(data){\n    // var apik = ''\n    return this.httpClient.get('http://localhost:5000/getFromBC',{\n      params: new HttpParams().set('appid','gNjT4t4RUhzIyOuPBEl3hPKZqlDvK8XF')\n    })\n    // .pipe(/)\n  }\n\n  createPost(data) {\n    return this.httpClient.post(\n      'http://localhost:5000/saveToUser',\n      data\n      // {\n      //   headers: new HttpHeaders({\n      //     'custom-header': 'post Leela',\n      //   }),\n      //   observe: 'body',\n      // }\n    );\n  }\n\n  getDBAPI(){\n    return this.httpClient.get('https://data-analytics-api-e2qi.onrender.com/api/kyc')\n  }\n  getTransaction(){\n    return this.httpClient.get('https://data-analytics-api-e2qi.onrender.com/api/getTransactions')\n  }\n  getConversionAPI(){\n    return this.httpClient.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,SGD,EUR,INR,USD')\n\n  }\n  getLeiCompanyInfo(LEINO){\n    return this.httpClient.get( 'https://api.gleif.org/api/v1/lei-records?filter[entity.names]=' + LEINO)\n   \n  }\n  getleiHistory(LEINO){\n    // return this.httpClient.get( 'https://ttp-scan.herokuapp.com/getTransactions?lei='+LEINO)\n    return this.httpClient.get( 'https://data-analytics-api-e2qi.onrender.com/api/getHistory/'+LEINO)\n  }\n  saveRoles(hash){\n    return new Promise((resp, rej) => {\n      this.web3.getAllContract().then((contractRes: any) => {\n        this.web3.loadBlockChainData().then((accountData: any) => {\n          this.accountNumber = accountData[0]\n          this.marketPlace = contractRes[1];\n              this.marketPlace.methods\n            .saveRole(\n              this.accountNumber,hash\n            )\n            .send({ from: this.accountNumber })\n            .once('receipt', (receipt) => {\n              console.log(receipt)\n              this.snackBar.open('Roles updated', 'Bank', { duration: 3000 })\n              resp(receipt)\n            });\n      })\n    })\n  })\n  }\n}\n\n\n\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Injectable } from '@angular/core';\nconst createClient = require('ipfs-http-client')\n\ndeclare var require;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpfsService {\n\n  // private ipfs = createClient({ host: \"ipfs.infura.io\", port: 5001, protocol: \"https\" });\n  private ipfs = createClient({ host: 'localhost', port: '5001', protocol: 'http' })\n\n  private files_json:any;\n  private ipfsHash:any;\n  \n  constructor() { }\n\n  public async saveToIpfs(file){\n    this.files_json = JSON.stringify(file);\n    console.log(this.files_json);\n    this.ipfsHash = await this.ipfs.add(this.files_json);\n    return this.ipfsHash.path;\n  }\n\n  public async getHashFromIPFS(id){\n    this.ipfsHash = await this.ipfs.cat(id);\n    return this.ipfsHash.next();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shlist-dialog',\n  templateUrl: './shlist-dialog.component.html',\n  styleUrls: ['./shlist-dialog.component.css']\n})\nexport class ShlistDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <h2 mat-dialog-title>Register</h2>\n  <mat-dialog-content class=\"mat-typography\" >\n  <h3>Signup for Stakeholders</h3>\n  <p>Registration option for different stakeholders namely: Seller, Consignee, Shipping Agency, Carrier, Port Authorities</p>\n  <a mat-button routerLink=\"signup\">Link1</a>\n  <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link2</a>\n  <!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n    <mat-grid-tile>1</mat-grid-tile>\n    <mat-grid-tile>2</mat-grid-tile>\n    <mat-grid-tile>3</mat-grid-tile>\n    <mat-grid-tile>4</mat-grid-tile>\n  </mat-grid-list> -->\n\n  \n\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close = \"false\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Signup</button>\n  </mat-dialog-actions>\n</div>\n\n\n<div>\n  <!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\">\n    <mat-grid-tile>1</mat-grid-tile>\n    <mat-grid-tile>2</mat-grid-tile>\n    <mat-grid-tile>3</mat-grid-tile>\n    <mat-grid-tile>4</mat-grid-tile>\n  </mat-grid-list> -->\n  <!-- <router-outlet></router-outlet> -->\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\ndeclare var Buffer;\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.css']\n})\nexport class AnalyticsComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n\n  ipfsConverted2: any;\n  accountNumber:any;\n  userinfo:any;\n  public registration: any;\n\n  constructor(private web3: Web3Service, \n    public backend: BackendService,\n    public router:Router,\n    public loaderService: LoaderService,\n    private ipfs: IpfsService,\n    private cd: ChangeDetectorRef) { \n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[0];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n\n                     this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n                    })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  viewFraud(){\n  this.router.navigate(['tranasaction_issue']);\n  \n  }\n\n  viewLEIIssue(){\n  this.router.navigate(['lei_issue']);\n\n  }\n  redirectDashboard(){\n    // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n    this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\n\n}\n","<div class=\"loaders\">\n\n    <div class=\"bankLoader\">\n      <app-loader [id]=\"'bankLoader'\"></app-loader>\n    </div>\n  </div> \n  <mat-sidenav-container class=\"example-container\">\n    <mat-sidenav\n      #sidenav\n      class=\"example-sidenav\"\n      disableClose=\"true\"\n      opened=\"true\"\n      mode=\"side\"\n    >\n      <mat-nav-list>\n        <mat-list-item>\n          <mat-icon\n            class=\"navicon\"\n            (click)=\"isExpanded = !isExpanded\"\n            mat-list-icon\n            matTooltip=\"Expand\"\n          >\n            menu\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\"></h4>\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon (click)=\"redirectDashboard()\" matTooltip=\"Dashboard\">\n            dashboard\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Dashboard</h4>\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon\n            class=\"navicon\"\n            matTooltip=\"Transaction\"\n            (click)=\"redirectDashboard()\"\n            mat-list-icon\n          >\n            swap_horiz\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n        </mat-list-item>\n  \n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Balance\">\n            paid\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n        </mat-list-item> -->\n        <mat-list-item>\n          <mat-icon class=\"navicon active\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n        </mat-list-item>\n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">\n            receipt_long\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n        </mat-list-item> -->\n       \n        <mat-list-item>\n          <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n        </mat-list-item>\n  \n      </mat-nav-list>\n    </mat-sidenav>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\">Home</a></li>\n        <li class=\"breadcrumb-item\"  aria-current=\"page\">Analytics</li>\n\n      </ol>\n\n    </nav>\n    <div class=\"example-sidenav-content\">\n      <!-- <mat-card class=\"example-card\"> -->\n      <div class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row headContent\">\n            <div class=\"col-lg-8 col-md-8 col-sm-8\">\n              <h2>Analytics</h2>\n            </div>\n  \n            <div class=\"col col-md-auto\">\n              <!-- <img\n                class=\"img-fluid profileimg\"\n                src=\"../../../assets/images/bank.png\"\n                alt=\"Avatar\"\n                mat-mini-fab\n                style=\"width: 60px; height: 60px; padding-bottom: 5px;\"\n              /> -->\n            </div>\n  \n            <div class=\"col col-lg-2\">\n              <!-- <h6>{{ bankName }}</h6>\n              <h6>{{ bankMail }}</h6> -->\n  \n              \n            </div>\n          </div>\n  \n          <div class=\"row\">\n            <div class=\"col-lg-6 col-md-6 col-sm-12\">\n              <mat-card>\n                <mat-card-header>\n                  <h3>KYC - Issue</h3>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <mat-icon class=\"cardicon1 img-fluid\" color=\"primary\" >\n                        <span class=\"material-icons-outlined\">\n                          insights\n                          </span>\n                      </mat-icon>\n                    </div>\n                    <div class=\"col-lg-6 \">\n                      <button\n                      class=\"viewbtn\"\n                        (click)=\"viewLEIIssue()\"\n                        mat-raised-button\n                        fill=\"outline\"\n                        slot=\"end\"\n                      >\n                        View\n                      </button>\n                    </div>\n                  </div>\n                </mat-card-content>\n                <mat-card-footer>\n                  Click to view KYC data for missing and fraudulant LEI's\n                </mat-card-footer>\n              </mat-card>\n            </div>\n            <div class=\"col-lg-6 col-md-6 col-sm-12\">\n              <mat-card>\n                <mat-card-header>\n                  <h3>Malicious Transactions</h3>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <mat-icon class=\"cardicon1\" >\n                        swap_horiz\n                     \n                      </mat-icon>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <button\n                        class=\"viewbtn\"\n                        mat-raised-button\n                        fill=\"outline\"\n                        slot=\"end\"\n                        (click)=\"viewFraud()\"\n                      >\n                        View\n                      </button>\n                    </div>\n                  </div>\n                </mat-card-content>\n                <mat-card-footer>\n                  Click to view transactions with malicious data\n                </mat-card-footer>\n              </mat-card>\n            </div>\n  \n            <!-- <div class=\"col-lg-6 col-md-6 col-sm-12\">\n              <mat-card>\n                <mat-card-header>\n                  <h3>Market Place</h3>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                      <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                        swap_horiz\n                      </mat-icon>\n                    </div>\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                      <button\n                      class=\"viewbtn\"\n                        (click)=\"viewBidsTable()\"\n                        mat-raised-button\n                        fill=\"outline\"\n                        slot=\"end\"\n                      >\n                        View\n                      </button>\n                    </div>\n                  </div>\n                </mat-card-content>\n                <mat-card-footer>\n                  Click to go to MarketPlace\n                </mat-card-footer>\n              </mat-card>\n            </div>\n  \n            <div class=\"col-lg-6 col-md-6 col-sm-12\">\n              <mat-card>\n                <mat-card-header>\n                  <h3>Analytics</h3>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                      <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                        swap_horiz\n                      </mat-icon>\n                    </div>\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                      <button\n                      class=\"viewbtn\"\n                        (click)=\"getDBAPI()\"\n                        mat-raised-button\n                        fill=\"outline\"\n                        slot=\"end\"\n                      >\n                        View\n                      </button>\n                    </div>\n                  </div>\n                </mat-card-content>\n                <mat-card-footer>\n                  Click to go to Analytics Application\n                </mat-card-footer>\n              </mat-card>\n            </div> -->\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-sidenav-container>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n// import { Web3Storage, getFilesFromPath } from 'web3.storage'\nimport { Web3Storage } from 'web3.storage/dist/bundle.esm.min.js'\nconst token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGM4NGM0NkVlRGRFOGU0NUVEQkY2NkRmMTM5RWI1Y2UyQkI3YjAyMzciLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2OTAyMTUwMTg5MjAsIm5hbWUiOiJkYXRhX2FuYWx5dGljcyJ9.RewP_qDD4SRl1wCDb8gK4QAtiRCjLdivu26g5qFZOec\"\n\n// const token = process.env.API_TOKEN\n\ndeclare var require;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Web3StorageService {\n    private client = new Web3Storage({ token })\n\n    constructor() { }\n\n    public async storeFile(file) {\n        console.log(file)\n        // const files = await getFilesFromPath('/path/to/file')\n        // const cid = await this.client.put(files)\n        // console.log(cid)\n        \n        //File upload\n        // Pack files into a CAR and send to web3.storage\n        // const rootCid = await this.client.put(file, {\n        //     name: 'data_analytics_register_datas',\n        //     maxRetries: 3,\n        // });\n        //save json object\n        const blob = new Blob([JSON.stringify(file)], { type: 'application/json' })\n\n        const files = [\n          new File(['user-registering-content'], 'plain-utf8.txt'),\n          new File([blob], 'data_analytics_register_data.json')\n        ]\n        const rootCid = await this.client.put(files);\n        console.log(rootCid)\n        return rootCid;\n    }\n    public async retrieveFile(rootCid) {\n        // const cid =\n        //     'bafybeidd2gyhagleh47qeg77xqndy2qy3yzn4vkxmk775bg2t5lpuy7pcu'\n\n        // const res = await this.client.get(cid)\n        // const files = await res.files()\n\n        // for (const file of files) {\n        //     console.log(`${file.cid}: ${file.name} (${file.size} bytes)`)\n        // }\n        const res = await this.client.get(rootCid); // Web3Response\nconst files = await res.files(); // Web3File[]\nfor (const file of files) {\n  console.log(`${file.cid} ${file.name} ${file.size}`);\n}\nreturn files;\n\n    }\n    //  async getHashFromIPFS(id){\n    //   this.ipfsHash = await this.ipfs.cat(id);\n    //   console.log(this.ipfsHash)\n    //   return this.ipfsHash.next();\n    // }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-login works!</p>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  // roles: FormGroup;\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  rolesExists = false;\n  roles = this.fb.group({\n    Marketplace:false,\n    KYC:false,\n    Analytics:false\n  });\n\n  ipfsConverted2: any;\n  accountNumber:any;\n  userinfo:any;\n  public registration: any;\n  ipfsConverted3: any;\n  files: { Marketplace: any; KYC: any; Analytics: any; };\n\n  constructor(private fb: FormBuilder,private web3: Web3Service,public backend: BackendService,public router:Router,\n    public loaderService: LoaderService,\n    private ipfs: IpfsService,\n    private cd: ChangeDetectorRef,\n    public AppComponent:AppComponent,\n    private route: ActivatedRoute) {\n\n       \n      this.web3.checkAndInstantiateWeb3()\n      .then((checkConn: any) => {\n        console.log(checkConn)\n        if (checkConn === 'connected') {\n          this.web3.loadBlockChainData()\n            .then((accountData: any) => {\n              console.log(accountData[0])\n              this.accountNumber = accountData[0];\n             \n              this.web3.getAllContract()\n                .then((contractRes: any) => {\n                  if (contractRes) {\n                    console.log(contractRes)\n                    this.registration = contractRes[1];\n                    this.registration.methods.getUserHashType(this.accountNumber)\n                    .call()\n                    .then(user =>{\n                        console.log('user');\n                        console.log(user);\n                       this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                        this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                        console.log(this.ipfsConverted2 );\n                         this.userinfo = user[0];\n                         this.registration.methods.returnRole(this.accountNumber)\n                         .call()\n                         .then(role =>{\n                           console.log(role);\n                           if(role.length == 0){\n                              this.roles = fb.group({\n                                Marketplace: false,\n                                KYC: false,\n                                Analytics: false\n                              });\n                            this.rolesExists = false;\n\n                           }else{\n                          this.ipfs.getHashFromIPFS(role).then((data2:any)=>{\n                            this.ipfsConverted3 = JSON.parse(Buffer.from(data2.value.buffer).toString());\n                            console.log(this.ipfsConverted3 );\n                            this.roles = fb.group({\n                              Marketplace: this.ipfsConverted3.Marketplace,\n                              KYC: this.ipfsConverted3.KYC,\n                              Analytics: this.ipfsConverted3.Analytics\n                            });\n\n                            this.rolesExists = true;\n\n                          })    \n                           }\n                         \n                         });\n                      })\n                      \n                    });\n                    }\n                });\n            }, err => {\n              console.log('account error', err);\n            });\n        }\n      }, err => {\n        alert(err);\n      });\n\n\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  saveForm(){\n    console.log(this.roles.value.KYC);\n    console.log(this.roles.value);\n\n    this.files = {\n      Marketplace: this.roles.value.Marketplace,\n      KYC: this.roles.value.KYC,\n      Analytics: this.roles.value.Analytics\n    }\n\n    console.log(this.files);\n\n    this.ipfs.saveToIpfs(this.files).then((data) => {\n      this.backend.saveRoles(data).then(res=>{\n        console.log(res);\n      this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n\n      })\n    \n    });\n\n\n    // this.showClassGrp.patchValue({amateur: false});\n    // console.log(this.showClassGrp.value.amateur);\n  }\n\n  // saveForm(){\n  //   console.log(this.roles.value.KYC);\n  //   console.log(this.roles.value);\n\n  //   this.files = {\n  //     Marketplace: this.roles.value.Marketplace,\n  //     KYC: this.roles.value.KYC,\n  //     Analytics: this.roles.value.Analytics\n  //   }\n\n  //   console.log(this.files);\n\n  //   this.ipfs.saveToIpfs(this.files).then((data) => {\n  //     this.backend.saveRoles(data).then(res=>{\n  //       console.log(res);\n  //     })\n    \n  //   });\n\n\n  //   // this.showClassGrp.patchValue({amateur: false});\n  //   // console.log(this.showClassGrp.value.amateur);\n  // }\n\n\n}\n","\n<div class=\"loaders\">\n\n    <div class=\"bankLoader\">\n      <app-loader [id]=\"'bankLoader'\"></app-loader>\n    </div>\n  </div> \n  <mat-sidenav-container class=\"example-container\">\n    <mat-sidenav\n      #sidenav\n      class=\"example-sidenav\"\n      disableClose=\"true\"\n      opened=\"true\"\n      mode=\"side\"\n    >\n      <mat-nav-list>\n        <mat-list-item>\n          <mat-icon\n            class=\"navicon\"\n            (click)=\"isExpanded = !isExpanded\"\n            mat-list-icon\n            matTooltip=\"Expand\"\n          >\n            menu\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\"></h4>\n        </mat-list-item>\n        <mat-list-item>\n          <!-- <mat-icon class=\"navicon active\" mat-list-icon matTooltip=\"Dashboard\"  (click)=\"redirectDashboard()\">\n            dashboard\n          </mat-icon> -->\n          <h4 mat-line *ngIf=\"isExpanded\">Dashboard</h4>\n        </mat-list-item>\n        <mat-list-item>\n          <!-- <mat-icon\n            class=\"navicon\"\n            matTooltip=\"Transaction History\"  (click)=\"redirectDashboard()\"\n            mat-list-icon\n          >\n            swap_horiz\n          </mat-icon> -->\n          <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n        </mat-list-item>\n  \n        <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Balance\">\n            paid\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n        </mat-list-item>\n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">\n            receipt_long\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n        </mat-list-item> -->\n       \n        <mat-list-item>\n          <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n        </mat-list-item>\n  \n  \n        <mat-list-item>\n          <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Roles\" routerLink=\"/roles\">summarize</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Roles</h4>\n        </mat-list-item>\n  \n  \n      </mat-nav-list>\n    </mat-sidenav>\n  \n    <div class=\"example-sidenav-content\">\n      <!-- <mat-card class=\"example-card\"> -->\n      <div class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row headContent\">\n            <div class=\"col-lg-8 col-md-8 col-sm-8\">\n              <h2>Bank Dashboard</h2>\n            </div>\n  \n            <div class=\"col col-md-auto\">\n              <img\n                class=\"img-fluid profileimg\"\n                src=\"../../../assets/images/bank.png\"\n                alt=\"Avatar\"\n                mat-mini-fab\n                style=\"width: 60px; height: 60px; padding-bottom: 5px;\"\n              />\n            </div>\n  \n            <div class=\"col col-lg-2\">\n              <!-- <h6>{{ bankName }}</h6>\n              <h6>{{ bankMail }}</h6> -->\n  \n              <!-- <h6>{{ userName }}</h6> -->\n            </div>\n          </div>\n  \n          <div class=\"row\">\n            <div class=\"col-lg-6 col-md-6 col-sm-12\">\n              <mat-card>\n                <mat-card-header>\n                  <h3>Roles</h3>\n                </mat-card-header>\n                <mat-card-content>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                      <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                        account_balance\n                      </mat-icon>\n                    </div>\n                    <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                        <section class=\"example-section\" [formGroup]=\"roles\">\n                            <h4>Select Functionalities:</h4>\n                            <p><mat-checkbox formControlName=\"Marketplace\">Marketplace</mat-checkbox></p>\n                            <p><mat-checkbox formControlName=\"KYC\">KYC</mat-checkbox></p>\n                            <p><mat-checkbox formControlName=\"Analytics\">Analytics</mat-checkbox></p>\n                          </section>\n                          <!-- <button class=\"btn btn-primary\" type=\"submit\"> Submit </button> -->\n      <button (click)=\"saveForm()\" *ngIf=\"!rolesExists\" mat-raised-button color=\"primary\">Save</button>\n      <button (click)=\"saveForm()\" *ngIf=\"rolesExists\" mat-raised-button color=\"primary\">Update</button>\n\n                    </div>\n                  </div>\n                </mat-card-content>\n                <mat-card-footer>\n                    <!-- <section class=\"example-section\" [formGroup]=\"roles\">\n                        <h4>You chose:</h4>\n                        {{roles.value | json}}\n                      </section> -->\n                </mat-card-footer>\n              </mat-card>\n            </div>\n         \n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-sidenav-container>","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders,HttpParams} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n// const headers= new HttpHeaders()\n// .set('content-type', 'application/json')\n// .set('Access-Control-Allow-Origin', '*');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\nBASEURL : any;\n  constructor(\n    private httpClient: HttpClient\n  ) { \n    this.BASEURL = \"https://data-analytics-api-e2qi.onrender.com/api/\"\n  }\n\n  public saveDataToAPI(data: FormData): Observable<any> {\n    // const options ={'headers':headers}\n    // const url = 'http://localhost:3000/api/postInfo';\n    const url = this.BASEURL+'postInfo';\n    return this.httpClient.post<any>(url, data);\n  }\n  postDataInfoToMongo(data){\n    console.log('postDataInfoToMongo')\n    const cname = 'trialcountry'\n    // const url =   'http://localhost:3000/api/post';\n    // return this.httpClient.post('http://localhost:3000/api/postInfo',cname,{responseType: 'text'});\n    \nconst databody = data;\n    return this.httpClient.post('http://localhost:3000/api/postInfo', databody)\n  }\n  public getLogs(lei){\n    return this.httpClient.get('https://data-analytics-api-e2qi.onrender.com/api/getLogs/'+lei)\n  }\n  public getDBAPI(wallet){\n    return this.httpClient.get('https://data-analytics-api-e2qi.onrender.com/api/kyc/'+wallet)\n  }\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\n\nimport { MaterialModule } from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport {Location} from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-transaction-issue',\n  templateUrl: './transaction-issue.component.html',\n  styleUrls: ['./transaction-issue.component.css']\n})\nexport class TransactionIssueComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n\n  totalProduct = [];\n  lcs: any;\n  public orders: any;\n  bols = false;\n\n  displayedColumns: string[] =  ['lei','status','country','c-flag','name','em','act'  ];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  accountNumber: any;\n\n  ipfsConverted2: any;\n  userinfo:any;\n  public registration: any;\n\n  constructor(private web3: Web3Service, \n    public backend: BackendService,\n    public router:Router,\n    public loaderService: LoaderService,\n    private ipfs: IpfsService,\n    private cd: ChangeDetectorRef,\n    public location:Location,\n    private route: ActivatedRoute,\n    private httpClient:HttpClient\n    ) { \n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[0];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n                      const URL = \"https://\"+user[0]+\".ipfs.w3s.link/data_analytics_register_data.json\"\n                      // https://bafybeibt3ws4fzuf7p4kawlogy2auvgy34ee6255sszj5npwnszws4f6ze.ipfs.w3s.link/data_analytics_register_data.json\n                        this.httpClient.get((URL)).subscribe((result:any) => {\n                       // this.ipfs.getHashFromIPFS(params['id']).then((data:any)=>{\n                         // this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n                         this.ipfsConverted2 = result\n                   \n                    //  this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      // this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n\n          this.bankName =this.ipfsConverted2.bankName;\n          this.bankMail = this.ipfsConverted2.email;\n          this.userName =this.ipfsConverted2.firstName+\" \"+this.ipfsConverted2.lastName;\n                    })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\n\n\n    \n  ngOnInit(){   \n     this.loaderService.showLoader('bankLoader');\n\n     this.backend.getTransaction().subscribe((result:any) => {\n      console.log(result);\n      // console.log(result.docs.com);\n// lei: \"25490052BT01TLS5TR66\"\n// country: \"china\"\n// name: \"Maersk Supply Service West Africa A\\/S\"\n// wallet: \"0x78e973959D88b0F57022E38163c66e5e0B3b2ae8\"\n// ipfs: \"Qmfyrthfghghghhhfhgfhgfhr\"\n// date: \"2021-12-15\"\n// contact: 7895462313\n// email: \"Mar@gmail.com\"\n\n\n// _id: \"61bb64550e22aa6590690fe9\"\n// ipfs: \"Qmjghjydffdg4576dfhtytr5756fghgfhgf\"\n// consignee: \"John\"\n// orderId: \"8021\"\n// quantity: \"1\"\n// orderDetails: \"Turbinewarts\"\n// seller: \"wartsila\"\n// date: \"2021-12-18\"\n// contact: \"658512\"\n// consignee_Wallet: \"0x8548e973959D88b0F57022E65463c66e5e0B3b2uy8\"\n// seller_wallet: \"0x8548e973959D88b0F57022E654u765tye5e0B3b2uy8\"\n// tx: 1\n// lei: \"25490052BT01TLS5TR66\"\n\n\n      console.log(result);\n      // this.totalProduct.push(result.leiIssue);\n      this.dataSource = new MatTableDataSource(result);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.cd.detectChanges();\n      this.loaderService.hideLoader('bankLoader');\n    });\n\n//     status: \"LEI NOT FOUND\"\n// lei: \"987845645231184dfef\"\n// email: \"maer@gmail.com\"\n// wallet: \"0xasdre56tghythg\"\n// kycreg: \"2021-12-14\"\n// checkDate: \"2022-01-07\"\n// mongoID: \"61ae3c475ff71e6cdaf6ec75\"\n\n\n\n    // this.loaderService.hideLoader('bankLoader');\n\n    // this.route.params.subscribe(params => {\n    //   console.log(params);\n    //   console.log(params['id']);\n    //   if (params['id']) {\n    //      // getHashFromIPFS\n    //       this.ipfs.getHashFromIPFS(params['id']).then((data:any)=>{\n    //         this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n    //       console.log(this.ipfsConverted );\n    //       this.bankName =this.ipfsConverted.bankName;\n    //       this.bankMail = this.ipfsConverted.email;\n    //       this.userName =this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n    //       this.loaderService.hideLoader('bankLoader');\n\n\n\n\n    //       this.loaderService.showLoader('bankLoader');\n    //       this.backend.getBankBids().then((result: any) => {\n    //         // console.log(result[0]);\n    //         this.web3.loadBlockChainData().then((accountData: any) => {\n    //             this.accountNumber = accountData[0];\n    //             if(result.length>0){\n    //               this.web3.getAllContract()\n    //               .then((contractRes: any) => {\n    //                 this.orders = contractRes[2];\n    //                 // this.totalProduct.push(this.ipfsConverted2);\n    //                 console.log(result);\n    //                 this.dataSource = new MatTableDataSource(result);\n    //                                       this.dataSource.sort = this.sort;\n    //                                       this.dataSource.paginator = this.paginator;\n    //                                       this.cd.detectChanges();\n    //                                       this.loaderService.hideLoader('bankLoader');\n    //               });\n    //             }else{\n    //               this.loaderService.hideLoader('bankLoader');\n    //   alert(\"No orders in marketplace\")\n    //             }\n      \n      \n    //       }).catch((err) => {\n    //       });\n    //       }).catch((err)=>{\n    //         alert(\"No orders yet in market place\");\n    //       // this.location.back()\n      \n    //       });\n\n\n\n    //       })\n\n\n    //   }\n    // });\n  }\n\n\n\nviewIssuing(){\n  console.log('in view url');\n  this.router.navigate(['issuing_transaction']);\n\n}\nviewAdvisory(){\n  this.router.navigate(['advisory_transaction']);\n\n}\n\nviewBidsTable(){\n  this.router.navigate(['bids_table']);\n}\nviewCertificate(){\n}\ngetDBAPI(){\n  this.router.navigate(['analytics']);\n\n  // this.backend.getDBAPI().subscribe((result) => {\n  //   console.log(result);\n  // });\n}\n redirectDashboard(){\n    // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n    this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\n\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n <mat-sidenav-container class=\"example-container\">\n\n    <mat-sidenav #sidenav class=\"example-sidenav\"  disableClose=\"true\" opened=\"true\" mode=\"side\">\n     <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" style=\"margin: 10px;\">\n    <mat-icon class=\"navicon\" aria-label=\"Menu\">menu</mat-icon>\n  </button> -->\n\n  <mat-nav-list>\n\n    <mat-list-item >\n        <mat-icon class=\"navicon \" (click)=\"isExpanded = !isExpanded\" mat-list-icon matTooltip=\"Expand\">menu</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"> </h4>\n\n    </mat-list-item>\n    <mat-list-item >\n      <mat-icon class=\"navicon\"  mat-list-icon matTooltip=\"Dashboard\"  (click)=\"redirectDashboard()\">dashboard</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\"> Dashboard</h4>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon class=\"navicon\" matTooltip=\"Transaction\"  (click)=\"redirectDashboard()\" mat-list-icon>swap_horiz</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n    </mat-list-item>\n\n    <!-- <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Balance\">paid</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item> -->\n    <!-- <mat-list-item>\n      <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">receipt_long</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n    </mat-list-item> -->\n    <mat-list-item>\n      <mat-icon class=\"navicon active\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n    </mat-list-item>\n\n    <mat-list-item>\n      <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n    </mat-list-item>\n    \n  </mat-nav-list>\n\n    </mat-sidenav>\n\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\" >Home</a></li>\n        <li class=\"breadcrumb-item\"><a (click)=\"getDBAPI()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\" >Analytics</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Malicious Transactions</li>\n\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n\n    </nav>\n\n    <div class=\"example-sidenav-content\">\n      <div class=\"example-card\">\n        <div class=\"main-content\">\n          <div class=\"container-fluid\">\n\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                          <h3 style=\"padding: 10px 10px 10px 10px;\">TradeTrip Scan : Malicious Transactions</h3>\n\n    <!-- <mat-card> -->\n        <div class=\"mat-elevation-z8\">\n          <div style=\"overflow-x:auto;\">\n              \n                      <table class=\"table table-responsive-sm table-responsive-md\" mat-table [dataSource]=\"dataSource\"   matSort>\n                        <ng-container matColumnDef=\"lei\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> LEI </th>\n                          <td mat-cell *matCellDef=\"let row\">\n                            <label *ngIf=\"row.lei === 'NA'; else elseBlock\">Not Available</label>\n                            <ng-template #elseBlock>\n                             <b> {{row.lei}}</b>\n                            </ng-template>\n                           </td>\n                        </ng-container> \n                        <ng-container matColumnDef=\"status\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row.status}} </td>\n                        </ng-container> \n\n                        <ng-container matColumnDef=\"country\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row.cname}} </td>\n                        </ng-container> \n                        <ng-container matColumnDef=\"c-flag\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header>Remarks </th>\n                          <td mat-cell *matCellDef=\"let row\">\n                            <label *ngIf=\"row.country === 'Un-Authorized'; else elseBlock1\">Export Controlled Country</label>\n                            <ng-template #elseBlock1>\n                             <b> {{row.country}}</b>\n                            </ng-template>\n                           \n                             </td>\n                        </ng-container> \n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n\n          \n\n            <!-- <ng-container matColumnDef=\"dt\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.date | date:'dd/MM/yyyy'}} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"contact\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact</th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.contact}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"em\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n            </ng-container>\n\n       \n            <ng-container matColumnDef=\"act\">\n              <th mat-header-cell *matHeaderCellDef style=\"padding-right: 20px\"> History </th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell>\n                  <button mat-icon-button  routerLink=\"/history/{{row.lei}}\">History<mat-icon>launch</mat-icon></button> \n                </td>\n              </ng-container>\n            </ng-container>\n      \n\n         \n   \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" style=\"padding: 15px;\"></tr>\n\n          </table>\n\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n        </div>\n     <button  class=\"viewbtn\"\n     mat-raised-button\n     fill=\"outline\"\n     slot=\"end\" (click)=\"viewCertificate()\"> View Certificate</button>\n     <!-- (click)=\"viewBidsTable()\" -->\n\n      <!-- </mat-card> -->\n\n</div>\n\n</div>\n\n</div>\n                    </div>\n\n                  </div>\n\n    </div>\n\n\n\n</mat-sidenav-container>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { BackendService } from '../../service/backend.service';\nimport { IpfsService } from '../../service/ipfs.service';\nimport { Web3Service } from '../../service/web3.service';\nimport { MaterialModule } from \"../../material/material.module\";\nimport { LoaderService } from '../../loader/loader.service';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-issuing-transaction',\n  templateUrl: './issuing-transaction.component.html',\n  styleUrls: ['./issuing-transaction.component.css']\n})\nexport class IssuingTransactionComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  public orders: any;\n  ipfsConverted: any;\n  totalProduct = [];\n  lcs: any;\n  ipfsConverted2: any;\n   accountNumber:any;\n   userinfo:any;\n   public registration: any;\n\n  displayedColumns: string[] = ['id', 'order','lc', 'action', 'transfer'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private web3: Web3Service, public backend: BackendService,public route:Router, \n    public loaderService: LoaderService, private ipfs: IpfsService, private cd: ChangeDetectorRef) {\n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[1];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n\n                     this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n                    })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\n\n \n  ngOnInit(): void {\n    console.warn(\"in ngOnInit\");\n\n    this.loaderService.showLoader('bankLoader');\n   \n      this.web3.getAllContract()\n        .then((contractRes: any) => {\n          this.orders = contractRes[3];\n          this.backend.getBankIssueLC().then((result: any) => {\n          console.log('result');\n            console.log(result);\n          // this.lcs = result;\n          for (let i = 0; i < result.length; i++) {\n            console.log(result[i]);\n            this.web3.convertToHex(result[i][0][0]).then((c: any) => {\n              contractRes[3].methods.returnLCStat(c)\n                .call()\n                .then((pro: any) => {\n                  console.log(pro)\n                  if (result[i][0][4]) {\n                    this.web3.getUtf8(result[i][0][4]).then((d: any) => {\n                      console.log('value of d')\n                      console.log(d);\n                      this.totalProduct.push({\n                        \"id\": i + 1,\n                        \"order\": result[i][0][0],\n                        \"lcissued\": d,\n                        \"price\": 1,\n                        \"lcstat\": pro\n                      });\n                      console.log(this.totalProduct);\n                      this.dataSource = new MatTableDataSource(this.totalProduct);\n                      this.dataSource.sort = this.sort;\n                      this.dataSource.paginator = this.paginator;\n                      this.cd.detectChanges();\n                    })\n                  } else {\n                    this.totalProduct.push({\n                      \"id\": i + 1,\n                      \"order\": result[i][0][0],\n                      \"lcissued\": false,\n                      \"price\": 1,\n                      \"lcstat\": pro\n                    });\n                    console.log(this.totalProduct);\n                    this.dataSource = new MatTableDataSource(this.totalProduct);\n                    this.dataSource.sort = this.sort;\n                  this.dataSource.paginator = this.paginator;\n                    this.cd.detectChanges();\n\n                  }\n                 \n                  this.loaderService.hideLoader('bankLoader');\n\n             \n\n\n                });\n\n            })\n\n          }\n        }).catch((err) => {\n\n        });\n        });\n   \n  }\n  issuingConfirmation(selecteditem: any) {\n    console.warn(\"CLIKCKED\");\n    this.loaderService.showLoader('bankLoader');\n\n\n    console.log(selecteditem);\n    console.log('in cashLC')\n\n    var order = selecteditem.order\n    console.log(order)\n\n\n    this.backend.issuingConfirmation(order).then((res: any) => {\n      console.log(res);\n      this.loaderService.hideLoader('bankLoader');\n      \n    })\n\n  }\n  redirectDashboard(){\n    // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n    this.route.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\ngetDBAPI(){\n  this.route.navigate(['analytics']);\n}\n}\n\n\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n <mat-sidenav-container class=\"example-container\">\n\n    <mat-sidenav #sidenav class=\"example-sidenav\"  disableClose=\"true\" opened=\"true\" mode=\"side\">\n     <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" style=\"margin: 10px;\">\n    <mat-icon class=\"navicon\" aria-label=\"Menu\">menu</mat-icon>\n  </button> -->\n\n  <mat-nav-list>\n\n    <mat-list-item >\n        <mat-icon class=\"navicon \" (click)=\"isExpanded = !isExpanded\" mat-list-icon matTooltip=\"Expand\">menu</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"> </h4>\n\n    </mat-list-item>\n    <mat-list-item (click)=\"redirectDashboard()\" >\n      <mat-icon class=\"navicon\"  mat-list-icon matTooltip=\"Dashboard\">dashboard</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\"> Dashboard</h4>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon class=\"navicon active\" matTooltip=\"Transaction\"  (click)=\"redirectDashboard()\" mat-list-icon>swap_horiz</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n    </mat-list-item>\n<!-- \n    <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Balance\">paid</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item> -->\n      <mat-list-item>\n        <mat-icon class=\"navicon\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n      </mat-list-item>\n\n      <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n      </mat-list-item>\n      <!-- <mat-list-item>\n      <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">receipt_long</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n    </mat-list-item> -->\n    <!-- <mat-list-item>\n      <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Cards\">folder_shared</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Cards</h4>\n    </mat-list-item> -->\n\n\n  </mat-nav-list>\n\n    </mat-sidenav>\n\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\">Home</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Requested LC's</li>\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n\n    </nav>\n\n    <div class=\"example-sidenav-content\">\n      <div class=\"example-card\">\n        <div class=\"main-content\">\n          <div class=\"container-fluid\">\n            <!-- <div class=\"row\">\n              <div class=\"col-lg-8 col-md-8 col-sm-8\">\n\n<h2>Bank Dashboard</h2>\n</div>\n            </div> -->\n\n\n\n                    <!-- <mat-divider [vertical]=\"true\"></mat-divider> -->\n                    <div class=\"row\">\n                        <div class=\"col-lg-10 col-md-12 col-sm-12\">\n                          <h3 style=\"padding: 10px 10px 10px 10px;\">Received Requests for Letter of Credit</h3>\n\n    <mat-card>\n        <div class=\"mat-elevation-z8\">\n          <div style=\"overflow-x:auto;\">\n              \n                      <table mat-table [dataSource]=\"dataSource\"   matSort>\n\n                        <ng-container matColumnDef=\"id\">\n                          <th mat-header-cell *matHeaderCellDef> # </th>\n                          <td mat-cell *matCellDef=\"let row; let i = index\"> {{(i+1) + (paginator.pageIndex*paginator.pageSize)}} </td>\n                         </ng-container>\n\n\n            <!-- <ng-container matColumnDef=\"id\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header># </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"order\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Number </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.order}} </td>\n            </ng-container>\n\n            <!-- <ng-container matColumnDef=\"amount\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount(SGD) </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.price}} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"lc\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> LC Number </th>\n              <td mat-cell *matCellDef=\"let row\">\n                \n              \n                <label *ngIf=\"(!row.lcissued); else lcFound\" >\n                  Not Available\n                </label>\n                <ng-template #lcFound>\n                <label >\n                  {{row.lcissued}} \n\n                </label>\n                </ng-template>\n              </td>\n            </ng-container>\n            <!-- <ng-container matColumnDef=\"lc\">\n              <th mat-header-cell *matHeaderCellDef> LC No. </th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell *ngIf=\"(!row.lcissued); else noReplie\">\n                NA\n                </td>\n              </ng-container>\n              <ng-template #noReplie>\n                {{row.lcissued}}\n              </ng-template>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"action\">\n              <th mat-header-cell *matHeaderCellDef> LC Status </th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell *ngIf=\"(!row.lcissued); else noReplies\" style=\"color:steelblue;\">\n                  <button mat-icon-button id={{row.order}} routerLink=\"/bank/issue-lc/{{row.order}}\" matTooltip=\"Letter of Credit\">Issue LC<mat-icon>launch</mat-icon></button>\n\n                </td>\n                <ng-template #noReplies>\n                  <td style=\"color:green;font-weight:bold\" > LC issued</td>\n                 </ng-template>\n              </ng-container>\n         \n            </ng-container>\n            <ng-container matColumnDef=\"transfer\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Transfer </th>\n                <td mat-cell *matCellDef=\"let row\"> \n                  <button mat-button color=\"primary\" id={{row.order}}  (click)=issuingConfirmation(row)>Confrim Fund Transfer</button>\n                   </td>\n              </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" style=\"padding: 15px;\"></tr>\n\n\n\n          </table>\n          \n          </div>\n\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n      </mat-card>\n\n</div>\n\n</div>\n\n</div>\n                    </div>\n\n                  </div>\n\n    </div>\n\n\n\n</mat-sidenav-container>\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import {ChangeDetectorRef, Component, HostListener, OnInit, ViewContainerRef, ComponentFactoryResolver, ViewChild} from '@angular/core';\nimport {Web3Service} from './service/web3.service';\nimport {IpfsService} from './service/ipfs.service';\nimport { Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatDialog} from '@angular/material/dialog';\n\n// import {create} from 'ipfs-http-client';\nimport { ThrowStmt } from '@angular/compiler';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { Web3StorageService } from './service/web3storage.service';\nimport { HttpClient } from '@angular/common/http';\n\n\ndeclare var Buffer;\n// const createClient = require('ipfs-http-client')\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  accountNumber: any;\n  productName: any;\n  productPrice: any;\n  show = true;\n  totalProduct = [];\n  public marketPlace: any;\n  public registration: any;\n  balance: any;\n  VG: any;\n  showalert = true;\n  durationInSeconds = 5;\n  ipfsConverted: any;\n  message = \"User Not Registered!\";\n  action = \"Please Signup.\"\n  nameFromTS = \"Trade TRip User COnsinee\";\n  SignedIn:boolean;\n  //  SignedIn=false;//landing page\n// SignedIn=true;//for other pages\nconsigneeLoggedIn:boolean;\nsellerSignedIn:boolean;\nconsigneeName:string;\nsellerName:string;\n  constructor(private cfr: ComponentFactoryResolver, private vcr: ViewContainerRef  ,\n    public web3: Web3Service, public ipfs: IpfsService, \n    public cd: ChangeDetectorRef,\n    public router: Router, \n    private _snackBar:MatSnackBar,\n    public dialog: MatDialog ,\n    public web3storage:Web3StorageService,\n    private httpClient: HttpClient\n    ) {\n\n    this.web3.checkAndInstantiateWeb3()\n      .then((checkConn: any) => {\n        console.log(checkConn)\n        if (checkConn === 'connected') {\n          this.web3.loadBlockChainData()\n            .then((accountData: any) => {\n              console.log(accountData[0])\n              this.accountNumber = accountData[0];\n              this.web3.getEtherBalance(this.accountNumber)\n                .then((data: any) => {\n                  this.balance = Number(data).toFixed(2);\n                  console.log(this.balance)\n                  console.log(data);\n                });\n              this.web3.getAllContract()\n                .then((contractRes: any) => {\n                  if (contractRes) {\n                    console.log(contractRes)\n                    this.registration = contractRes[0];\n                    this.registration.methods.getUserHashType(this.accountNumber)\n                    .call()\n                    .then(user =>{\n                      // this.VG = value;\n                      // console.log('data',this.VG);\n                      // console.log(value.length);\n                      console.log('user');\n                      console.log(user);\n                      if(!user[0]){\n                        this.SignedIn=false;//landing page\n                        this._snackBar.open(this.message, this.action, {duration:3000});\n                      }else{\n                        this.SignedIn=true;//for other pages\n                        console.log('user');\n                        console.log(user);\n                        this.web3storage.retrieveFile(user[0]).then(async (filedata: any) => {\n                          // no need of calling retreivefile instead directly calling url is done\n                          console.log('filedata')\n                          console.log(filedata)\n                          const URL = \"https://\"+user[0]+\".ipfs.w3s.link/data_analytics_register_data.json\"\n                          // https://bafybeibt3ws4fzuf7p4kawlogy2auvgy34ee6255sszj5npwnszws4f6ze.ipfs.w3s.link/data_analytics_register_data.json\n                          await this.httpClient.get((URL)).subscribe((result:any) => {\n                            console.log('lei');\n                           console.log(result);\n                           console.log(result.alias);\n                           this.ipfsConverted = result;\n                          //  this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                            // this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n                            console.log(this.ipfsConverted );\n                            this.message = \"Hello \"+ this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n                            this.action = \"Redirect to Dashboard\";\n    \n                            this._snackBar.open(this.message, this.action,{duration:3000});\n                            if(this.ipfsConverted.userRole == 'Consignee'){\n                            this.router.navigate(['consignee_dashboard',{id:user[0]}]);\n                            }else if(this.ipfsConverted.userRole == 'Seller'){\n                              this.sellerName=this.ipfsConverted.companyName;\n                              this.router.navigate(['seller_dashboard',{id:user[0]}]);\n                            }else if(this.ipfsConverted.userRole == 'Bank'){\n                              this.router.navigate(['bank_dashboard',{id:user[0]}]);\n                            }else if(this.ipfsConverted.userRole == 'ShippingAgency'){\n                              this.router.navigate(['shipping_agency',{id:user[0]}]);\n                            }else if(this.ipfsConverted.userRole == 'Carrier'){\n                              this.router.navigate(['carrier_dashboard',{id:user[0]}]);\n                            }else if(this.ipfsConverted.userRole == 'PortAuthority'){\n                              this.router.navigate(['port_authority_dashboard',{id:user[0]}]);\n                            }else{\n    \n                            }\n                            // {id:user}\n                         \n                          })\n                            })\n                      \n                      }\n                    });\n                    // this.marketPlace = contractRes[0];\n                    // this.marketPlace.methods.productCount()\n                    //   .call()\n                    //   .then(value => {\n                    //     for (let i = 1; i <= value; i++) {\n                    //       const product = this.marketPlace.methods.products(i)\n                    //         .call()\n                    //         .then(products => {\n                    //           this.show = false;\n                    //           this.totalProduct.push(products);\n                    //           this.cd.detectChanges();\n                    //         });\n                    //     }\n                    //     console.log('totalProduct ', this.totalProduct);\n                    //   });\n\n//                       this.marketPlace.methods.ipfs().call().then(value=>{\n//                         console.log(\"ipfs  from bc\")\n//                         console.log(value);\n//                           this.web3.getIPFSD(value).then((dat:any)=>{\n//     console.log(\"fetching from ipfs\")\n//   //  console.log(dat);\n//   // console.log(Buffer.from(dat.value.buffer).toString());\n//   console.log(JSON.parse(Buffer.from(dat.value.buffer).toString()));\n//  })\n//                       })\n                  }\n                });\n            }, err => {\n              console.log('account error', err);\n            });\n        }\n      }, err => {\n        alert(err);\n      });\n  }\n\n  ngOnInit() {\n    this.consigneeLoggedIn=false;\n    this.sellerSignedIn=false;\n  }\n\n  signup(){\n\n  }\n\n  \n}\n\n\n"," <mat-toolbar color=\"primary\" style=\"min-height: 55px !important; height: 55px !important;\" class=\"mat-elevation-z6\" *ngIf=\"!SignedIn||consigneeLoggedIn\" >\n    <button mat-icon-button  *ngIf=\"SignedIn\" class=\"example-icon\"  aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <img src=\"../assets/images/logo.png\" style=\"width:150px;height:50px\">\n    <span class=\"example-spacer\"></span>\n    <!-- <button mat-button (click)=\"openDialog()\" *ngIf=\"!SignedIn\">SIGNUP\n    <span class=\"material-icons\">\n  app_registration\n  </span>\n    </button> -->\n\n    <!-- <button *ngIf=\"!SignedIn\"> -->\n      <a [routerLink]=\"['user/register']\" routerLinkActive=\"active\"><span class=\"material-icons\"  *ngIf=\"!SignedIn\" >app_registration</span></a>\n\n    <!-- </button> -->\n\n\n\n\n  <div class=\"example-button-container\" *ngIf=\"consigneeLoggedIn\">\n    <!-- <button mat-mini-fab aria-label=\"Example icon button with a filter list icon\"> -->\n\n      <img class=\"img-fluid profileimg\" src=\"../assets/images/avatar.png\" alt=\"Avatar\" mat-mini-fab style=\"width:30px;height:30px;border-radius: 50%;\">\n\n    <!-- </button> -->\n\n  </div>\n  <h1 *ngIf=\"consigneeLoggedIn\"> {{ consigneeName }}</h1>\n  </mat-toolbar>\n\n\n  <mat-toolbar class=\"sellertoolbar\" *ngIf=\"SignedIn && sellerSignedIn\">\n    <i class=\"material-icons\">dashboard</i>\n     Seller Dashboard\n    <span class=\"example-spacer\"></span>\n    <div class=\"example-button-container\">\n    \n          <img class=\"img-fluid profileimg\" src=\"../assets/images/wartsila.png\" alt=\"Avatar\" mat-mini-fab style=\"width:30px;height:30px;border-radius: 50%;\">\n    \n    \n      </div>\n    <h1> {{ sellerName }}</h1>\n\n  </mat-toolbar>\n\n  <!-- <landing-page *ngIf=\"!SignedIn\" ></landing-page>\n  <router-outlet *ngIf=\"SignedIn\"  class=\"mainbody\">\n  </router-outlet>\n   -->\n\n   <!-- <app-toolbar></app-toolbar> -->\n\n<div>\n  <router-outlet></router-outlet>\n</div>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\nimport { MaterialModule } from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport {Location} from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n\n  totalProduct = [];\n  lcs: any;\n  public orders: any;\n  bols = false;\nlei:any;\n  displayedColumns: string[] = ['status','lei','kdt', 'dt','db'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  accountNumber: any;\n\n  \n    ipfsConverted2: any;\n    userinfo:any;\n    public registration: any;\n  \n    constructor(private web3: Web3Service, \n      public backend: BackendService,\n      public router:Router,\n      public loaderService: LoaderService,\n      private ipfs: IpfsService,\n      private cd: ChangeDetectorRef,\n      public location:Location,\n      private route: ActivatedRoute,\n      private httpClient: HttpClient \n      ) { \n      console.warn(\"calling order constra\");\n      this.route.params.subscribe((params) =>{\n        console.log(params);\n        this.lei = params.id;\n      });\n      this.web3.checkAndInstantiateWeb3()\n      .then((checkConn: any) => {\n        console.log(checkConn)\n        if (checkConn === 'connected') {\n          this.web3.loadBlockChainData()\n            .then((accountData: any) => {\n              console.log(accountData[0])\n              this.accountNumber = accountData[0];\n             \n              this.web3.getAllContract()\n                .then((contractRes: any) => {\n                  if (contractRes) {\n                    console.log(contractRes)\n                    this.registration = contractRes[0];\n                    this.registration.methods.getUserHashType(this.accountNumber)\n                    .call()\n                    .then(user =>{\n                   \n                      console.log('user');\n                      console.log(user);\n                      if(!user[0]){\n                      \n                      }else{\n                        console.log('user');\n                        console.log(user);\n                        const URL = \"https://\"+user[0]+\".ipfs.w3s.link/data_analytics_register_data.json\"\n                     \n   this.httpClient.get((URL)).subscribe((result:any) => {\n      this.ipfsConverted2 = result\n\n                      //  this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                        // this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                        console.log(this.ipfsConverted2 );\n                         this.userinfo = user[0];\n                      })\n                      }\n                    });\n                    }\n                });\n            }, err => {\n              console.log('account error', err);\n            });\n        }\n      }, err => {\n        alert(err);\n      });\n    }\n\n\n\n    \n  ngOnInit(){   \n    this.loaderService.showLoader('bankLoader');\n\n    //  alert(this.lei);\n     this.backend.getleiHistory(this.lei).subscribe((result:any) => {\n      console.log(result);\n      console.log(result.leiIssue);\n      // this.totalProduct.push(result.leiIssue);\n      this.dataSource = new MatTableDataSource(result);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.cd.detectChanges();\n      this.loaderService.hideLoader('bankLoader');\n    });\n\n  }\n\n\n\nviewIssuing(){\n  console.log('in view url');\n  this.router.navigate(['issuing_transaction']);\n\n}\nviewAdvisory(){\n  this.router.navigate(['advisory_transaction']);\n\n}\n\nviewBidsTable(){\n  this.router.navigate(['bids_table']);\n}\n\ngetDBAPI(){\n  this.router.navigate(['analytics']);\n\n  // this.backend.getDBAPI().subscribe((result) => {\n  //   console.log(result);\n  // });\n}\nviewFraud(){\n  this.router.navigate(['tranasaction_issue']);\n  \n  }\n  redirectDashboard(){\n    // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n    this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\n\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n <mat-sidenav-container class=\"example-container\">\n\n    <mat-sidenav #sidenav class=\"example-sidenav\"  disableClose=\"true\" opened=\"true\" mode=\"side\">\n     <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" style=\"margin: 10px;\">\n    <mat-icon class=\"navicon\" aria-label=\"Menu\">menu</mat-icon>\n  </button> -->\n\n  <mat-nav-list>\n\n    <mat-list-item >\n        <mat-icon class=\"navicon \" (click)=\"isExpanded = !isExpanded\" mat-list-icon matTooltip=\"Expand\">menu</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"> </h4>\n\n    </mat-list-item>\n    <mat-list-item >\n      <mat-icon class=\"navicon\"  mat-list-icon matTooltip=\"Dashboard\" (click)=\"redirectDashboard()\" >dashboard</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\"> Dashboard</h4>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon class=\"navicon \" matTooltip=\"Transaction \"  (click)=\"redirectDashboard()\" mat-list-icon>swap_horiz</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n    </mat-list-item>\n\n    <!-- <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Balance\">paid</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item> -->\n      <mat-list-item>\n        <mat-icon class=\"navicon active\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n      </mat-list-item>\n  \n\n    <mat-list-item>\n      <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n    </mat-list-item>\n    \n  </mat-nav-list>\n\n    </mat-sidenav>\n\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\">Home</a></li>\n        <li class=\"breadcrumb-item\" ><a (click)=\"getDBAPI()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\" >Analytics</a></li>\n        <li class=\"breadcrumb-item\" ><a (click)=\"viewFraud()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\" >Malicious Transactions</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Transaction History</li>\n\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n\n    </nav>\n\n    <div class=\"example-sidenav-content\">\n      <div class=\"example-card\">\n        <div class=\"main-content\">\n          <div class=\"container-fluid\">\n\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                          <h3 style=\"padding: 10px 10px 10px 10px;\">TradeTrip Scan : Transaction History ({{lei}})</h3>\n\n    <mat-card>\n        <div class=\"mat-elevation-z8\">\n          <div style=\"overflow-x:auto;\">\n              \n                      <table class=\"table table-responsive-sm table-responsive-md\" mat-table [dataSource]=\"dataSource\"   matSort>\n\n                        <ng-container matColumnDef=\"status\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Order ID </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row.orderId }} </td>\n                        </ng-container> \n\n                        <ng-container matColumnDef=\"lei\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Details </th>\n                          <td mat-cell *matCellDef=\"let row\">\n                           {{row.orderDetails}}\n                           </td>\n                        </ng-container> \n        \n\n            <!-- <ng-container matColumnDef=\"mail\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>:\n              <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"wallet\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Wallet </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.wallet}} </td>\n            </ng-container> -->\n\n            <ng-container matColumnDef=\"kdt\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.quantity }} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"dt\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Order Date </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.orderdate  | date :'dd/MM/yyyy'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"db\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Consignee </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.consignee}} </td>\n            </ng-container>\n\n            \n      \n\n         \n   \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" style=\"padding: 15px;\"></tr>\n\n          </table>\n\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n\n        </div>\n      </mat-card>\n\n</div>\n\n</div>\n\n</div>\n                    </div>\n\n                  </div>\n\n    </div>\n\n\n\n</mat-sidenav-container>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Web3Service } from '../../service/web3.service';\nimport { IpfsService } from '../../service/ipfs.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { Web3StorageService } from 'src/app/service/web3storage.service';\n\n\ndeclare var require;\nconst bytes32 = require('bytes32');\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n  showLEIsearch:boolean = false;\n\n  accountNumber: any;\n  public marketPlace: any;\n  public register: any;\n  public myNFT: any;\n  public uN: any;\n  public ipfsHash: any;\n  public cBank = \"0x461994192BACd8734d4bCC5f2f70D69d3428B958\";\n  public sBank = \"0x58d256712F73407A1551a2C75B6048E305df3BF9\";\n  srcResult: any;\n  selectedRole: any;\n  seletedBankAdd: any;\n  bankList = [];\n  bankname: any;\n  public files: any;\n  @Input() Register: boolean;\n  @Input() data: string;\n  carrierList = []\n  bankName: any;\n  bankWallet: unknown;\n  selectedFood: any;\n  postD:any;\n  orgcity:any;\n  orgcountry:any;\n  orgaddress:any;\n  legalName:any;\n  lei: any;\n  userChange:any;\n\n  constructor(private formBuilder: FormBuilder, public web3: Web3Service, public ipfs: IpfsService, private snackBar: MatSnackBar, private backend: BackendService,public web3storage:Web3StorageService) {\n    this.Register = true;\n    this.web3.checkAndInstantiateWeb3()\n      .then((checkConn: any) => {\n        if (checkConn === 'connected') {\n          this.web3.loadBlockChainData()\n            .then((accountData: any) => {\n              this.accountNumber = accountData[0];\n              console.log(this.accountNumber);\n              this.web3.getAllContract()\n                .then((contractRes: any) => {\n                  if (contractRes) {\n                    console.log(contractRes)\n                    this.register = contractRes[0];\n                    this.backend.retBanks().then((result: any) => {\n                      for (let i = 0; i < result.length; i++) {\n                        console.log(result[i]);\n                        this.web3.getUtf8(result[i])\n                          .then(ag => {\n                            console.log(ag)\n                            this.bankList.push(ag);\n                          })\n                      }\n                    });\n\n                  }\n                });\n            }, err => {\n              console.log('account error', err);\n            });\n        }\n      }, err => {\n        alert(err);\n      });\n  }\n\n  registerForm = this.formBuilder.group({\n    // lei: ['', Validators.required],\n\n    lei: [{value: '', disabled: true}, Validators.required],\n\n    leiName:['', Validators.required],\n    alias:['', Validators.required],\n    userRole: ['', Validators.required],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    wallet: ['', Validators.required],\n    // wallet:[{value:'', disabled:true},Validators.required],\n    email: ['', Validators.required],\n    companyName: [{value: '', disabled: true}, Validators.required],\n    legalName: ['', Validators.required],\n    city: [{value: '', disabled: true}, Validators.required],\n    state: [{value: '', disabled: true}, Validators.required],\n    telephone: ['', Validators.required],\n    address: [{value: '', disabled: true}, Validators.required],\n    profile: ['', Validators.required],\n    banks: ['', Validators.required],\n    userBank: ['']\n  });\n\n  ngOnInit(): void {\n\n  }\n\n  onSelection(event) {\n    this.userChange = event.value;\n    //not working\n    // console.log(event.value)\n    // if(event.value === \"ShippingAgency\" || event.value ===\"Carrier\" || event.value ===\"PortAuthority\" || event.value ===\"Bank\"){\n    //   this.registerForm.controls['userBank'].disable();\n    // }else{\n      \n    // }\n    // this.selectedRole = event.target.value;\n    // console.log('this.selectedRole');\n    \n    // console.log(this.selectedRole);\n    // if(this.selectedRole =='Seller'){\n    //   this.showLEIsearch =true;\n    // }\n\n// if()\n//     this.form.controls['name'].disable();\n\n  }\n  onChangeBank(event) {\n    console.log(event.target.value)\n    this.bankName = event.target.value;\n    console.log(this.bankname);\n    this.backend.returnBankAddress(this.bankname).then((bankWallets) => {\n    this.bankWallet = bankWallets;\n    console.log(bankWallets);\n    });\n  }\n\n  saveForm() {\nif(this.registerForm.value.userBank !=\"\"){\n  this.backend.returnBankAddress(this.registerForm.value.userBank).then((bankWallet) => {\n    console.log(bankWallet);\n    this.bankWallet = bankWallet;\n    // alert(this.bankWallet)\n\n  });\n}else{\n  console.log(\"nothinjb\");\n\n}\n    console.log(this.registerForm.value.userBank);\n    setTimeout(()=>{\n\n    if (this.registerForm.value.userRole == \"Consignee\") {\n      this.files = {\n     \n        address: this.orgaddress,\n        city: this.orgcity,\n        companyName: this.registerForm.value.companyName,\n        lei:this.registerForm.value.lei,\n        leiNo:this.lei,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        legalName: this.legalName,\n        email: this.registerForm.value.email,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.registerForm.value.state,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"Consignee\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.userBank,\n        bankAddress: this.bankWallet\n      }\n    } else if (this.registerForm.value.userRole == \"Seller\") {\n      this.files = {\n        address: this.orgaddress,\n        city: this.orgcity,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        leiNo:this.lei,\n        companyName:\"Wartsila\",\n        legalName: this.legalName,\n        email: this.registerForm.value.email,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.orgcountry,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"Seller\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.userBank,\n        bankAddress: this.bankWallet\n      }\n    } else if (this.registerForm.value.userRole == \"Bank\") {\n      console.log(\"bankkk\")\n      this.files = {\n        address: this.orgaddress,\n        city: this.orgcity,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        leiNo:this.lei,\n        companyName: this.registerForm.value.alias,\n        legalName: this.legalName,\n        email: this.registerForm.value.email,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.orgcountry,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"Bank\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.alias,\n        bankAddress: this.accountNumber,\n      }\n    } else if (this.registerForm.value.userRole == \"ShippingAgency\") {\n      this.files = {\n        address: this.orgaddress,\n        city: this.orgcity,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        leiNo:this.lei,\n        companyName: this.registerForm.value.alias,\n        email: this.registerForm.value.email,\n        legalName: this.legalName,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.orgcountry,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"ShippingAgency\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.alias,\n        bankAddress: this.accountNumber,\n      }\n    } else if (this.registerForm.value.userRole == \"Carrier\") {\n      this.files = {\n        address: this.orgaddress,\n        city: this.orgcity,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        leiNo:this.lei,\n        companyName: this.registerForm.value.alias,\n        email: this.registerForm.value.email,\n        legalName: this.legalName,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.orgcountry,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"Carrier\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.alias,\n        bankAddress: this.accountNumber,\n      }\n    } else if (this.registerForm.value.userRole == \"PortAuthority\") {\n      this.files = {\n        address: this.orgaddress,\n        city: this.orgcity,\n        leiName:this.registerForm.value.leiName,\n        alias:this.registerForm.value.alias,\n        leiNo:this.lei,\n        companyName: this.registerForm.value.alias,\n        legalName: this.legalName,\n        email: this.registerForm.value.email,\n        firstName: this.registerForm.value.firstName,\n        lastName: this.registerForm.value.lastName,\n        profile: \"\",\n        state: this.orgcountry,\n        telephone: this.registerForm.value.telephone,\n        userRole: \"PortAuthority\",\n        wallet: this.accountNumber,\n        bankName: this.registerForm.value.alias,\n        bankAddress: this.accountNumber,\n      }\n    } else {\n\n    }\n\n    console.log(this.files);\n    // this.uN = bytes32({ input: this.registerForm.value.companyName });\n    this.uN = bytes32({ input: this.registerForm.value.alias });\n    \n    console.log(this.uN)\n    this.web3storage.storeFile(this.files).then((data) => {\n    // this.ipfs.saveToIpfs(this.files).then((data) => {\n      console.log('Hashvalue')\n      console.log(data);\n      if (this.registerForm.value.userRole == \"Consignee\") {\n        this.register.methods.saveUserDetailsToBCConsignee(this.accountNumber, data, this.registerForm.value.userRole, this.uN, this.cBank).send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt);\n            this.snackBar.open(\"User Registration Successful\", \"Proceed to login\", { duration: 3000 });\n          });\n      } else {\n        // this.uN = bytes32({input:this.registerForm.value.firstName});\n        console.log(\"BANK registering\")\n        this.register.methods.saveUserDetailsToBC(this.accountNumber, data, this.registerForm.value.userRole, this.uN).send({ from: this.accountNumber })\n          .once('receipt', (receipt) => {\n            console.log(receipt);\n            this.snackBar.open(\"User Registration Successful\", \"Proceed to login\", { duration: 3000 });\n          \n          });\n      }\n    })\n  }, 5000);\n\n  }\n  \nsd(){\n  this.backend.saveB().then((bankWallets) => {\n    this.bankWallet = bankWallets;\n    console.log(bankWallets);\n    });\n}\n\nrd(){\n  this.backend.getB().then((bankWallets) => {\n    this.bankWallet = bankWallets;\n    console.log(bankWallets);\n    });\n}\n\ndateC(){\n  console.log(new Date().getTime());\n  this.backend.formatDate(new Date()).then((bankWallets) => {\n    // this.bankWallet = bankWallets;\n    console.log(bankWallets);\n    });\n}\n\ndataAPI(){\n  // this.backend.getDataAPI().subscribe(data=>{\n  //   this.postD = data; \n  // });\n\nconst data = {\n  id:5,\n  firstname: 'Mit',\n}  \nthis.backend.getDataAPI(data).subscribe(data=>{\n  console.log(data);\n});\n}\n\ncreatePost(){\n const data = {\n  email:\"jhbhbjknbj\",\n  name: 'Mit',\n  key:'hjyug76yuygjhbjkkh97987'\n  // dateCreated:new Date()\n}  \nthis.backend.createPost(data).subscribe(data=>{\n  console.log(data);\n});\n}\n //LEI Check\n getCompanyInfo(e){\n  console.log('element searched');\n  console.log(e);\n  var lei =e;\n  this.backend.getLeiCompanyInfo(lei).subscribe((result:any) => {\n    console.log('Getting company info');\n    console.log(result)\n    // var data = JSON.parse(result);\n    // console.log(data);\n    result.data.forEach(items => {\n      console.log(items);\n      console.log(items.attributes.entity.legalName.name);\n      this.lei = items.attributes.lei;\n      // App.createTable(items);\n      this.legalName = items.attributes.entity.legalName.name;\n      this.orgcity=items.attributes.entity.legalAddress.city;\n      this.orgcountry=items.attributes.entity.legalAddress.country;\n      this.orgaddress =items.attributes.entity.legalAddress.addressLines[0]+','+items.attributes.entity.legalAddress.addressLines[1]\n\n      // document.getElementById('LEIBasedView').style.display = \"block\";\n      // document.getElementById('LEINO').innerHTML = LEINO;\n      // document.getElementById('companyName').value = items.attributes.entity.legalName.name;\n    });\n  });\n}\n\n\n\n\n}\n","<form [formGroup]=\"registerForm\"  class=\"form-container\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>\n        Stake Holder Registration</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <mat-label>Select User Role</mat-label>\n            <mat-select formControlName=\"userRole\" (selectionChange)=\"onSelection($event)\">\n              <mat-option value=\"Consignee\">Consignee</mat-option>\n              <mat-option value=\"Seller\">Seller</mat-option>\n              <mat-option value=\"ShippingAgency\">Shipper</mat-option>\n              <mat-option value=\"Carrier\">Carrier</mat-option>\n              <mat-option value=\"PortAuthority\">Port Authority</mat-option>\n              <mat-option value=\"Bank\">Bank</mat-option>\n            </mat-select>\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('userRole').touched && registerForm.get('userRole').errors?.required\">Role is required</mat-hint>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"leiName\" matInput (keyup)=\"getCompanyInfo($event.target.value)\" placeholder=\"Search Company\">\n           </mat-form-field>\n  </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"lei\" matInput placeholder=\"LEI\" value={{lei}} disabled>\n          </mat-form-field>\n        </div>\n      \n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"companyName\" matInput placeholder=\"Legal Name\" value={{legalName}}>\n            <!-- <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('companyName').touched && registerForm.get('companyName').errors?.required\">Company Name is required</mat-hint> -->\n          </mat-form-field>\n        </div>\n\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"firstName\" matInput placeholder=\"First name\">\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('firstName').touched && registerForm.get('firstName').errors?.required\">First Name is required</mat-hint>\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"lastName\" matInput placeholder=\"Last name\">\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('lastName').touched && registerForm.get('lastName').errors?.required\">Last Name is required</mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"wallet\" matInput placeholder=\"Wallet\" value={{accountNumber}} disabled >\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('wallet').touched && registerForm.get('wallet').errors?.required\">Wallet is required</mat-hint>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"email\" matInput placeholder=\"Email\">\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('email').touched && registerForm.get('email').errors?.required\">Email is required</mat-hint>\n\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        \n\n\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"alias\" matInput placeholder=\"Company Alias\">\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('alias').touched && registerForm.get('alias').errors?.required\">Alias is required</mat-hint>\n          </mat-form-field>\n        </div>\n\n        <!-- <div class=\"col-md-6\" *ngIf=\" selectedRole === 'Consignee' || selectedRole === 'Seller'\"> -->\n          <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <mat-label>Select Bank</mat-label>\n            <!-- <mat-select formControlName=\"userBank\" (selectionchange)=\"onChangeBank($event)\"> -->\n              <mat-select formControlName=\"userBank\" [disabled]=\"userChange === 'ShippingAgency' ||userChange === 'Carrier' ||userChange === 'PortAuthority' ||userChange === 'Bank'\">\n              <!-- <mat-option *ngFor=\"let bank of bankList\" value={{bank}}>\n                {{bank}}\n              </mat-option> -->\n              <mat-option *ngFor=\"let bank of bankList\" value={{bank}}>\n                {{ bank }}\n              </mat-option>\n            </mat-select>\n            <!-- <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('userBank').touched && registerForm.get('userBank').errors?.required\">Role is required</mat-hint> -->\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"city\" matInput placeholder=\"City\" value={{orgcity}}>\n            <!-- <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('city').touched && registerForm.get('city').errors?.required\">City is required</mat-hint> -->\n          </mat-form-field>\n         \n        </div>\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"state\" matInput placeholder=\"Country\" value={{orgcountry}}>\n            <!-- <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('state').touched && registerForm.get('state').errors?.required\">State is required</mat-hint> -->\n          </mat-form-field>\n\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <mat-form-field class=\"full-width\">\n            <input formControlName=\"telephone\" matInput placeholder=\"Telephone\">\n            <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('telephone').touched && registerForm.get('telephone').errors?.required\">Contact is required</mat-hint>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-sm-6\">\n          <mat-form-field class=\"full-width\">\n            <textarea formControlName=\"address\" matInput placeholder=\"Address\" value={{orgaddress}}></textarea>\n            <!-- <mat-hint style=\"color: red;\" *ngIf=\"registerForm.get('address').touched && registerForm.get('address').errors?.required\">Address is required</mat-hint> -->\n          </mat-form-field>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button (click)=\"saveForm()\" mat-raised-button color=\"primary\">Save</button>\n      <!-- <button (click)=\"sd()\" mat-raised-button color=\"primary\">sd</button>\n      <button (click)=\"rd()\" mat-raised-button color=\"primary\">dd</button>\n      <button (click)=\"dateC()\" mat-raised-button color=\"primary\">date</button>\n      <button (click)=\"dataAPI()\" mat-raised-button color=\"primary\">API</button>\n      <button (click)=\"createPost()\" mat-raised-button color=\"primary\">createPost</button> -->\n      \n    </mat-card-actions>\n  </mat-card>\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import {MaterialModule} from \"./material/material.module\";\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { ShlistDialogComponent } from './shlist-dialog/shlist-dialog.component';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserRegisterComponent } from './user/user-register/user-register.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { BankModule } from './bank/bank.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { ZXingScannerModule } from 'angular-weblineindia-qrcode-scanner';\nimport { LoaderModule } from './loader/loader.module';\nimport {HttpClient, HttpClientModule  } from '@angular/common/http';\n\nimport { NgxHorizontalTimelineModule } from 'ngx-horizontal-timeline';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LandingPageComponent,\n    ShlistDialogComponent,\n    UserLoginComponent,\n    UserRegisterComponent,\n    ToolbarComponent,\n\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  entryComponents: [ShlistDialogComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MaterialModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    BankModule,\n    MatInputModule,\n    MatFormFieldModule,\n    ZXingScannerModule,\n    LoaderModule,\n    HttpClientModule,\n    NgxHorizontalTimelineModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {AfterViewInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport {MaterialModule} from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { Web3Service } from 'src/app/service/web3.service';\nimport { Web3StorageService } from 'src/app/service/web3storage.service';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-bank-dashboard',\n  templateUrl: './bank-dashboard.component.html',\n  styleUrls: ['./bank-dashboard.component.css']\n})\nexport class BankDashboardComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n  ipfsConverted3: any;\n  showAnalytics = false;\n  showMarketplace = false;\n  showKYC = false;\n \n  // public chartType: string = 'line';\n  // this.bankName =;\n  ngOnInit(){   \n     this.loaderService.showLoader('bankLoader');\n\n\n    this.route.params.subscribe(params => {\n      console.log(params);\n      console.log(params['id']);\n      if (params['id']) {\n         // getHashFromIPFS\n\n         const URL = \"https://\"+params['id']+\".ipfs.w3s.link/data_analytics_register_data.json\"\n         // https://bafybeibt3ws4fzuf7p4kawlogy2auvgy34ee6255sszj5npwnszws4f6ze.ipfs.w3s.link/data_analytics_register_data.json\n           this.httpClient.get((URL)).subscribe((result:any) => {\n          // this.ipfs.getHashFromIPFS(params['id']).then((data:any)=>{\n            // this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n            this.ipfsConverted = result\n          console.log(this.ipfsConverted );\n          this.bankName =this.ipfsConverted.bankName;\n          this.bankMail = this.ipfsConverted.email;\n          this.userName =this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n          this.loaderService.hideLoader('bankLoader');\n\n\n\n          })\n\n\n      }\n    });\n  }\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n    ipfsConverted2: any;\n    accountNumber:any;\n    userinfo:any;\n    public registration: any;\n  \n    constructor(private web3: Web3Service, \n      public backend: BackendService,\n      public router:Router,\n      public loaderService: LoaderService,\n      private ipfs: IpfsService,\n      private cd: ChangeDetectorRef,\n      public AppComponent:AppComponent,\n      private route: ActivatedRoute,\n      public web3storage: Web3StorageService,\n    public dialog: MatDialog,\n    private httpClient: HttpClient\n    ) { \n      console.warn(\"calling order constra\");\n      this.web3.checkAndInstantiateWeb3()\n      .then((checkConn: any) => {\n        console.log(checkConn)\n        if (checkConn === 'connected') {\n          this.web3.loadBlockChainData()\n            .then((accountData: any) => {\n              console.log(accountData[0])\n              this.accountNumber = accountData[0];\n             \n              this.web3.getAllContract()\n                .then((contractRes: any) => {\n                  if (contractRes) {\n                    console.log(contractRes)\n                    this.registration = contractRes[0];\n                    this.registration.methods.getUserHashType(this.accountNumber)\n                    .call()\n                    .then(async user =>{\n                   \n                      console.log('user');\n                      console.log(user);\n                      if(!user[0]){\n                      \n                      }else{\n                        console.log('user');\n                        console.log(user);\n                        // this.web3storage.retrieveFile(user[0]).then(async (filedata: any) => {\n                        // console.log('filedata')\n                        // console.log(filedata)\n                        // })\n                        const URL = \"https://\"+user[0]+\".ipfs.w3s.link/data_analytics_register_data.json\"\n                          // https://bafybeibt3ws4fzuf7p4kawlogy2auvgy34ee6255sszj5npwnszws4f6ze.ipfs.w3s.link/data_analytics_register_data.json\n                           await this.httpClient.get((URL)).subscribe((result:any) => {\n                            console.log('lei');\n                           console.log(result);\n                           console.log(result.alias);\n                           this.ipfsConverted2 = result;\n                          \n                      //  this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                        // this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                        console.log('this.ipfsConverted2');\n                        console.log(this.ipfsConverted2 );\n                         this.userinfo = user[0];\n\n//                          this.registration.methods.returnRole(this.accountNumber)\n//                          .call()\n//                          .then(role =>{\n//                            console.log(role);\n//                            if(role.length == 0){\n//                             //   this.roles = fb.group({\n//                             //     Marketplace: false,\n//                             //     KYC: false,\n//                             //     Analytics: false\n//                             //   });\n//                             // this.rolesExists = false;\n\n//                            }else{\n//                           this.ipfs.getHashFromIPFS(role).then((data2:any)=>{\n//                             this.ipfsConverted3 = JSON.parse(Buffer.from(data2.value.buffer).toString());\n//                             console.log(this.ipfsConverted3 );\n                           \n// this.showAnalytics =this.ipfsConverted3.Analytics;\n// this.showMarketplace =this.ipfsConverted3.Marketplace;\n// this.showKYC =this.ipfsConverted3.KYC;\n\n//                             // this.rolesExists = true;\n\n//                           })    \n//                            }\n                         \n//                          });\n                      })\n                      }\n                    });\n                    }\n                });\n            }, err => {\n              console.log('account error', err);\n            });\n        }\n      }, err => {\n        alert(err);\n      });\n    }\n\nviewIssuing(){\n  console.log('in view url');\n  this.router.navigate(['issuing_transaction']);\n\n}\nviewAdvisory(){\n  this.router.navigate(['advisory_transaction']);\n\n}\n\nviewBidsTable(){\n  this.router.navigate(['bids_table']);\n}\n\ngetDBAPI(){\n  // this.router.navigate(['analytics']);\n  // this.router.navigate(['tranasaction_issue']);\n\n  this.router.navigate(['lei_issue']);\n\n  // this.backend.getDBAPI().subscribe((result) => {\n  //   console.log(result);\n  // });\n}\nredirectDashboard(){\n  this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\n\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav\n    #sidenav\n    class=\"example-sidenav\"\n    disableClose=\"true\"\n    opened=\"true\"\n    mode=\"side\"\n  >\n    <mat-nav-list>\n      <mat-list-item>\n        <mat-icon\n          class=\"navicon\"\n          (click)=\"isExpanded = !isExpanded\"\n          mat-list-icon\n          matTooltip=\"Expand\"\n        >\n          menu\n        </mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"></h4>\n      </mat-list-item>\n      <mat-list-item>\n        <mat-icon class=\"navicon active\" mat-list-icon matTooltip=\"Dashboard\"  (click)=\"redirectDashboard()\">\n          dashboard\n        </mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Dashboard</h4>\n      </mat-list-item>\n      <mat-list-item>\n        <mat-icon\n          class=\"navicon\"\n          matTooltip=\"Transaction\"  (click)=\"redirectDashboard()\"\n          mat-list-icon\n        >\n          swap_horiz\n        </mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n      </mat-list-item>\n\n      <!-- <mat-list-item>\n        <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Balance\">\n          paid\n        </mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item> -->\n      <mat-list-item>\n        <mat-icon class=\"navicon\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n      </mat-list-item>\n      <!-- <mat-list-item>\n        <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">\n          receipt_long\n        </mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n      </mat-list-item> -->\n     \n      <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n      </mat-list-item>\n<!-- \n      <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Roles\" routerLink=\"/roles\">summarize</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Roles</h4>\n      </mat-list-item> -->\n\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <div class=\"example-sidenav-content\">\n    <!-- <mat-card class=\"example-card\"> -->\n    <div class=\"main-content\">\n      <div class=\"container-fluid\">\n        <div class=\"row headContent\">\n          <div class=\"col-lg-8 col-md-8 col-sm-8\">\n            <h2>Bank Dashboard</h2>\n          </div>\n\n          <div class=\"col col-md-auto\">\n            <img\n              class=\"img-fluid profileimg\"\n              src=\"../../../assets/images/bank.png\"\n              alt=\"Avatar\"\n              mat-mini-fab\n              style=\"width: 60px; height: 60px; padding-bottom: 5px;\"\n            />\n          </div>\n\n          <div class=\"col col-lg-2\">\n            <h6>{{ bankName }}</h6>\n            <h6>{{ bankMail }}</h6>\n\n            <!-- <h6>{{ userName }}</h6> -->\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-md-6 col-sm-12\">\n            <mat-card>\n              <mat-card-header>\n                <h3>Advisory</h3>\n              </mat-card-header>\n              <mat-card-content>\n                <div class=\"row\">\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                      account_balance\n                    </mat-icon>\n                  </div>\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <button\n                    class=\"viewbtn\"\n                      (click)=\"viewAdvisory()\"\n                      mat-raised-button\n                      fill=\"outline\"\n                      slot=\"end\"\n                    >\n                      View\n                    </button>\n                  </div>\n                </div>\n              </mat-card-content>\n              <mat-card-footer>\n                Click to view Advisory Bank Transactions\n              </mat-card-footer>\n            </mat-card>\n          </div>\n          <div class=\"col-lg-6 col-md-6 col-sm-12\">\n            <mat-card>\n              <mat-card-header>\n                <h3>Issuing</h3>\n              </mat-card-header>\n              <mat-card-content>\n                <div class=\"row\">\n                  <div class=\"col-lg-6\">\n                    <mat-icon class=\"cardicon1\" style=\"margin-left: 20px;\">domain</mat-icon>\n                  </div>\n                  <div class=\"col-lg-6\">\n                    <button\n                      class=\"viewbtn\"\n                      mat-raised-button\n                      fill=\"outline\"\n                      slot=\"end\"\n                      (click)=\"viewIssuing()\"\n                    >\n                      View\n                    </button>\n                  </div>\n                </div>\n              </mat-card-content>\n              <mat-card-footer>\n                Click to view Issuing Bank Transactions\n              </mat-card-footer>\n            </mat-card>\n          </div>\n          <div class=\"col-lg-6 col-md-6 col-sm-12\" *ngIf=\"showMarketplace\">\n\n          <!-- <div class=\"col-lg-6 col-md-6 col-sm-12\"> -->\n            <mat-card>\n              <mat-card-header>\n                <h3>Marketplace</h3>\n              </mat-card-header>\n              <mat-card-content>\n                <div class=\"row\">\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                      swap_horiz\n                    </mat-icon>\n                  </div>\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <button\n                    class=\"viewbtn\"\n                      (click)=\"viewBidsTable()\"\n                      mat-raised-button\n                      fill=\"outline\"\n                      slot=\"end\"\n                    >\n                      View\n                    </button>\n                  </div>\n                </div>\n              </mat-card-content>\n              <mat-card-footer>\n                Click to go to MarketPlace\n              </mat-card-footer>\n            </mat-card>\n          </div>\n          <!-- <div class=\"col-lg-6 col-md-6 col-sm-12\"> -->\n\n          <!-- <div class=\"col-lg-6 col-md-6 col-sm-12\"  *ngIf=\"showAnalytics\"> -->\n            <div class=\"col-lg-6 col-md-6 col-sm-12\" >\n            <mat-card>\n              <mat-card-header>\n                <h3>Analytics</h3>\n              </mat-card-header>\n              <mat-card-content>\n                <div class=\"row\">\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <mat-icon class=\"cardicon1\" color=\"primary\" style=\"margin-left: 20px;\">\n                      <span class=\"material-icons-outlined\">\n                        analytics\n                        </span>\n                      \n                    </mat-icon>\n                  </div>\n                  <div class=\"col-lg-6 col-md-12 col-sm-12\">\n                    <button\n                    class=\"viewbtn\"\n                      (click)=\"getDBAPI()\"\n                      mat-raised-button\n                      fill=\"outline\"\n                      slot=\"end\"\n                    >\n                      View\n                    </button>\n                    <!-- <a href=\"https://kottackalpython-flasktest.herokuapp.com\" class=\"viewbtn\" >View</a> -->\n                  </div>\n                </div>\n              </mat-card-content>\n              <mat-card-footer>\n                Click to go to Analytics Application\n              </mat-card-footer>\n            </mat-card>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</mat-sidenav-container>\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\nimport { MaterialModule } from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport {Location} from '@angular/common';\nimport { LoginfoComponent } from '../loginfo/loginfo.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ApiService } from 'src/app/service/api.service';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-lei-issue',\n  templateUrl: './lei-issue.component.html',\n  styleUrls: ['./lei-issue.component.css']\n})\nexport class LeiIssueComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n\n  totalProduct = [];\n  lcs: any;\n  public orders: any;\n  bols = false;\n\n  displayedColumns: string[] = ['lei','status', 'name','legaladdress','city','postalCode','mail','kdt','logs'];\n  \n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ipfsConverted2: any;\n  accountNumber:any;\n  userinfo:any;\n  public registration: any;\n\n  constructor(private web3: Web3Service, \n    public backend: BackendService,\n    public router:Router,\n    public loaderService: LoaderService,\n    private ipfs: IpfsService,\n    private apiService:ApiService,\n    private cd: ChangeDetectorRef,\n    public location:Location,\n    private route: ActivatedRoute,\n    public dialog: MatDialog\n    ) { \n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[0];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n\n                     this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n                       this.loaderService.showLoader('bankLoader');\n                       console.log('this.userinfo')\n                       console.log(this.ipfsConverted2)\n                       let userWallet = this.ipfsConverted2.wallet;\n                       this.apiService.getDBAPI(userWallet).subscribe((result:any) => {\n                         console.log('lei');\n                        console.log(result);\n                        // this.totalProduct.push(result.leiIssue);\n                        this.dataSource = new MatTableDataSource(result);\n                        this.dataSource.sort = this.sort;\n                        this.dataSource.paginator = this.paginator;\n                        this.cd.detectChanges();\n                        this.loaderService.hideLoader('bankLoader');\n                      });\n                  \n                      })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\n\n\n    \n  ngOnInit(){   \n\n//     status: \"LEI NOT FOUND\"\n// lei: \"987845645231184dfef\"\n// email: \"maer@gmail.com\"\n// wallet: \"0xasdre56tghythg\"\n// kycreg: \"2021-12-14\"\n// checkDate: \"2022-01-07\"\n// mongoID: \"61ae3c475ff71e6cdaf6ec75\"\n\n\n\n    // this.loaderService.hideLoader('bankLoader');\n\n    // this.route.params.subscribe(params => {\n    //   console.log(params);\n    //   console.log(params['id']);\n    //   if (params['id']) {\n    //      // getHashFromIPFS\n    //       this.ipfs.getHashFromIPFS(params['id']).then((data:any)=>{\n    //         this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n    //       console.log(this.ipfsConverted );\n    //       this.bankName =this.ipfsConverted.bankName;\n    //       this.bankMail = this.ipfsConverted.email;\n    //       this.userName =this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n    //       this.loaderService.hideLoader('bankLoader');\n\n\n\n\n    //       this.loaderService.showLoader('bankLoader');\n    //       this.backend.getBankBids().then((result: any) => {\n    //         // console.log(result[0]);\n    //         this.web3.loadBlockChainData().then((accountData: any) => {\n    //             this.accountNumber = accountData[0];\n    //             if(result.length>0){\n    //               this.web3.getAllContract()\n    //               .then((contractRes: any) => {\n    //                 this.orders = contractRes[2];\n    //                 // this.totalProduct.push(this.ipfsConverted2);\n    //                 console.log(result);\n    //                 this.dataSource = new MatTableDataSource(result);\n    //                                       this.dataSource.sort = this.sort;\n    //                                       this.dataSource.paginator = this.paginator;\n    //                                       this.cd.detectChanges();\n    //                                       this.loaderService.hideLoader('bankLoader');\n    //               });\n    //             }else{\n    //               this.loaderService.hideLoader('bankLoader');\n    //   alert(\"No orders in marketplace\")\n    //             }\n      \n      \n    //       }).catch((err) => {\n    //       });\n    //       }).catch((err)=>{\n    //         alert(\"No orders yet in market place\");\n    //       // this.location.back()\n      \n    //       });\n\n\n\n    //       })\n\n\n    //   }\n    // });\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\nviewIssuing(){\n  console.log('in view url');\n  this.router.navigate(['issuing_transaction']);\n\n}\nviewAdvisory(){\n  this.router.navigate(['advisory_transaction']);\n\n}\n\nviewBidsTable(){\n  this.router.navigate(['bids_table']);\n}\n\ngetDBAPI(){\n  this.router.navigate(['analytics']);\n\n  // this.backend.getDBAPI().subscribe((result) => {\n  //   console.log(result);\n  // });\n}\n\nredirectDashboard(){\n  // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n  this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\nviewLogs(leiNo) {\n  var LEI = leiNo;\n  console.log('Modal opening');\n  console.log('LEI No.', LEI);\n  const dialogRef = this.dialog.open(LoginfoComponent, {\n    width: '60vw',\n    maxWidth: '100vw',\n    data: {\n      dataKey: LEI\n    }\n  });\n\n\n}\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n <mat-sidenav-container class=\"example-container\">\n\n    <mat-sidenav #sidenav class=\"example-sidenav\"  disableClose=\"true\" opened=\"true\" mode=\"side\">\n     <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" style=\"margin: 10px;\">\n    <mat-icon class=\"navicon\" aria-label=\"Menu\">menu</mat-icon>\n  </button> -->\n\n  <mat-nav-list>\n\n    <mat-list-item >\n        <mat-icon class=\"navicon \" (click)=\"isExpanded = !isExpanded\" mat-list-icon matTooltip=\"Expand\">menu</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"> </h4>\n\n    </mat-list-item>\n    <mat-list-item >\n      <mat-icon class=\"navicon\"  mat-list-icon matTooltip=\"Dashboard\" (click)=\"redirectDashboard()\">dashboard</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\"> Dashboard</h4>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon class=\"navicon\" matTooltip=\"Transaction\"  (click)=\"redirectDashboard()\" mat-list-icon>swap_horiz</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n    </mat-list-item>\n\n    <!-- <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Balance\">paid</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item> -->\n      <mat-list-item>\n        <mat-icon class=\"navicon active\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n      </mat-list-item>\n    <!-- <mat-list-item>\n      <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">receipt_long</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n    </mat-list-item> -->\n\n    <mat-list-item>\n      <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n    </mat-list-item>\n    \n  </mat-nav-list>\n\n    </mat-sidenav>\n\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\">Home</a></li>\n        <li class=\"breadcrumb-item\"><a (click)=\"getDBAPI()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\" >Analytics</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">KYC</li>\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n\n    </nav>\n\n    <div class=\"example-sidenav-content\">\n      <div class=\"example-card\">\n        <div class=\"main-content\">\n          <div class=\"container-fluid\">\n\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                          <h3 style=\"padding: 10px 10px 10px 10px;\">TradeTrip Scan: KYC </h3>\n\n    <!-- <mat-card> -->\n        <div class=\"mat-elevation-z8\">\n          <mat-form-field appearance=\"standard\" style=\"padding: 10px;\">\n            <mat-label>Search</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\n          </mat-form-field>\n          <div style=\"overflow-x: auto;\">\n              \n                      <table class=\"table table-responsive-sm table-responsive-md\" mat-table [dataSource]=\"dataSource\"   matSort>\n\n                        <ng-container matColumnDef=\"status\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row.status }} </td>\n                        </ng-container> \n\n                        <ng-container matColumnDef=\"lei\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> LEI </th>\n                          <td mat-cell *matCellDef=\"let row\"> \n                            <label *ngIf=\"row.lei === 'NA'; else elseBlock\">Not Available</label>\n                            <ng-template #elseBlock>\n                             <b> {{row.lei}}</b>\n                            </ng-template>\n\n\n                           \n                            \n                          </td>\n                        </ng-container> \n        \n\n            <ng-container matColumnDef=\"mail\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>:\n              <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"legaladdress\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Address </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.legalAddress}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"city\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> City </th>\n              <td mat-cell *matCellDef=\"let row\">{{row.city}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"postalCode\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Postal Code </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.postalCode}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"kdt\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> KYC Date </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.kycreg | date:'dd/MM/yyyy'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"logs\">\n              <th mat-header-cell *matHeaderCellDef style=\"padding-right: 20px\"> View Logs </th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell>\n                  <button mat-icon-button  (click)=\"viewLogs(row.lei);\">View<mat-icon>launch</mat-icon></button> \n                </td>\n              </ng-container>\n            </ng-container>\n            <!-- <ng-container matColumnDef=\"dt\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Checking Date </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.checkDate | date:'dd/MM/yyyy'}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"db\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> DB ID </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row.mongoID}} </td>\n            </ng-container> -->\n\n          \n           \n       \n         \n      \n\n         \n   \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" style=\"padding: 15px;\"></tr>\n\n          </table>\n        \n\n          <mat-paginator #paginator [pageSize]=\"5\" [pageSizeOptions]=\"[5,10,20,50,100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div>\n        </div>\n      <!-- </mat-card> -->\n\n</div>\n\n</div>\n\n</div>\n                    </div>\n\n                  </div>\n\n    </div>\n\n\n\n</mat-sidenav-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from './loader.component';\nimport {LoaderService} from './loader.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    LoaderComponent,\n  ],\n  exports: [\n    LoaderComponent\n  ],\n  providers: [\n    LoaderService\n  ]\n})\nexport class LoaderModule { }\n","import {NgModule} from '@angular/core';\n// material.module.ts\n \nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        MatNativeDateModule\n    ],\n    providers: [     \n    ]\n})\nexport class MaterialModule {\n    // constructor(public matIconRegistry: MatIconRegistry) {\n    //     // matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n    // }\n\n    // static forRoot(): ModuleWithProviders<MaterialModule> {\n    //     return {\n    //         ngModule: MaterialModule,\n    //         providers: [MatIconRegistry]\n    //     };\n    // }\n}\n\n\n// import {\n//   MatAutocompleteModule,\n//   MatButtonModule,\n//   MatButtonToggleModule,\n//   MatCardModule,\n//   MatCheckboxModule,\n//   MatChipsModule,\n//   MatDatepickerModule, MatDialogModule,\n//   MatExpansionModule,\n//   MatFormFieldModule,\n//   MatGridListModule,\n//   MatIconModule,\n//   MatInputModule,\n//   MatListModule,\n//   MatMenuModule, MatNativeDateModule, MatPaginatorModule, MatProgressBarModule,\n//   MatProgressSpinnerModule,\n//   MatRadioModule,\n//   MatSelectModule,\n//   MatSidenavModule,\n//   MatSliderModule,\n//   MatSlideToggleModule, MatSnackBarModule, MatSortModule,\n//   MatStepperModule, MatTableModule,\n//   MatTabsModule,\n//   MatToolbarModule, MatTooltipModule\n// } from '@angular/material';\n\n\n// const materialModules = [\n//   MatCheckboxModule,\n//   MatInputModule,\n//   MatSelectModule,\n//   MatRadioModule,\n//   MatMenuModule,\n//   MatToolbarModule,\n//   MatListModule,\n//   MatGridListModule,\n//   MatCardModule,\n//   MatTabsModule,\n//   MatButtonModule,\n//   MatChipsModule,\n//   MatIconModule,\n//   MatProgressSpinnerModule,\n//   MatProgressBarModule,\n//   MatDialogModule,\n//   MatTooltipModule,\n//   MatSnackBarModule,\n//   MatSlideToggleModule,\n//   MatTableModule,\n//   MatPaginatorModule,\n//   MatSortModule,\n//   MatAutocompleteModule,\n//   MatExpansionModule,\n//   MatButtonToggleModule,\n//   MatDatepickerModule,\n//   MatFormFieldModule,\n//   MatSidenavModule,\n//   MatSliderModule,\n//   MatStepperModule,\n//   MatNativeDateModule\n// ];\n\n// @NgModule({\n//   imports: materialModules,\n//   exports: materialModules\n// })\n// export class MaterialModule {\n// }\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { Web3Service } from 'src/app/service/web3.service';\nimport { MaterialModule } from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-advisory-transaction',\n  templateUrl: './advisory-transaction.component.html',\n  styleUrls: ['./advisory-transaction.component.css']\n})\nexport class AdvisoryTransactionComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  public orders: any;\n  ipfsConverted: any;\n  totalProduct = [];\n  lcs: any;\n  ipfsConverted2: any;\n  accountNumber:any;\n  userinfo:any;\n  public registration: any;\n  displayedColumns: string[] = ['id', 'order', 'lc', 'action'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private web3: Web3Service, \n    public backend: BackendService,public route:Router,\n      public loaderService: LoaderService,\n       private ipfs: IpfsService, private cd: ChangeDetectorRef) {\n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[1];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n\n                     this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n                    })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\n\n  //  redirecttodashboard(){\n  //   this.route.navigate(['/seller_dashboard']);\n  //   }\n  // ngAfterViewInit() {\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // applyFilter(event: Event) {\n  //   const filterValue = (event.target as HTMLInputElement).value;\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\n\n  //   if (this.dataSource.paginator) {\n  //     this.dataSource.paginator.firstPage();\n  //   }\n  // } \n\n  ngOnInit(): void {\n    console.warn(\"in ngOnInit\");\n\n    this.loaderService.showLoader('bankLoader');\n    this.web3.getAllContract()\n      .then((contractRes: any) => {\n        this.orders = contractRes[3];\n        this.backend.returnAdvOrders().then((result: any) => {\n          console.log(result);\n          for (let i = 0; i < result.length; i++) {\n            console.log(result[i]);\n            if (result[i][2] == 0) {\n              this.totalProduct.push({\n                \"id\": i + 1,\n                \"order\": result[i][0],\n                \"lc\": result[i][1],\n                \"beneficiaryBank\": \"NA\",\n                \"beneficiary\": \"NA\",\n                \"LCCASHED\": \"NO\",\n                \"LC\": \"0\"\n              });\n              console.log(this.totalProduct);\n              this.dataSource = new MatTableDataSource(this.totalProduct);\n              this.cd.detectChanges();\n            } else if (result[i][2] == 1) {\n              this.backend.getLCDetails(result[i][0]).then((d: any) => {\n                this.totalProduct.push({\n                  \"id\": i + 1,\n                  \"order\": result[i][0],\n                  \"lc\": result[i][1],\n                  \"beneficiaryBank\": d.sellerBank,\n                  \"beneficiary\": d.sellerWallet,\n                  \"LCCASHED\": \"NO\",\n                  \"LC\": \"1\"\n                });\n                console.log(this.totalProduct);\n                this.dataSource = new MatTableDataSource(this.totalProduct);\n                this.dataSource.sort = this.sort;\n                this.dataSource.paginator = this.paginator;\n                this.cd.detectChanges();\n              })\n            } else {\n              this.totalProduct.push({\n                \"id\": i + 1,\n                \"order\": result[i][0],\n                \"lc\": result[i][1],\n                \"beneficiaryBank\": \"NA\",\n                \"beneficiary\": \"NA\",\n                \"LCCASHED\": \"YES\",\n                \"LC\": \"2\"\n              });\n              console.log(this.totalProduct);\n              this.dataSource = new MatTableDataSource(this.totalProduct);\n              this.dataSource.sort = this.sort;\n            this.dataSource.paginator = this.paginator;\n              this.cd.detectChanges();\n            }\n            \n            this.loaderService.hideLoader('bankLoader');\n\n          }\n\n        }).catch((err) => {\n\n        });\n      });\n  }\n\n  advisoryConfirmation1(event) {\n    console.log(event.target.id);\n    console.log(event.target.attributes.id);\n    // console.log(i);\n    // this.backend.getLCDetails(event.target.id).then((d:any)=>{\n    //   console.log(d);\n    // });\n    // this.backend.advisoryConfirmation(id).then((result) => {\n    //   console.log(result)\n    // }).catch((err) => {\n\n    // });\n  }\n\n  advisoryConfirmation(selecteditem: any) {\n    console.warn(\"CLIKCKED\");\n    // let elementId: string = (event.target as Element).id;\n    // console.log(elementId);\n    this.loaderService.showLoader('bankLoader');\n\n    console.log(selecteditem);\n    console.log('in cashLC')\n\n    // var row = e.path[0];\n    var order = selecteditem.order;\n    console.log(order)\n\n\n    this.backend.advisoryConfirmation(order).then((res: any) => {\n      console.log(res);\n      this.loaderService.hideLoader('bankLoader');\n\n    })\n\n  }\n  redirectDashboard(){\n    // this.route.navigateByUrl('seller_dashboard/'+this.userinfo);\n    this.route.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\ngetDBAPI(){\n  this.route.navigate(['analytics']);\n\n \n}\n\n\n  // constructor(private route:Router) {\n\n  //   // Create 100 users\n  //   const users = Array.from({length: 2}, (_, k) => createNewUser(k + 1));\n\n  //   // Assign the data to the data source for the table to render\n  //   this.dataSource = new MatTableDataSource(users);\n  // }\n  //  redirecttodashboard(){\n  //   this.route.navigate(['/seller_dashboard']);\n  //   }\n  // ngAfterViewInit() {\n  //   this.dataSource.paginator = this.paginator;\n  //   this.dataSource.sort = this.sort;\n  // }\n\n  // applyFilter(event: Event) {\n  //   const filterValue = (event.target as HTMLInputElement).value;\n  //   this.dataSource.filter = filterValue.trim().toLowerCase();\n\n  //   if (this.dataSource.paginator) {\n  //     this.dataSource.paginator.firstPage();\n  //   }\n  // }\n\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav\n      #sidenav\n      class=\"example-sidenav\"\n      disableClose=\"true\"\n      opened=\"true\"\n      mode=\"side\"\n    >\n  \n  \n      <mat-nav-list>\n        <mat-list-item>\n          <mat-icon\n            class=\"navicon\"\n            (click)=\"isExpanded = !isExpanded\"\n            mat-list-icon\n            matTooltip=\"Expand\"\n          >\n            menu\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\"></h4>\n        </mat-list-item>\n        <mat-list-item (click)=\"redirectDashboard()\">\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Dashboard\">\n            dashboard\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Dashboard</h4>\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon\n            class=\"navicon active\"\n            matTooltip=\"Transaction\"\n            (click)=\"redirectDashboard()\"\n            mat-list-icon\n\n          >\n            swap_horiz\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n        </mat-list-item>\n  \n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Balance\">\n            paid\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n        </mat-list-item> -->\n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">\n            receipt_long\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n        </mat-list-item> -->\n        <mat-list-item>\n          <mat-icon class=\"navicon\"  (click)=\"getDBAPI()\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n        </mat-list-item>\n       \n      <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n      </mat-list-item>\n        <!-- <mat-list-item>\n          <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Cards\">\n            folder_shared\n          </mat-icon>\n          <h4 mat-line *ngIf=\"isExpanded\">Cards</h4>\n        </mat-list-item> -->\n  \n      \n      </mat-nav-list>\n    </mat-sidenav>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\" style=\"color: #007bff;\n          background-color: transparent;cursor: pointer;\">Home</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">Advisory</li>\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n  \n    </nav>\n    <div class=\"example-sidenav-content\">\n      <!-- <mat-card class=\"example-card\"> -->\n      <div class=\"main-content\">\n        <div class=\"container-fluid\">\n          <div class=\"row headContent\">\n            <div class=\"col-lg-8 col-md-8 col-sm-8\">\n              <h2>Advisory Bank</h2>\n            </div>\n            <div class=\"col col-md-auto\">\n              <!-- <img\n                class=\"img-responsive profileimg\"\n                src=\"../../../assets/images/SLIDE.jpg\"\n                alt=\"Avatar\"\n                mat-mini-fab\n                style=\"width: 60px; height: 60px; padding-bottom: 5px;\"\n              /> -->\n            </div>\n            <div class=\"col col-lg-2\">\n              <!-- <h6>BankName</h6>\n              <h6>email@gdsxg.xcgd</h6> -->\n            </div>\n          </div>\n  \n  \n          <div class=\"row\">\n            <!-- <div class=\"col-lg-2\">\n            </div> -->\n            <div class=\"col-lg-8 col-md-12 col-sm-12\">\n              <mat-card>\n\n              <div class=\"mat-elevation-z8\">\n                  <div style=\"overflow-x: auto;\">\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\n                      <!-- <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                         #\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n                      </ng-container> -->\n                      <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> # </th>\n                        <td mat-cell *matCellDef=\"let row; let i = index\"> {{(i+1) + (paginator.pageIndex*paginator.pageSize)}} </td>\n                       </ng-container>\n  \n                      <ng-container matColumnDef=\"order\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                          Order Number\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">{{ row.order }}</td>\n                      </ng-container>\n  \n  \n                      <ng-container matColumnDef=\"lc\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                          LC Number\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">{{ row.lc }}</td>\n                      </ng-container>\n  \n           \n                      \n  \n                      <ng-container matColumnDef=\"action\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> LC Status </th>\n                        <td mat-cell *matCellDef=\"let row\"> \n                          <button mat-button color=\"primary\" id={{row.order}} *ngIf=\"row.LC === '0'\" >View LC</button>\n            \n                          <label *ngIf=\"row.LC === '2'\"  style=\"color:green;font-weight:bold\">\n                            Funds Transferred\n                          </label>\n  \n                          <button mat-button color=\"primary\" id={{row.order}} *ngIf=\"row.LC === '1'\" (click)=advisoryConfirmation(row)>Confrim Fund Transfer</button>\n                         \n                          <!--Confirmed / not confirmed beneficiery present condition check doesnt work \n                            <button mat-button color=\"primary\" id={{row.order}} *ngIf=\"row.LC === '1' && row.beneficiery != 'NA'\" (click)=advisoryConfirmation(row)>Confrim Fund Transfer</button>\n\n\n                          <button mat-button color=\"primary\" id={{row.order}} *ngIf=\"row.LC === '1' && row.beneficiery === 'NA'\" disabled>Confrimed</button>\n                            -->\n                        </td>\n                      </ng-container>\n  \n  \n  \n  \n  \n                      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                      <tr\n                        mat-row\n                        *matRowDef=\"let row; columns: displayedColumns\"\n                      ></tr>\n  \n                      <!-- Row shown when there is no matching data. -->\n                      <!-- <tr class=\"mat-row\" *matNoDataRow>\n                        <td class=\"mat-cell\" colspan=\"4\">\n                          No data matching the filter \"{{ input.value }}\"\n                        </td>\n                      </tr> -->\n                    </table>\n  \n                  </div>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n                  \n\n              </div>\n            </mat-card>\n\n            </div>\n            <!-- <div class=\"col-lg-2\">\n            </div> -->\n\n  \n          </div>\n          <!-- <mat-divider [vertical]=\"true\"></mat-divider> -->\n  \n        </div>\n      </div>\n  \n      <!-- </mat-card> -->\n    </div>\n  </mat-sidenav-container>","\nimport { Component, Input, OnInit } from '@angular/core';\nimport { LoaderService } from './loader.service';\nimport { Loader } from './loader.model';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  @Input() public id: string = 'global';\n  // *@Input* — () id: string;\n\n  public show: boolean = false;\n  public shipperShow: boolean = false;\n  public carrierShow: boolean = false;\n  public portShow: boolean = false ;\n  public consigneeShow: boolean = false;\n  public bankShow: boolean = false;\n  \n  \n\n  constructor(private loaderService: LoaderService) {\n  }\n\n  public ngOnInit(): void {\n    this.loaderService.loaderStatus$.subscribe((response: Loader) => {\n      if (response.id === 'startingLoader') {\n        this.show = this.id === response.id && response.status;\n      }\n      if (response.id === 'shipperLoader') {\n        this.shipperShow = this.id === response.id && response.status;\n      }\n      if (response.id === 'carrierLoader') {\n        this.carrierShow = this.id === response.id && response.status;\n      }\n      if (response.id === 'portLoader') {\n        this.portShow = this.id === response.id && response.status;\n      }\n      \n      if (response.id === 'consigneeLoader') {\n        this.consigneeShow = this.id === response.id && response.status;\n      }\n      if (response.id === 'bankLoader') {\n        this.bankShow = this.id === response.id && response.status;\n      }\n\n    });\n  }\n\n}\n","\n<!-- Initial Page Loader -->\n\n<div *ngIf=\"show\" class=\"preloader\" [ngClass]=\"{global: id === 'startingLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n<div *ngIf=\"shipperShow\" class=\"preloader3\" [ngClass]=\"{global: id === 'shipperLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n\n<div *ngIf=\"carrierShow\" class=\"preloader4\" [ngClass]=\"{global: id === 'carrierLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n<div *ngIf=\"portShow\" class=\"preloader5\" [ngClass]=\"{global: id === 'portLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n<div *ngIf=\"consigneeShow\" class=\"preloader1\" [ngClass]=\"{global: id === 'consigneeLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n<div *ngIf=\"bankShow\" class=\"preloader2\" [ngClass]=\"{global: id === 'bankLoader'}\">\n    <div class=\"loader\"></div>\n</div>\n\n\n\n\n\n\n<!-- -->\n<!-- <div class=\"preloader\">\n    <div class=\"loader\"></div>\n  </div> -->\n<!-- <div *ngIf=\"show\" class=\"preloader\"\n  [ngClass]=\"{global: id === 'global'}\">\n<div class=\"loader\"></div>\n\n</div> -->\n<!-- Loader 10 sample loader not showing properly -->\n<!-- <div *ngIf=\"show\" class=\"preloader\" [ngClass]=\"{global: id === 'startingLoader'}\">\n        <div class=\"container\">\n            <br/>\n            <br/>\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n    \n                    <div class=\"loader10\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n    \n                </div>\n            </div>\n            <br/>\n            <br/>\n        </div>\n    \n    </div> -->","import { Component, OnInit,Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n@Input() sellerSignedIn :boolean;\n@Input() consigneeLoggedIn : boolean;\n@Input() SignedIn : boolean;\n@Input() Register : boolean;\n\n\n  visible:boolean = true;\n  constructor(private router: Router,public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  \n\n  goToSignup(page:string):void{\n    // console.log(page)\n    this.Register=true;\n    this.visible = this.visible?false:true;\n    // this.router.navigate([`${page}`]);\n    this.router.navigate(['signupmodal']);\n  }\n\n}\n","     <!-- <mat-toolbar color=\"primary\">\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span>TradeTrip</span>\n      <span class=\"example-spacer\"></span>\n      <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n        <mat-icon>favorite</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\" (click)=\"goToSignup('signup')\">\n        <mat-icon>perm_identity</mat-icon>\n      </button>\n    </mat-toolbar> -->\n\n    <!-- For Consignee/Landing -->\n<mat-toolbar color=\"primary\" style=\"min-height: 55px !important; height: 55px !important;\" class=\"mat-elevation-z6\" *ngIf=\"!SignedIn||consigneeLoggedIn\" >\n  <button mat-icon-button  *ngIf=\"SignedIn\" class=\"example-icon\"  aria-label=\"Example icon-button with menu icon\">\n    <mat-icon>menu</mat-icon>\n  </button>\n  <img src=\"../assets/images/logo.png\" style=\"width:150px;height:50px\">\n\n  <span class=\"example-spacer\"></span>\n  <button mat-button (click)=\"openDialog()\" *ngIf=\"!SignedIn\">SIGNUP\n  <span class=\"material-icons\">\napp_registration\n</span>\n  </button>\n<!-- For Consignee -->\n<div class=\"example-button-container\" *ngIf=\"consigneeLoggedIn\">\n  <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a filter list icon\">\n    <mat-icon>user</mat-icon>\n  </button>\n</div>\n<h1 *ngIf=\"consigneeLoggedIn\">Consignee Name</h1>\n<button *ngIf=\"consigneeLoggedIn\" mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\" *ngIf=\"consigneeLoggedIn\">\n  <button mat-menu-item>\n    <mat-icon matBadge=\"15\">shopping_cart</mat-icon>\n    <span>My Cart\n    </span>\n  </button>\n  <button mat-menu-item disabled>\n    <mat-icon>voicemail</mat-icon>\n    <span>Check voice mail</span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon>notifications_off</mat-icon>\n    <span>Disable alerts</span>\n  </button>\n</mat-menu>\n\n</mat-toolbar>\n<!-- For Seller -->\n<mat-toolbar *ngIf=\"SignedIn && sellerSignedIn\">\n\n  <i class=\"material-icons\">dashboard</i>\n  SellerDashboard\n</mat-toolbar>\n","import { Component, OnInit , Input} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ShlistDialogComponent } from '../shlist-dialog/shlist-dialog.component';\n\n@Component({\n  selector: 'landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n  @Input() name: string;\n\n  constructor(public dialog: MatDialog, private router :Router) { }\n\n  // openSList(){\n  //   let dialogRef = this.dialog.open(ShlistDialogComponent);\n  //   dialogRef.afterClosed().subscribe(result =>{\n  //     console.log(`Dialog res: ${result}`);\n  //   })\n  // }\nRegister=false;\n  openSList(page:string):void{\n    console.log(page)\n    // this.visible = this.visible?false:true;\n    this.router.navigate([`${page}`]);\n  }\n\n  ngOnInit(): void {\n    // console.log(\"call\")\n  }\n\n}\n","\n  <mat-sidenav-container class=\"example-container\"  >\n    <mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\">\n      <p>Auto-resizing sidenav</p>\n      <button mat-raised-button>\n        Toggle extra text\n      </button>\n    </mat-sidenav> \n\n      <mat-card class=\"example-card\">\n        <mat-card-title>\n          <img src=\"../../assets/images/logo.png\">\n          <p>TradeTrip is a crossborder platform which digitises <br>\n            and automates trade while reducing transaction costs and paper work</p>\n            <!-- <p>From Parent {{name}}</p> -->\n          <!-- <button mat-raised-button color=\"primary\" (click)=\"openSList('signup')\">SIGN UP</button>  -->\n          <a mat-raised-button color=\"primary\" [routerLink]=\"[ 'user/register' ]\" routerLinkActive=\"active\">SIGN UP</a>\n\n        </mat-card-title>\n      </mat-card>\n    </mat-sidenav-container>\n\n\n  ","import { Injectable } from '@angular/core';\n// import { BehaviorSubject } from 'rxjs/BehaviorSubject';\n// import { BehaviorSubject } from 'rxjs/Rx'\nimport { BehaviorSubject } from 'rxjs'\n\nimport { Loader } from './loader.model';\n\n@Injectable()\nexport class LoaderService {\n  private loader = new BehaviorSubject<Loader>({id: 'global', status: false});\n\n  loaderStatus$ = this.loader.asObservable();\n\n  constructor() {\n\n  }\n\n  /**\n   * Show loader\n   * @param {string} id\n   */\n  public showLoader(id: string = 'global'): void {\n    this.loader.next({id, status: true});\n  }\n\n  /**\n   * Hide loader\n   * @param {string} id\n   */\n  public hideLoader(id: string = 'global'): void {\n    this.loader.next({id, status: false});\n  }\n}","import { Component, OnInit,Inject,ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport {MaterialModule} from \"../../material/material.module\";\nimport { Web3Service } from 'src/app/service/web3.service';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatAccordion} from '@angular/material/expansion';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport { ApiService } from 'src/app/service/api.service';\n\n@Component({\n  selector: 'app-loginfo',\n  templateUrl: './loginfo.component.html',\n  styleUrls: ['./loginfo.component.css']\n})\nexport class LoginfoComponent implements OnInit {\n  logsData = [];\nLEI: any;\n  splitLog=[];\n  resultArray=[];\n  displayedColumns: string[] = [ 'position','action','usertype','company','date'];\n  dataSource: MatTableDataSource<any>;\n@ViewChild(MatPaginator) paginator: MatPaginator;\n@ViewChild(MatSort) sort: MatSort;\n  constructor( fb: FormBuilder,private activatedRoute: ActivatedRoute,public loaderService: LoaderService, private route:Router,private backend:BackendService ,\n    private web3: Web3Service, \n    private ipfs: IpfsService,\n    private apiService:ApiService,\n    private cd: ChangeDetectorRef,\n    @Inject(MAT_DIALOG_DATA) public dialoglei: any) {}\n   \n  ngOnInit(): void {\n    this.loaderService.showLoader('bankLoader');\n\n    console.log('ngoninit');\n    console.log(this.dialoglei.dataKey)\n    var LEINo=this.dialoglei.dataKey;\n        console.log(LEINo);\n        this.LEI=LEINo;\n     this.apiService.getLogs(this.LEI).subscribe((result:any) => {\n      console.log('Log Info');\n      console.log(result);\n      this.logsData = result;\n\n      this.dataSource = new MatTableDataSource(result);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n      this.cd.detectChanges();\n      this.loaderService.hideLoader('bankLoader');\n\n    })\n      \n   \n   \n  }\n\n}\n","<div class=\"loaders\">\n\n    <div class=\"bankLoader\">\n      <app-loader [id]=\"'bankLoader'\"></app-loader>\n    </div>\n  </div> \n  \n<h2 mat-dialog-title>\n        <mat-dialog-actions align=\"end\">\n            <mat-icon mat-dialog-close style=\"float:left\">close</mat-icon>\n    \n        </mat-dialog-actions>\n    </h2>\n    \n    <mat-dialog-content class=\"mat-typography\">\n        <div class=\"example-sidenav-content\">\n                <div class=\"main-content\">\n                    <div class=\"container-fluid\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n    \n                                <h2>LEI Logs</h2>\n                                LEI &nbsp;: &nbsp;<label><b>{{LEI}}</b></label>\n    \n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                                <mat-card>\n                                    <div class=\"mat-elevation-z8\">\n                                        <div style=\"overflow-x:auto;\">\n                                            <table mat-table [dataSource]=\"dataSource\" class=\"table\" matSort>\n    \n    \n                                                <!-- Name Column -->\n                                                <!-- <ng-container matColumnDef=\"bolno\">\n                                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> BOLNo </th>\n                                                    <td mat-cell *matCellDef=\"let element\"> {{element[1]}} </td>\n                                                </ng-container> -->\n    \n                                                <ng-container matColumnDef=\"position\">\n                                                    <th mat-header-cell *matHeaderCellDef> # </th>\n                                                    <td mat-cell *matCellDef=\"let element; let i = index\"> {{(i+1) + (paginator.pageIndex*paginator.pageSize)}} </td>\n                                                  </ng-container>\n                                                <ng-container matColumnDef=\"action\">\n                                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>DB Status </th>\n                                                    <td mat-cell *matCellDef=\"let element\"> {{element.pastRecord}} </td>\n                                                </ng-container>\n\n                                                <ng-container matColumnDef=\"usertype\">\n                                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Current Status</th>\n                                                    <td mat-cell *matCellDef=\"let element\" matTooltip=\"{{element.currentRecord}}\"> {{element.currentRecord}} </td>\n                                                </ng-container>\n                                                <ng-container matColumnDef=\"company\">\n                                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Wallet </th>\n                                                    <td mat-cell *matCellDef=\"let element\"> {{element.wallet}} </td>\n                                                </ng-container>\n                                                \n                                                <ng-container matColumnDef=\"date\">\n                                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                                                    <td mat-cell *matCellDef=\"let element\">  {{element.dateVerified  | date:'medium' }}</td>\n                                                </ng-container>\n                                                <!-- | date:'dd/MM/yyyy'}}  -->\n                                                 \n        \n                                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n                                                       \n<!-- \n                                                <ng-container matColumnDef=\"wallet\">\n                                                        <th mat-header-cell *matHeaderCellDef mat-sort-header>User Wallet </th>\n                                                        <td mat-cell *matCellDef=\"let element\"> {{element[0]}} </td>\n                                                    </ng-container>\n     -->\n                                                <!-- \n     -->\n                                                <!-- <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':listData!=null}\"></mat-footer-row>\n          <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(listData!=null && listData.data.length==0)}\"></mat-footer-row> -->\n                                            </table>\n                                            <mat-paginator #paginator [pageSize]=\"4\" [pageSizeOptions]=\"[4, 8, 20, 40, 100]\"></mat-paginator>\n      \n                                        </div>\n                                    </div>\n                                </mat-card>\n    \n                               \n                            </div>\n    \n                            \n                        </div>\n                    </div>\n                </div>\n    \n        </div>\n    </mat-dialog-content>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvisoryTransactionComponent } from './bank/advisory-transaction/advisory-transaction.component';\nimport { BankDashboardComponent } from './bank/bank-dashboard/bank-dashboard.component';\nimport { IssuingTransactionComponent } from './bank/issuing-transaction/issuing-transaction.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserRegisterComponent } from './user/user-register/user-register.component';\nimport { AnalyticsComponent } from './bank/analytics/analytics.component';\nimport { LeiIssueComponent } from './bank/lei-issue/lei-issue.component';\nimport { TransactionIssueComponent } from './bank/transaction-issue/transaction-issue.component';\nimport { TransactionHistoryComponent } from './bank/transaction-history/transaction-history.component';\nimport { HistoryComponent } from './bank/history/history.component';\nimport { RolesComponent } from './bank/roles/roles.component';\n\n\nconst routes: Routes = [\n  {path:'', component:LandingPageComponent},\n  {path:'user/login', component:UserLoginComponent},\n  {path:'user/register', component:UserRegisterComponent},\n  { path:'bank_dashboard',component:BankDashboardComponent},//just for demo routing page\n  { path:'bank_dashboard/:id',component:BankDashboardComponent},//just for demo routing page\n  { path:'issuing_transaction',component:IssuingTransactionComponent},//just for demo routing page\n  { path:'advisory_transaction',component:AdvisoryTransactionComponent},//just for demo routing page\n  // { path:'lcview',component:LcviewComponent},//just for demo routing page\n  { path:'analytics',component:AnalyticsComponent},\n  { path:'lei_issue',component:LeiIssueComponent},\n  { path:'tranasaction_issue',component:TransactionIssueComponent},\n  { path:'transaction_history',component:TransactionHistoryComponent},\n  \n  { path:'history/:id',component:HistoryComponent},\n  { path:'roles',component:RolesComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport {AfterViewInit, ViewChild} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { IpfsService } from 'src/app/service/ipfs.service';\nimport {MaterialModule} from \"../../material/material.module\";\nimport { LoaderService } from 'src/app/loader/loader.service';\nimport { BackendService } from 'src/app/service/backend.service';\nimport { Web3Service } from 'src/app/service/web3.service';\n\ndeclare var Buffer;\n@Component({\n  selector: 'app-transaction-history',\n  templateUrl: './transaction-history.component.html',\n  styleUrls: ['./transaction-history.component.css']\n})\nexport class TransactionHistoryComponent implements OnInit {\n  showFiller = false;\n  isExpanded = false;\n  ipfsConverted: any;\n  bankName:string;\n  userName:string;\n  bankMail:string;\n  // public chartType: string = 'line';\n  // this.bankName =;\n  ngOnInit(){   \n     this.loaderService.showLoader('bankLoader');\n\n\n    this.route.params.subscribe(params => {\n      console.log(params);\n      console.log(params['id']);\n      if (params['id']) {\n         // getHashFromIPFS\n          this.ipfs.getHashFromIPFS(params['id']).then((data:any)=>{\n            this.ipfsConverted = JSON.parse(Buffer.from(data.value.buffer).toString());\n          console.log(this.ipfsConverted );\n          this.bankName =this.ipfsConverted.bankName;\n          this.bankMail = this.ipfsConverted.email;\n          this.userName =this.ipfsConverted.firstName+\" \"+this.ipfsConverted.lastName;\n          this.loaderService.hideLoader('bankLoader');\n\n          })\n\n\n      }\n    });\n  }\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ipfsConverted2: any;\n  accountNumber:any;\n  userinfo:any;\n  public registration: any;\n\n  constructor(private web3: Web3Service, \n    public backend: BackendService,\n    public router:Router,\n    public loaderService: LoaderService,\n    private ipfs: IpfsService,\n    private cd: ChangeDetectorRef,\n    public AppComponent:AppComponent,\n    private route: ActivatedRoute,\n\n  public dialog: MatDialog) { \n    console.warn(\"calling order constra\");\n    this.web3.checkAndInstantiateWeb3()\n    .then((checkConn: any) => {\n      console.log(checkConn)\n      if (checkConn === 'connected') {\n        this.web3.loadBlockChainData()\n          .then((accountData: any) => {\n            console.log(accountData[0])\n            this.accountNumber = accountData[0];\n           \n            this.web3.getAllContract()\n              .then((contractRes: any) => {\n                if (contractRes) {\n                  console.log(contractRes)\n                  this.registration = contractRes[1];\n                  this.registration.methods.getUserHashType(this.accountNumber)\n                  .call()\n                  .then(user =>{\n                 \n                    console.log('user');\n                    console.log(user);\n                    if(!user[0]){\n                    \n                    }else{\n                      console.log('user');\n                      console.log(user);\n\n                     this.ipfs.getHashFromIPFS(user[0]).then((data:any)=>{\n                      this.ipfsConverted2 = JSON.parse(Buffer.from(data.value.buffer).toString());\n                      console.log(this.ipfsConverted2 );\n                       this.userinfo = user[0];\n                    })\n                    }\n                  });\n                  }\n              });\n          }, err => {\n            console.log('account error', err);\n          });\n      }\n    }, err => {\n      alert(err);\n    });\n  }\nviewIssuing(){\n  console.log('in view url');\n  this.router.navigate(['issuing_transaction']);\n\n}\nviewAdvisory(){\n  this.router.navigate(['advisory_transaction']);\n\n}\n\nviewBidsTable(){\n  this.router.navigate(['bids_table']);\n}\n\ngetDBAPI(){\n  this.router.navigate(['analytics']);\n\n  // this.backend.getDBAPI().subscribe((result) => {\n  //   console.log(result);\n  // });\n}\nredirectDashboard(){\n  this.router.navigate(['bank_dashboard',{id:this.userinfo}]);\n}\n}\n","<div class=\"loaders\">\n\n  <div class=\"bankLoader\">\n    <app-loader [id]=\"'bankLoader'\"></app-loader>\n  </div>\n</div> \n <mat-sidenav-container class=\"example-container\">\n\n    <mat-sidenav #sidenav class=\"example-sidenav\"  disableClose=\"true\" opened=\"true\" mode=\"side\">\n     <!-- <button mat-mini-fab (click)=\"isExpanded = !isExpanded\" style=\"margin: 10px;\">\n    <mat-icon class=\"navicon\" aria-label=\"Menu\">menu</mat-icon>\n  </button> -->\n\n  <mat-nav-list>\n\n    <mat-list-item >\n        <mat-icon class=\"navicon \" (click)=\"isExpanded = !isExpanded\" mat-list-icon matTooltip=\"Expand\">menu</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\"> </h4>\n\n    </mat-list-item>\n    <mat-list-item >\n      <mat-icon class=\"navicon\"  mat-list-icon matTooltip=\"Dashboard\"  (click)=\"redirectDashboard()\">dashboard</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\"> Dashboard</h4>\n    </mat-list-item>\n    <mat-list-item>\n      <mat-icon class=\"navicon active\" matTooltip=\"Transaction History\"  (click)=\"redirectDashboard()\" mat-list-icon>swap_horiz</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Transaction</h4>\n    </mat-list-item>\n\n    <mat-list-item>\n        <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Balance\">paid</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Balance</h4>\n      </mat-list-item>\n      <mat-list-item>\n        <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Analytics\">analytics</mat-icon>\n        <h4 mat-line *ngIf=\"isExpanded\">Analytics</h4>\n      </mat-list-item>\n      <!-- <mat-list-item>\n      <mat-icon class=\"navicon\" mat-list-icon matTooltip=\"Invoice\">receipt_long</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Invoice</h4>\n    </mat-list-item> -->\n  \n\n    <mat-list-item>\n      <mat-icon class=\"navicon\"mat-list-icon matTooltip=\"Report\" routerLink=\"/bank/report\">summarize</mat-icon>\n      <h4 mat-line *ngIf=\"isExpanded\">Report</h4>\n    </mat-list-item>\n    \n  </mat-nav-list>\n\n    </mat-sidenav>\n\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"breadcrumb\">\n        <li class=\"breadcrumb-item\"><a  (click)=\"redirectDashboard()\">Home</a></li>\n        <li class=\"breadcrumb-item\" aria-current=\"page\">MarketPlace</li>\n        <!-- <li class=\"right\">\n        <img class=\"img-responsive profileimg\" src=\"../../../assets/images/SLIDE.jpg\" alt=\"Avatar\" mat-mini-fab style=\"width:60px;height:60px;padding-bottom: 5px;\">\n        </li> -->\n        <!-- <li style=\"text-align: right;\">\n        <h6>BankName</h6>\n        </li> -->\n      </ol>\n\n    </nav>\n\n    <div class=\"example-sidenav-content\">\n      <div class=\"example-card\">\n        <div class=\"main-content\">\n          <div class=\"container-fluid\">\n\n                    <div class=\"row\">\n                        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n                          <h3 style=\"padding: 10px 10px 10px 10px;\">Market Place: List of Orders Published</h3>\n\n    <mat-card>\n        <!-- <div class=\"mat-elevation-z8\">\n          <div style=\"overflow-x:auto;\">\n              \n                      <table mat-table [dataSource]=\"dataSource\"   matSort>\n\n\n\n\n                        <ng-container matColumnDef=\"pubDate\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row[16] | date:'dd/MM/yyyy'}} </td>\n                        </ng-container> \n\n                        <ng-container matColumnDef=\"endDate\">\n                          <th mat-header-cell *matHeaderCellDef mat-sort-header> End Date </th>\n                          <td mat-cell *matCellDef=\"let row\"> {{row[15] | date:'dd/MM/yyyy'}} </td>\n                        </ng-container> \n        \n\n            <ng-container matColumnDef=\"order\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Order </th>:\n              <td mat-cell *matCellDef=\"let row\"> {{row[1]}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"buyer\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Buyer </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row[2]}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"seller\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Seller </th>\n              <td mat-cell *matCellDef=\"let row\"> {{row[3]}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"spl\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Packing List </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <label *ngIf=\"row[5]=='NA' else elseBlock\">Not Available</label>\n                <ng-template #elseBlock>\n                  <button mat-button color=\"primary\" routerLink=\"/documents/packing-list-doc/{{row[1]}}\">{{row[5]}}</button>\n                 \n                </ng-template>\n              </td>\n            </ng-container>\n            \n            <ng-container matColumnDef=\"bol\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Bill of Lading </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <label *ngIf=\"row[6]=='NA' else elseBlock2\">Not Available</label>\n                <ng-template #elseBlock2>\n                  <button mat-button color=\"primary\" routerLink=\"/documents/bill-of-lading/{{row[1]}}\">{{row[6]}}</button>\n\n                </ng-template>\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"ci\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Commercial Invoice </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <label *ngIf=\"row[7]=='NA' else elseBlock3\">Not Available</label>\n                <ng-template #elseBlock3>\n                  <button mat-button color=\"primary\" routerLink=\"/documents/commercial-invoice-doc/{{row[1]}}\">{{row[7]}}</button>\n\n                </ng-template>\n              </td>\n            </ng-container>\n         \n            <ng-container matColumnDef=\"action\">\n              <th mat-header-cell *matHeaderCellDef style=\"padding-right: 20px\"> BID </th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell>\n                  <button mat-icon-button *ngIf=\"!row[0][0] && !row[17]\" routerLink=\"/bank/place_bid/{{row[1]}}\">Place BID<mat-icon>launch</mat-icon></button> \n                  <button mat-icon-button *ngIf=\"row[0][0] && !row[11][1]\" routerLink=\"/bank/check_bid/{{row[1]}}\">Check<mat-icon>launch</mat-icon></button> \n                  <button mat-icon-button *ngIf=\"row[0][0] && row[11][1] && row[11][4] == row[12]\" routerLink=\"/bank/check_bid/{{row[1]}}\">Bid Approved</button> \n                  <button mat-icon-button *ngIf=\"row[0][0] && row[11][1] && row[11][4] != row[12]\" >Bid Rejected</button> \n                </td>\n              </ng-container>\n              \n            </ng-container>\n\n            <ng-container matColumnDef=\"transfer\">\n              <th mat-header-cell *matHeaderCellDef> Transfer</th>\n              <ng-container *matCellDef=\"let row\">\n                <td mat-cell>\n                  <button mat-icon-button *ngIf=\"row[0][0] && row[11][1] && row[11][4] == row[12] && row[0][4] == '0'\">Not Available</button> \n                  <button mat-icon-button *ngIf=\"row[0][0] && row[11][1] && row[11][4] == row[12] && row[0][4] !=0 && !row[0][2]\" (click)=\"transferFund({order:row[1],bene:row[3],seller:row[13]})\">Transfer Fund</button> \n                  <button mat-icon-button *ngIf=\"row[0][0] && row[11][1] && row[11][4] == row[12] && row[0][4] !=0 && row[0][2]\" >Fund Transfered</button> \n                 </td>\n              </ng-container>\n             \n            </ng-container>\n   \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" style=\"padding: 15px;\"></tr>\n\n          </table>\n          </div>\n\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n        </div> -->\n      </mat-card>\n\n</div>\n\n</div>\n\n</div>\n                    </div>\n\n                  </div>\n\n    </div>\n\n\n\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from '../app-routing.module';\nimport { AppComponent } from '../app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from \"../material/material.module\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\nimport { BankDashboardComponent } from './bank-dashboard/bank-dashboard.component';\nimport { AdvisoryTransactionComponent } from './advisory-transaction/advisory-transaction.component';\nimport { IssuingTransactionComponent } from './issuing-transaction/issuing-transaction.component';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { LoaderModule } from '../loader/loader.module';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { LeiIssueComponent } from './lei-issue/lei-issue.component';\nimport { TransactionIssueComponent } from './transaction-issue/transaction-issue.component';\nimport { TransactionHistoryComponent } from './transaction-history/transaction-history.component';\nimport { HistoryComponent } from './history/history.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { LoginfoComponent } from './loginfo/loginfo.component';\n\n// LcviewComponent\n@NgModule({\n  declarations: [BankDashboardComponent, AdvisoryTransactionComponent, IssuingTransactionComponent, \n    AnalyticsComponent, LeiIssueComponent, TransactionIssueComponent, TransactionHistoryComponent, \n    HistoryComponent, RolesComponent,LoginfoComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    MaterialModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,LoaderModule\n  ]\n})\nexport class BankModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}